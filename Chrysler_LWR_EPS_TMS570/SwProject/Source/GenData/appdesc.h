/* -----------------------------------------------------------------------------
  Filename:    appdesc.h
  Description: Interface towards the application used by CANdesc.
                
                Manufacturer: chrysler
                EcuDocFile:   E:\__SandBox__\MyCustomerProjects\Nxtr\Chrysler_LWR_EPS_TMS570-tzj9qy_synergy\Chrysler_LWR_EPS_TMS570\Tools\AsrProject\GENy\EPS_PN_41_02_002_E_VV5887.cdd
                Variant:      Common_Diagnostics

  Generated by CANdelaGen, Sun Jul 29 14:32:09 2012
 
 ----------------------------------------------------------------------------- */
/* -----------------------------------------------------------------------------
  C O P Y R I G H T
 -------------------------------------------------------------------------------
  Copyright (c) 2001-2012 by Vctr Informatik GmbH. All rights reserved.
 
  This software is copyright protected and proprietary to Vctr Informatik 
  GmbH.
  
  Vctr Informatik GmbH grants to you only those rights as set out in the 
  license conditions.
  
  All other rights remain with Vctr Informatik GmbH.
 -------------------------------------------------------------------------------
 ----------------------------------------------------------------------------- */

#if !defined(__APPDESC_H__)
#define __APPDESC_H__

/* -----------------------------------------------------------------------------
    &&&~ Configuration switches
 ----------------------------------------------------------------------------- */

#if !defined(__DESC_H__)
# error "Include sequence error! You must include desc.h before appDesc.h."
#endif



/* -----------------------------------------------------------------------------
    &&&~ Preprocessor constants (defines)
 ----------------------------------------------------------------------------- */

/* This magic number provides inter CANdesc generation process consistency check.All CANdesc files must have the same one. */
#define DESC_APPLICATION_INTERFACE_MAGIC_NUMBER                      31611


/* -----------------------------------------------------------------------------
    &&&~ Function prototypes
 ----------------------------------------------------------------------------- */

#if defined (DESC_ENABLE_DEBUG_USER ) || defined (DESC_ENABLE_DEBUG_INTERNAL)
/* Assertion function for better integration support. */
void DESC_API_CALLBACK_TYPE ApplDescFatalError(vuint8 errorCode, vuint16 lineNumber);
#endif

#if defined (DESC_ENABLE_SPONTANEOUS_RES)
void DESC_API_CALLBACK_TYPE ApplDescSpontaneousResponseConfirmation(DESC_CONTEXT_FORMAL_PARAM_DEF_FIRST vuint8 status);
#endif

vuint8 DESC_API_CALL_TYPE ApplDescInitPosResFblBusInfo(t_descUsdtNetBus* pBusInfo);

/* After the configured time of RCR-RP transmissions has been elapsed the application will be notified that there is no more response to be awaited. */
void DESC_API_CALLBACK_TYPE ApplDescResponsePendingOverrun(void);
void DESC_API_CALLBACK_TYPE ApplDescOnTransitionSession(DescStateGroup newState, DescStateGroup formerState);
void DESC_API_CALLBACK_TYPE ApplDescOnTransitionSecurityAccess(DescStateGroup newState, DescStateGroup formerState);
/* Whithin this function will be checked if the SId is one of the user specific ones. */
vuint8 DESC_API_CALLBACK_TYPE ApplDescCheckUserService(DescMsgItem sid);
void DESC_API_CALLBACK_TYPE ApplDescEcuResetHard(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescEcuResetSoft(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescEcuResetNxtr_ECU_Reset(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidPPPA_signals(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidHaLF_Signals(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidDST_Signals(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidDID_D100_Active_Diagnostic_Session(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidDID_F110_On_line_Diagnostic_Database_Reference_Number(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidDID_F111_ECU_Core_Assembly_Number(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDid_22F112_Hardware_Part_Number(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidDID_F113_ECU_Delivery_Assembly_Number(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDid_22F150_Hardware_Version_Information(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDid_2EF15A_Write_Software_Fingerprint(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidDID_F162_Software_Download_Specification_Version(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidDID_F163_Diagnostic_Specification_Version(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDid_22F18C_ECU_Serial_Number(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FD01_Internal_Software_Id(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FD02_Serial_Comm_Service_Active(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FD04_EOL_Sin_Cos_Motor_Param(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FD05_EOL_Torque_Sensor_Analog(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FD07_EOL_Polarity(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FD08_EOL_Torque_Sensor_Scaling_Analog(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FD09_Learned_Ke(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FD0A_Learned_R(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FD0B_EOL_Wheel_Imbalance_Select(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FD0C_Analog_Ke_R_and_L(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FD0E_Motor_Stiffness_Check(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FD0F_ECU_Hardware_Description_Table(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FD10_Nxtr_CCP_XCP_Transmit_and_Receive_IDs(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FD12_Current_Mode_Offset_and_Gain(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FD13_Read_Nxtr_DTCs(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FD14_Turns_Counter_Vehicle_System_Status(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FD15_EOL_Torque_Sensor_Digital(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FD16_EOL_Torque_Sensor_Scaling_Digital(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FD19_Nxtr_Manufacturing_Enable_Counter_MEC(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FD1A_System_State(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FD1B_Manual_Vehicle_Speed_Override(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FD1C_Manufacturing_Services_Version(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FD1D_EPS_Return_Command(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FD1E_Torque_Sensor_Diagnostic_Defeat(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FD1F_Serial_Comm_Handwheel_Position_Defeat(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FD21_Vehicle_Tuning_Select(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FD25_Motor_Torque_Scale_Factor(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FD26_Average_Friction_Learning_Select(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FD27_Friction_Offset_Output_Defeat(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FD29_Set_EOL_Friction_Learned(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FD41_Torque_Sensor_1_and_2(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FDA1_ECU_Serial_Number(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FDA2_EPS_Serial_Number(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FDA3_ECU_Hardware_Part_Number(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FDA5_Shunt_Current_and_Offset_Gain(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FDAC_Nxtr_Manufacturing_Scratch_Pad(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FDAD_Active_Pull_Compensation(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FDAE_Ignition_Counter(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FDAF_Nxtr_Fault_Information_Black_Box(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FDB0_IPM_Cogging_Tbl_1(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FDB1_IPM_Cogging_Tbl_2(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FDB2_IPM_Cogging_Tbl_3(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FDB3_IPM_Cogging_Tbl_4(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FDB4_Current_Mode_Analog_Ke_R_Ld_and_Lq(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FDB5_Active_Pull_Set_Short_Term_Comp(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FDB6_Active_Pull_Set_Long_Term_Comp(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FDE1_WIR_Disable(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FDE2_Torque_Overlay_Feature_Disable(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteDidNxtr_FDE4_Drift_Pull_Disable(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescIoCtrlRetCtrlToEcuNxtr_FD0D_Control_Motor_Torque_Command(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescIoCtrlShortTermAdjNxtr_FD0D_Control_Motor_Torque_Command(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescIoCtrlRetCtrlToEcuNxtr_FD11_Assist_Gain_Command(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescIoCtrlShortTermAdjNxtr_FD11_Assist_Gain_Command(DescMsgContext* pMsgContext);
/* Request length check can not be performed. Please, implement length check in your Main-Handler!! */
void DESC_API_CALLBACK_TYPE ApplDescRequestDownload(DescMsgContext* pMsgContext);
/* Request length check can not be performed. Please, implement length check in your Main-Handler!! */
void DESC_API_CALLBACK_TYPE ApplDescTransferData(DescMsgContext* pMsgContext);
/* Request length check can not be performed. Please, implement length check in your Main-Handler!! */
void DESC_API_CALLBACK_TYPE ApplDescRequestTransferExit(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescUserServiceHandler(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescPostUserServiceHandler(vuint8 status);
/* Application condition checks */
void DESC_API_CALLBACK_TYPE ApplDescCheckCommCtrl(DESC_CONTEXT_FORMAL_PARAM_DEF_FIRST DescOemCommControlInfo *commControlInfo);

#if defined (DESC_ENABLE_COMM_CTRL_SUBNET_SUPPORT)
void DESC_API_CALLBACK_TYPE ApplDescSetCommMode(DescOemCommControlInfo *commControlInfo);
#endif

#if defined (DESC_ENABLE_RX_COMM_CONTROL)
void DESC_API_CALLBACK_TYPE ApplDescSetCommModeOnRxPath(DescOemCommControlInfo *commControlInfo);
#endif

/* Notification functions */
void DESC_API_CALLBACK_TYPE ApplDescOnCommunicationDisable(void);
void DESC_API_CALLBACK_TYPE ApplDescOnCommunicationEnable(void);

void DESC_API_CALLBACK_TYPE ApplDescCheckSessionTransition(DescStateGroup newState, DescStateGroup formerState);
void DESC_API_CALLBACK_TYPE ApplDescReadDid_220100_Reprogramming_Attempt_Counter(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDid_220103_VIN_Odometer_Counter(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDid_22010B_Adjust_Block_Size_and_STMin_Parameter(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDid_22A001_EPS_Internal_and_Bussed_signals(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidPPPA_signals(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidHaLF_Signals(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidDST_Signals(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidDID_D100_Active_Diagnostic_Session(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDid_22F100_Active_Diagnostic_Information(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDid_22F10B_ECU_Qualification(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDid_22F10D_Diagnostic_Specification_Information(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidDID_F110_On_line_Diagnostic_Database_Reference_Number(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidDID_F111_ECU_Core_Assembly_Number(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDid_22F112_Hardware_Part_Number(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidDID_F113_ECU_Delivery_Assembly_Number(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDid_22F132_ECU_Part_Number(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDid_22F150_Hardware_Version_Information(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDid_22F151_Software_Version_Information(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDid_22F153_Boot_Software_Version_Information(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDid_22F154_Hardware_Supplier_Identification(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDid_22F155_Software_Supplier_Identification(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDid_22F158_Vehicle_Information(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDid_22F15B_Read_Software_Fingerprints(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDid_22F160_Software_Module_Information(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidDID_F162_Software_Download_Specification_Version(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidDID_F163_Diagnostic_Specification_Version(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDid_22F18C_ECU_Serial_Number(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDid_22F190_VIN_Original(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDid_22F1A0_VIN_Current(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FD01_Internal_Software_Id(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FD02_Serial_Comm_Service_Active(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FD04_EOL_Sin_Cos_Motor_Param(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FD05_EOL_Torque_Sensor_Analog(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FD07_EOL_Polarity(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FD08_EOL_Torque_Sensor_Scaling_Analog(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FD09_Learned_Ke(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FD0A_Learned_R(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FD0B_EOL_Wheel_Imbalance_Select(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FD0C_Analog_Ke_R_and_L(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FD0E_Motor_Stiffness_Check(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FD0F_ECU_Hardware_Description_Table(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FD10_Nxtr_CCP_XCP_Transmit_and_Receive_IDs(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FD12_Current_Mode_Offset_and_Gain(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FD13_Read_Nxtr_DTCs(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FD14_Turns_Counter_Vehicle_System_Status(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FD15_EOL_Torque_Sensor_Digital(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FD16_EOL_Torque_Sensor_Scaling_Digital(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FD17_TMS570_Flash_Memory_Size(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FD19_Nxtr_Manufacturing_Enable_Counter_MEC(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FD1A_System_State(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FD1B_Manual_Vehicle_Speed_Override(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FD1C_Manufacturing_Services_Version(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FD1D_EPS_Return_Command(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FD1E_Torque_Sensor_Diagnostic_Defeat(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FD1F_Serial_Comm_Handwheel_Position_Defeat(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FD20_Read_Transient_Overvoltage_Data(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FD21_Vehicle_Tuning_Select(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FD25_Motor_Torque_Scale_Factor(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FD26_Average_Friction_Learning_Select(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FD27_Friction_Offset_Output_Defeat(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FD29_Set_EOL_Friction_Learned(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FD41_Torque_Sensor_1_and_2(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FDA1_ECU_Serial_Number(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FDA2_EPS_Serial_Number(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FDA3_ECU_Hardware_Part_Number(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FDA5_Shunt_Current_and_Offset_Gain(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FDAC_Nxtr_Manufacturing_Scratch_Pad(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FDAD_Active_Pull_Compensation(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FDAE_Ignition_Counter(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FDAF_Nxtr_Fault_Information_Black_Box(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FDB0_IPM_Cogging_Tbl_1(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FDB1_IPM_Cogging_Tbl_2(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FDB2_IPM_Cogging_Tbl_3(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FDB3_IPM_Cogging_Tbl_4(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FDB4_Current_Mode_Analog_Ke_R_Ld_and_Lq(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FDB5_Active_Pull_Set_Short_Term_Comp(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FDB6_Active_Pull_Set_Long_Term_Comp(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FDE0_Steering_Wheel_Active_Pull_Compensation(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FDE1_WIR_Disable(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FDE2_Torque_Overlay_Feature_Disable(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidFDE2_NTC_for_CTC(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDidNxtr_FDE4_Drift_Pull_Disable(DescMsgContext* pMsgContext);
#if defined (DESC_ENABLE_MULTI_CFG_SUPPORT)
/* Additionaly reject a supported PID (multi ECU configuration) */
DescBool ApplDescIsDataIdSupported(vuint16 pid);
#endif

void DESC_API_CALLBACK_TYPE ApplDescRtnCtrlStartRTN_0202_On_Demand_Self_Test(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescRtnCtrlStopRTN_0202_On_Demand_Self_Test(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescRtnCtrlReqResRTN_0202_On_Demand_Self_Test(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescRtnCtrlStart_31010300_Clear_Steering_Pull_Compensation(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescRtnCtrlReqRes_31010300_Clear_Steering_Pull_Compensation(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescRtnCtrlStartEngine_Defeat(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescRtnCtrlStopEngine_Defeat(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescRtnCtrlReqResEngine_Defeat(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescRtnCtrlStartRTN_0304_Check_Valid_Application(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescRtnCtrlStartNxtr_F000_Manufacturing_Service_Reset(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescRtnCtrlStartNxtr_F001_Clear_DTCs(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescRtnCtrlStartNxtr_F002_Torque_Sensor_End_of_Line_Calibration_Analog(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescRtnCtrlStartNxtr_F004_Torque_Sensor_End_of_Line_Calibration_Digital(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescRtnCtrlStartNxtr_F005_DTC_Status_by_Number(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescRtnCtrlStartNxtr_F006_Turns_Counter_Flash_Programming(DescMsgContext* pMsgContext);
/* Request length check can not be performed. Please, implement length check in your Main-Handler!! */
void DESC_API_CALLBACK_TYPE ApplDescRtnCtrlStartNxtr_F007_Turns_Counter_Position_EOL_Calibraiton(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescRtnCtrlStartNxtr_F008_Current_Mode_Current_Gain_Calc(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescRtnCtrlStartNxtr_F009_Current_Mode_Current_Offset_Calc(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescRtnCtrlStopNxtr_F009_Current_Mode_Current_Offset_Calc(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescRtnCtrlReqResNxtr_F009_Current_Mode_Current_Offset_Calc(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescRtnCtrlStartNxtr_F00D_Calculate_Current_Gain(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescRtnCtrlStartNxtr_F00E_Calculate_Current_Offset(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescRtnCtrlStartMPU(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescRtnCtrlStart_3101FF03_Check_Programming_Preconditions(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescRtnCtrlStart_3101FF05_Deactivation_of_Fail_Safe_Reactions(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescRtnCtrlStop_3101FF05_Deactivation_of_Fail_Safe_Reactions(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescRtnCtrlReqRes_3101FF05_Deactivation_of_Fail_Safe_Reactions(DescMsgContext* pMsgContext);


#endif /* __APPDESC_H__ */
