/* -----------------------------------------------------------------------------
  Filename:    dbk_par.h
  Description: Toolversion: 01.00.35.01.21.00.21.01.00.00
               
               Serial Number: CBD1210021
               Customer Info: Nxtr
                              Package: CBD_Chrysler_SLP1_UDS_Sgl
                              Micro: TexasInstruments TMS570 - TMX570LS0805APGEQQ1
                              Compiler: Texas Instruments 4.9.5
               
               
               Generator Fwk   : GENy 
               Generator Module: Il_Dbkom
               
               Configuration   : C:\Synergy\Chrysler_LWR_EPS_TMS570-zz4r1x\Chrysler_LWR_EPS_TMS570\Tools\AsrProject\GENy\Chrsyler_SLP1_EPS.gny
               
               ECU: 
                       TargetSystem: Hw_Tms470/570Cpu (Dcan)
                       Compiler:     TexasInstruments
                       Derivates:    TMS570PSFC66
               
               Channel "Channel0":
                       Databasefile: C:\Synergy\Chrysler_LWR_EPS_TMS570-zz4r1x\Chrysler_LWR_EPS_TMS570\Tools\AsrProject\GENy\CAN C v1232 EPS.dbc
                       Bussystem:    CAN
                       Manufacturer: DaimlerChrysler
                       Node:         EPS

  Generated by , 2013-04-25  11:29:38
 ----------------------------------------------------------------------------- */
/* -----------------------------------------------------------------------------
  C O P Y R I G H T
 -------------------------------------------------------------------------------
  Copyright (c) 2001-2011 by Vctr Informatik GmbH. All rights reserved.
 
  This software is copyright protected and proprietary to Vctr Informatik 
  GmbH.
  
  Vctr Informatik GmbH grants to you only those rights as set out in the 
  license conditions.
  
  All other rights remain with Vctr Informatik GmbH.
 -------------------------------------------------------------------------------
 ----------------------------------------------------------------------------- */

#if !defined(__DBK_PAR_H__)
#define __DBK_PAR_H__

/* -----------------------------------------------------------------------------
    &&&~ Includes
 ----------------------------------------------------------------------------- */

#include "dbk_def.h"


/* -----------------------------------------------------------------------------
    &&&~ Buffer defines to CanSignalsEx table
 ----------------------------------------------------------------------------- */

#define dbkBufferSD_RS_EPS                   (CanSignalsEx[0])
#define dbkBufferEPS_1                       (CanSignalsEx[8])
#define dbkBufferEPS_A1                      (CanSignalsEx[16])
#define dbkBufferVehCfg5                     (CanSignalsEx[24])
#define dbkBufferEcuCfg6                     (CanSignalsEx[32])
#define dbkBufferVehCfg4                     (CanSignalsEx[40])
#define dbkBufferVehCfg3                     (CanSignalsEx[48])
#define dbkBufferVehCfg2                     (CanSignalsEx[56])
#define dbkBufferVehCfg1                     (CanSignalsEx[64])
#define dbkBufferNET_CFG_PT                  (CanSignalsEx[72])
#define dbkBufferENG_CFG                     (CanSignalsEx[80])
#define dbkBufferVIN                         (CanSignalsEx[87])
#define dbkBufferVehCfg7                     (CanSignalsEx[95])
#define dbkBufferCBC_PT1                     (CanSignalsEx[103])
#define dbkBufferGW_LIN_I_C2                 (CanSignalsEx[111])
#define dbkBufferCFG_RQ_C                    (CanSignalsEx[119])
#define dbkBufferCFG_RQ                      (CanSignalsEx[122])
#define dbkBufferIC_A1                       (CanSignalsEx[125])
#define dbkBufferEPB_1                       (CanSignalsEx[133])
#define dbkBufferECM_A3                      (CanSignalsEx[141])
#define dbkBufferECM_INDICATORS              (CanSignalsEx[149])
#define dbkBufferPTS_StrCtrl                 (CanSignalsEx[157])
#define dbkBufferDST_TOC                     (CanSignalsEx[165])
#define dbkBufferHALF_MTO_SteerControl       (CanSignalsEx[173])
#define dbkBufferWHEEL_SPEED_2               (CanSignalsEx[179])
#define dbkBufferCBC_PT3                     (CanSignalsEx[187])
#define dbkBufferTRNS_STAT                   (CanSignalsEx[195])
#define dbkBufferESP_A6                      (CanSignalsEx[203])
#define dbkBufferESP_A4                      (CanSignalsEx[211])
#define dbkBufferTRNS_SPD                    (CanSignalsEx[219])
#define dbkBufferORC_YRS_DATA                (CanSignalsEx[227])
#define dbkBufferESP_A5                      (CanSignalsEx[235])
#define dbkBufferESP_A8                      (CanSignalsEx[243])
#define dbkBufferCBC_PT2                     (CanSignalsEx[251])
#define dbkBufferECM_A1                      (CanSignalsEx[253])
#define dbkBufferSCCM_STW_ANGL_STAT          (CanSignalsEx[261])


/* -----------------------------------------------------------------------------
    &&&~ Extern declarations
 ----------------------------------------------------------------------------- */

#ifdef DBK_ENABLE_TX_CONF_FUNC
/* CODE CATEGORY 1 START */
extern void FrfmRoelConfirmation(void);
/* CODE CATEGORY 1 END */

/* CODE CATEGORY 1 START */
extern void EPS1_PKTConfirmation(void);
/* CODE CATEGORY 1 END */

#endif

#ifdef DBK_ENABLE_RX_IND_FUNC
#endif

#ifdef DBK_ENABLE_RX_TIMEOUT_FUNC
#endif



/* -----------------------------------------------------------------------------
    &&&~ Tx messages
 ----------------------------------------------------------------------------- */

/* -----------------------------------------------------------------------------
    &&&~ tx message start functions
 ----------------------------------------------------------------------------- */

#define dbkTxEPS_1Start(a)                   (dbkTxMessageStart((a), 1))
#define dbkTxEPS_A1Start(a)                  (dbkTxMessageStart((a), 2))




/* -----------------------------------------------------------------------------
    &&&~ Tx signals
 ----------------------------------------------------------------------------- */

/* -----------------------------------------------------------------------------
    &&&~ Signal structures
 ----------------------------------------------------------------------------- */

/* Handle:    0,Name:                      SD_RS_EPS,Size: 64,Type:  nByte,no Container */
typedef struct sSD_RS_EPSTag
{
  vbittype SD_RS_EPS_7 : 8;
  vbittype SD_RS_EPS_6 : 8;
  vbittype SD_RS_EPS_5 : 8;
  vbittype SD_RS_EPS_4 : 8;
  vbittype SD_RS_EPS_3 : 8;
  vbittype SD_RS_EPS_2 : 8;
  vbittype SD_RS_EPS_1 : 8;
  vbittype SD_RS_EPS_0 : 8;
} sSD_RS_EPS;

/* Handle:    1,Name:                      EPS_1_PKT,Size: 64,Type:  nByte,is Container */
typedef struct sEPS_1_PKTTag
{
  vbittype StrClmTrqVD : 1;
  vbittype TOI_Act_Sts : 4;
  vbittype StrClmTrq_1 : 3;
  vbittype StrClmTrq_0 : 8;
  vbittype HALFTorqueOverlayIntActivated : 1;
  vbittype HALFTorqueOverlayFault : 1;
  vbittype DSTTorqueOverlayFault : 1;
  vbittype PTSDriveStyleSts : 1;
  vbittype AssistanceTorque_1 : 4;
  vbittype AssistanceTorque_0 : 8;
  vbittype EPSMotorTorqueValidData : 1;
  vbittype EPSTemporaryDeactivationLDW : 1;
  vbittype DSTTorqueOverlayIntActivated : 1;
  vbittype unused0 : 2;
  vbittype EPSMotorTorque_1 : 3;
  vbittype EPSMotorTorque_0 : 8;
  vbittype MC_EPS_1 : 4;
  vbittype PTSTorqueOverlayIntActivated : 1;
  vbittype PTSTorqueOverlayFault : 1;
  vbittype EPSTemporaryDeactivationPPPA : 1;
  vbittype EPSHandsOnRecognition : 1;
  vbittype CRC_EPS_1 : 8;
} sEPS_1_PKT;

/* Handle:    2,Name:                     EPS_A1_PKT,Size: 64,Type:  nByte,is Container */
typedef struct sEPS_A1_PKTTag
{
  vbittype PS_SysType : 1;
  vbittype EPS_Warn_Disp_Rq : 3;
  vbittype EPS_AsstStat : 3;
  vbittype unused0 : 1;
  vbittype EPS_MODE_STAT : 3;
  vbittype EPS_MODE_CFG_STAT : 3;
  vbittype unused1 : 2;
  vbittype EPS_Curr : 8;
  vbittype unused2 : 8;
  vbittype unused3 : 8;
  vbittype unused4 : 8;
  vbittype unused5 : 8;
  vbittype unused6 : 8;
} sEPS_A1_PKT;

/* Handle:   -1,Name:                             NM,Size: 32,Type:  nByte,is Container */
typedef struct sNMTag
{
  vbittype NM_Mode : 8;
  vbittype NM_Successor : 8;
  vbittype NM_Sleep_Ind : 1;
  vbittype NM_Sleep_Ack : 1;
  vbittype NM_Ud_Launch : 6;
  vbittype NM_Ud_Srv : 8;
} sNM;

/* Handle:   -1,Name:                      Awake_EPS,Size: 24,Type:  nByte,is Container */
typedef struct sAwake_EPSTag
{
  vbittype unused0 : 2;
  vbittype Awake_IgnHigh : 1;
  vbittype Awake_EngRPM_high : 1;
  vbittype Awake_VSS_high : 1;
  vbittype Awake_Rampout : 1;
  vbittype Awake_Diag_Actv : 1;
  vbittype Awake_NwSt : 1;
  vbittype unused1 : 8;
  vbittype unused2 : 8;
} sAwake_EPS;

/* Handle:   -1,Name:                     Wakeup_EPS,Size: 24,Type:  nByte,is Container */
typedef struct sWakeup_EPSTag
{
  vbittype WakeupRsn_EPS : 8;
  vbittype WakeupCnt : 8;
  vbittype unused0 : 8;
} sWakeup_EPS;

/* Handle:   -1,Name:                          Nw_Id,Size:  8,Type:   Byte,no Container */
typedef struct sNw_IdTag
{
  vbittype Nw_Id : 8;
} sNw_Id;

/* Handle:    0,Name:                      SD_RS_EPS,Size: 64,Type:  nByte,no Container */
typedef union tSD_RS_EPSTag
{
  vuint8 cSD_RS_EPS[8];
  vuint8 c[8];
  sSD_RS_EPS s;
} tSD_RS_EPS;

/* Handle:    1,Name:                      EPS_1_PKT,Size: 64,Type:  nByte,is Container */
typedef union tEPS_1_PKTTag
{
  vuint8 cEPS_1_PKT[8];
  vuint8 c[8];
  sEPS_1_PKT s;
} tEPS_1_PKT;

/* Handle:    2,Name:                     EPS_A1_PKT,Size: 64,Type:  nByte,is Container */
typedef union tEPS_A1_PKTTag
{
  vuint8 cEPS_A1_PKT[8];
  vuint8 c[8];
  sEPS_A1_PKT s;
} tEPS_A1_PKT;

/* Handle:   -1,Name:                             NM,Size: 32,Type:  nByte,is Container */
typedef union tNMTag
{
  vuint8 cNM[4];
  vuint8 c[4];
  sNM s;
} tNM;

/* Handle:   -1,Name:                      Awake_EPS,Size: 24,Type:  nByte,is Container */
typedef union tAwake_EPSTag
{
  vuint8 cAwake_EPS[3];
  vuint8 c[3];
  sAwake_EPS s;
} tAwake_EPS;

/* Handle:   -1,Name:                     Wakeup_EPS,Size: 24,Type:  nByte,is Container */
typedef union tWakeup_EPSTag
{
  vuint8 cWakeup_EPS[3];
  vuint8 c[3];
  sWakeup_EPS s;
} tWakeup_EPS;

/* Handle:   -1,Name:                          Nw_Id,Size:  8,Type:   Byte,no Container */
typedef union tNw_IdTag
{
  vuint8 cNw_Id;
  vuint8 c;
  sNw_Id s;
} tNw_Id;



/* -----------------------------------------------------------------------------
    &&&~ tx signal get functions
 ----------------------------------------------------------------------------- */

#define dbkGetTxSD_RS_EPS()                  (dbkGetTxnByte(0))
#ifdef V_ENABLE_USED_GLOBAL_VAR
#define dbkGetTxSyncSD_RS_EPS(pValue) \
{ \
  StartTxReadSync(); \
  (void) VStdMemCpyFarRamToRam( & (pValue).cSD_RS_EPS[0], dbkGetTxnByte(0), 8); \
  EndTxReadSync(); \
}
#else
#define dbkGetTxSyncSD_RS_EPS(pValue) \
{ \
  StartTxReadSync(); \
  (void) VStdMemCpyRamToRam( & (pValue).cSD_RS_EPS[0], dbkGetTxnByte(0), 8); \
  EndTxReadSync(); \
}
#endif

#define dbkGetTxEPS_1_PKT()                  (dbkGetTxnByte(1))
#ifdef V_ENABLE_USED_GLOBAL_VAR
#define dbkGetTxSyncEPS_1_PKT(pValue) \
{ \
  StartTxReadSync(); \
  (void) VStdMemCpyFarRamToRam( & (pValue).cEPS_1_PKT[0], dbkGetTxnByte(1), 8); \
  EndTxReadSync(); \
}
#else
#define dbkGetTxSyncEPS_1_PKT(pValue) \
{ \
  StartTxReadSync(); \
  (void) VStdMemCpyRamToRam( & (pValue).cEPS_1_PKT[0], dbkGetTxnByte(1), 8); \
  EndTxReadSync(); \
}
#endif

#define dbkGetTxEPS_A1_PKT()                 (dbkGetTxnByte(2))
#ifdef V_ENABLE_USED_GLOBAL_VAR
#define dbkGetTxSyncEPS_A1_PKT(pValue) \
{ \
  StartTxReadSync(); \
  (void) VStdMemCpyFarRamToRam( & (pValue).cEPS_A1_PKT[0], dbkGetTxnByte(2), 8); \
  EndTxReadSync(); \
}
#else
#define dbkGetTxSyncEPS_A1_PKT(pValue) \
{ \
  StartTxReadSync(); \
  (void) VStdMemCpyRamToRam( & (pValue).cEPS_A1_PKT[0], dbkGetTxnByte(2), 8); \
  EndTxReadSync(); \
}
#endif



/* -----------------------------------------------------------------------------
    &&&~ tx signal put functions
 ----------------------------------------------------------------------------- */

#define dbkPutTxSD_RS_EPS(value)             (dbkPutnByte(0, (value).cSD_RS_EPS))
#define dbkPutTxEPS_1_PKT(value)             (dbkPutnByte(1, (value).cEPS_1_PKT))
#define dbkPutTxEPS_A1_PKT(value)            (dbkPutnByte(2, (value).cEPS_A1_PKT))


/* -----------------------------------------------------------------------------
    &&&~ tx signal direct put functions
 ----------------------------------------------------------------------------- */

#define dbkPutDirectTxSD_RS_EPS(value)       (dbkPutnByte(0, (value)))
#define dbkPutDirectTxEPS_1_PKT(value)       (dbkPutnByte(1, (value)))
#define dbkPutDirectTxEPS_A1_PKT(value)      (dbkPutnByte(2, (value)))


/* -----------------------------------------------------------------------------
    &&&~ tx signal, set/get strbyte
 ----------------------------------------------------------------------------- */

#define SetByte0TxSD_RS_EPS(variable, value) ((variable).c[7] = (vuint8) (value))
#define SetByte1TxSD_RS_EPS(variable, value) ((variable).c[6] = (vuint8) (value))
#define SetByte2TxSD_RS_EPS(variable, value) ((variable).c[5] = (vuint8) (value))
#define SetByte3TxSD_RS_EPS(variable, value) ((variable).c[4] = (vuint8) (value))
#define SetByte4TxSD_RS_EPS(variable, value) ((variable).c[3] = (vuint8) (value))
#define SetByte5TxSD_RS_EPS(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetByte6TxSD_RS_EPS(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetByte7TxSD_RS_EPS(variable, value) ((variable).c[0] = (vuint8) (value))

#define SetStrByte0TxSD_RS_EPS(variable, value) ((variable).c[0] = (vuint8) (value))
#define SetStrByte1TxSD_RS_EPS(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetStrByte2TxSD_RS_EPS(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetStrByte3TxSD_RS_EPS(variable, value) ((variable).c[3] = (vuint8) (value))
#define SetStrByte4TxSD_RS_EPS(variable, value) ((variable).c[4] = (vuint8) (value))
#define SetStrByte5TxSD_RS_EPS(variable, value) ((variable).c[5] = (vuint8) (value))
#define SetStrByte6TxSD_RS_EPS(variable, value) ((variable).c[6] = (vuint8) (value))
#define SetStrByte7TxSD_RS_EPS(variable, value) ((variable).c[7] = (vuint8) (value))

#define SetByte0TxEPS_1_PKT(variable, value) ((variable).c[7] = (vuint8) (value))
#define SetByte1TxEPS_1_PKT(variable, value) ((variable).c[6] = (vuint8) (value))
#define SetByte2TxEPS_1_PKT(variable, value) ((variable).c[5] = (vuint8) (value))
#define SetByte3TxEPS_1_PKT(variable, value) ((variable).c[4] = (vuint8) (value))
#define SetByte4TxEPS_1_PKT(variable, value) ((variable).c[3] = (vuint8) (value))
#define SetByte5TxEPS_1_PKT(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetByte6TxEPS_1_PKT(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetByte7TxEPS_1_PKT(variable, value) ((variable).c[0] = (vuint8) (value))

#define SetStrByte0TxEPS_1_PKT(variable, value) ((variable).c[0] = (vuint8) (value))
#define SetStrByte1TxEPS_1_PKT(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetStrByte2TxEPS_1_PKT(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetStrByte3TxEPS_1_PKT(variable, value) ((variable).c[3] = (vuint8) (value))
#define SetStrByte4TxEPS_1_PKT(variable, value) ((variable).c[4] = (vuint8) (value))
#define SetStrByte5TxEPS_1_PKT(variable, value) ((variable).c[5] = (vuint8) (value))
#define SetStrByte6TxEPS_1_PKT(variable, value) ((variable).c[6] = (vuint8) (value))
#define SetStrByte7TxEPS_1_PKT(variable, value) ((variable).c[7] = (vuint8) (value))

#define SetByte0TxEPS_A1_PKT(variable, value) ((variable).c[7] = (vuint8) (value))
#define SetByte1TxEPS_A1_PKT(variable, value) ((variable).c[6] = (vuint8) (value))
#define SetByte2TxEPS_A1_PKT(variable, value) ((variable).c[5] = (vuint8) (value))
#define SetByte3TxEPS_A1_PKT(variable, value) ((variable).c[4] = (vuint8) (value))
#define SetByte4TxEPS_A1_PKT(variable, value) ((variable).c[3] = (vuint8) (value))
#define SetByte5TxEPS_A1_PKT(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetByte6TxEPS_A1_PKT(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetByte7TxEPS_A1_PKT(variable, value) ((variable).c[0] = (vuint8) (value))

#define SetStrByte0TxEPS_A1_PKT(variable, value) ((variable).c[0] = (vuint8) (value))
#define SetStrByte1TxEPS_A1_PKT(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetStrByte2TxEPS_A1_PKT(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetStrByte3TxEPS_A1_PKT(variable, value) ((variable).c[3] = (vuint8) (value))
#define SetStrByte4TxEPS_A1_PKT(variable, value) ((variable).c[4] = (vuint8) (value))
#define SetStrByte5TxEPS_A1_PKT(variable, value) ((variable).c[5] = (vuint8) (value))
#define SetStrByte6TxEPS_A1_PKT(variable, value) ((variable).c[6] = (vuint8) (value))
#define SetStrByte7TxEPS_A1_PKT(variable, value) ((variable).c[7] = (vuint8) (value))

#define SetByte0TxNM(variable, value)        ((variable).c[3] = (vuint8) (value))
#define SetByte1TxNM(variable, value)        ((variable).c[2] = (vuint8) (value))
#define SetByte2TxNM(variable, value)        ((variable).c[1] = (vuint8) (value))
#define SetByte3TxNM(variable, value)        ((variable).c[0] = (vuint8) (value))

#define SetStrByte0TxNM(variable, value)     ((variable).c[0] = (vuint8) (value))
#define SetStrByte1TxNM(variable, value)     ((variable).c[1] = (vuint8) (value))
#define SetStrByte2TxNM(variable, value)     ((variable).c[2] = (vuint8) (value))
#define SetStrByte3TxNM(variable, value)     ((variable).c[3] = (vuint8) (value))

#define SetByte0TxAwake_EPS(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetByte1TxAwake_EPS(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetByte2TxAwake_EPS(variable, value) ((variable).c[0] = (vuint8) (value))

#define SetStrByte0TxAwake_EPS(variable, value) ((variable).c[0] = (vuint8) (value))
#define SetStrByte1TxAwake_EPS(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetStrByte2TxAwake_EPS(variable, value) ((variable).c[2] = (vuint8) (value))

#define SetByte0TxWakeup_EPS(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetByte1TxWakeup_EPS(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetByte2TxWakeup_EPS(variable, value) ((variable).c[0] = (vuint8) (value))

#define SetStrByte0TxWakeup_EPS(variable, value) ((variable).c[0] = (vuint8) (value))
#define SetStrByte1TxWakeup_EPS(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetStrByte2TxWakeup_EPS(variable, value) ((variable).c[2] = (vuint8) (value))

#define GetByte0TxSD_RS_EPS(variable)        ((variable).c[7])
#define GetByte1TxSD_RS_EPS(variable)        ((variable).c[6])
#define GetByte2TxSD_RS_EPS(variable)        ((variable).c[5])
#define GetByte3TxSD_RS_EPS(variable)        ((variable).c[4])
#define GetByte4TxSD_RS_EPS(variable)        ((variable).c[3])
#define GetByte5TxSD_RS_EPS(variable)        ((variable).c[2])
#define GetByte6TxSD_RS_EPS(variable)        ((variable).c[1])
#define GetByte7TxSD_RS_EPS(variable)        ((variable).c[0])

#define GetStrByte0TxSD_RS_EPS(variable)     ((variable).c[0])
#define GetStrByte1TxSD_RS_EPS(variable)     ((variable).c[1])
#define GetStrByte2TxSD_RS_EPS(variable)     ((variable).c[2])
#define GetStrByte3TxSD_RS_EPS(variable)     ((variable).c[3])
#define GetStrByte4TxSD_RS_EPS(variable)     ((variable).c[4])
#define GetStrByte5TxSD_RS_EPS(variable)     ((variable).c[5])
#define GetStrByte6TxSD_RS_EPS(variable)     ((variable).c[6])
#define GetStrByte7TxSD_RS_EPS(variable)     ((variable).c[7])

#define GetByte0TxEPS_1_PKT(variable)        ((variable).c[7])
#define GetByte1TxEPS_1_PKT(variable)        ((variable).c[6])
#define GetByte2TxEPS_1_PKT(variable)        ((variable).c[5])
#define GetByte3TxEPS_1_PKT(variable)        ((variable).c[4])
#define GetByte4TxEPS_1_PKT(variable)        ((variable).c[3])
#define GetByte5TxEPS_1_PKT(variable)        ((variable).c[2])
#define GetByte6TxEPS_1_PKT(variable)        ((variable).c[1])
#define GetByte7TxEPS_1_PKT(variable)        ((variable).c[0])

#define GetStrByte0TxEPS_1_PKT(variable)     ((variable).c[0])
#define GetStrByte1TxEPS_1_PKT(variable)     ((variable).c[1])
#define GetStrByte2TxEPS_1_PKT(variable)     ((variable).c[2])
#define GetStrByte3TxEPS_1_PKT(variable)     ((variable).c[3])
#define GetStrByte4TxEPS_1_PKT(variable)     ((variable).c[4])
#define GetStrByte5TxEPS_1_PKT(variable)     ((variable).c[5])
#define GetStrByte6TxEPS_1_PKT(variable)     ((variable).c[6])
#define GetStrByte7TxEPS_1_PKT(variable)     ((variable).c[7])

#define GetByte0TxEPS_A1_PKT(variable)       ((variable).c[7])
#define GetByte1TxEPS_A1_PKT(variable)       ((variable).c[6])
#define GetByte2TxEPS_A1_PKT(variable)       ((variable).c[5])
#define GetByte3TxEPS_A1_PKT(variable)       ((variable).c[4])
#define GetByte4TxEPS_A1_PKT(variable)       ((variable).c[3])
#define GetByte5TxEPS_A1_PKT(variable)       ((variable).c[2])
#define GetByte6TxEPS_A1_PKT(variable)       ((variable).c[1])
#define GetByte7TxEPS_A1_PKT(variable)       ((variable).c[0])

#define GetStrByte0TxEPS_A1_PKT(variable)    ((variable).c[0])
#define GetStrByte1TxEPS_A1_PKT(variable)    ((variable).c[1])
#define GetStrByte2TxEPS_A1_PKT(variable)    ((variable).c[2])
#define GetStrByte3TxEPS_A1_PKT(variable)    ((variable).c[3])
#define GetStrByte4TxEPS_A1_PKT(variable)    ((variable).c[4])
#define GetStrByte5TxEPS_A1_PKT(variable)    ((variable).c[5])
#define GetStrByte6TxEPS_A1_PKT(variable)    ((variable).c[6])
#define GetStrByte7TxEPS_A1_PKT(variable)    ((variable).c[7])

#define GetByte0TxNM(variable)               ((variable).c[3])
#define GetByte1TxNM(variable)               ((variable).c[2])
#define GetByte2TxNM(variable)               ((variable).c[1])
#define GetByte3TxNM(variable)               ((variable).c[0])

#define GetStrByte0TxNM(variable)            ((variable).c[0])
#define GetStrByte1TxNM(variable)            ((variable).c[1])
#define GetStrByte2TxNM(variable)            ((variable).c[2])
#define GetStrByte3TxNM(variable)            ((variable).c[3])

#define GetByte0TxAwake_EPS(variable)        ((variable).c[2])
#define GetByte1TxAwake_EPS(variable)        ((variable).c[1])
#define GetByte2TxAwake_EPS(variable)        ((variable).c[0])

#define GetStrByte0TxAwake_EPS(variable)     ((variable).c[0])
#define GetStrByte1TxAwake_EPS(variable)     ((variable).c[1])
#define GetStrByte2TxAwake_EPS(variable)     ((variable).c[2])

#define GetByte0TxWakeup_EPS(variable)       ((variable).c[2])
#define GetByte1TxWakeup_EPS(variable)       ((variable).c[1])
#define GetByte2TxWakeup_EPS(variable)       ((variable).c[0])

#define GetStrByte0TxWakeup_EPS(variable)    ((variable).c[0])
#define GetStrByte1TxWakeup_EPS(variable)    ((variable).c[1])
#define GetStrByte2TxWakeup_EPS(variable)    ((variable).c[2])



/* -----------------------------------------------------------------------------
    &&&~ Partial signal access functions  
 ----------------------------------------------------------------------------- */

/* Handle:    0,Name:                      SD_RS_EPS,Size: 64,Type:  nByte,no Container */
#define SetValueTxSD_RS_EPS(variable, value) \
{ \
  (variable).s.SD_RS_EPS_0 = (value)[0]; \
  (variable).s.SD_RS_EPS_1 = (value)[1]; \
  (variable).s.SD_RS_EPS_2 = (value)[2]; \
  (variable).s.SD_RS_EPS_3 = (value)[3]; \
  (variable).s.SD_RS_EPS_4 = (value)[4]; \
  (variable).s.SD_RS_EPS_5 = (value)[5]; \
  (variable).s.SD_RS_EPS_6 = (value)[6]; \
  (variable).s.SD_RS_EPS_7 = (value)[7]; \
}
/* attention: the following macro do not care for Intel/Motorola. To handle this issue use SetByte... */
#define GetValueTxSD_RS_EPS(variable)        ( & (variable).cSD_RS_EPS[0])

/* Handle:    1,Name:                      EPS_1_PKT,Size: 64,Type:  nByte,is Container */
#define SetValueTxStrClmTrq(variable, value) \
{ \
  (variable).s.StrClmTrq_0 = (vuint8) (((value) >> 0) & 0xFF); \
  (variable).s.StrClmTrq_1 = (vbittype) (((value) >> 8) & 0x07); \
}
#define SetValueTxTOI_Act_Sts(variable, value) ((variable).s.TOI_Act_Sts = (value))
#define SetValueTxStrClmTrqVD(variable, value) ((variable).s.StrClmTrqVD = (value))
#define SetValueTxAssistanceTorque(variable, value) \
{ \
  (variable).s.AssistanceTorque_0 = (vuint8) (((value) >> 0) & 0xFF); \
  (variable).s.AssistanceTorque_1 = (vbittype) (((value) >> 8) & 0x0F); \
}
#define SetValueTxPTSDriveStyleSts(variable, value) ((variable).s.PTSDriveStyleSts = (value))
#define SetValueTxDSTTorqueOverlayFault(variable, value) ((variable).s.DSTTorqueOverlayFault = (value))
#define SetValueTxHALFTorqueOverlayFault(variable, value) ((variable).s.HALFTorqueOverlayFault = (value))
#define SetValueTxHALFTorqueOverlayIntActivated(variable, value) ((variable).s.HALFTorqueOverlayIntActivated = (value))
#define SetValueTxEPSMotorTorque(variable, value) \
{ \
  (variable).s.EPSMotorTorque_0 = (vuint8) (((value) >> 0) & 0xFF); \
  (variable).s.EPSMotorTorque_1 = (vbittype) (((value) >> 8) & 0x07); \
}
#define SetValueTxDSTTorqueOverlayIntActivated(variable, value) ((variable).s.DSTTorqueOverlayIntActivated = (value))
#define SetValueTxEPSTemporaryDeactivationLDW(variable, value) ((variable).s.EPSTemporaryDeactivationLDW = (value))
#define SetValueTxEPSMotorTorqueValidData(variable, value) ((variable).s.EPSMotorTorqueValidData = (value))
#define SetValueTxEPSHandsOnRecognition(variable, value) ((variable).s.EPSHandsOnRecognition = (value))
#define SetValueTxEPSTemporaryDeactivationPPPA(variable, value) ((variable).s.EPSTemporaryDeactivationPPPA = (value))
#define SetValueTxPTSTorqueOverlayFault(variable, value) ((variable).s.PTSTorqueOverlayFault = (value))
#define SetValueTxPTSTorqueOverlayIntActivated(variable, value) ((variable).s.PTSTorqueOverlayIntActivated = (value))
#define SetValueTxMC_EPS_1(variable, value)  ((variable).s.MC_EPS_1 = (value))
#define SetValueTxCRC_EPS_1(variable, value) ((variable).s.CRC_EPS_1 = (value))
#define GetValueTxStrClmTrq(variable)        ((vuint16) ((((vuint16) (variable).s.StrClmTrq_1 << 8) | ((vuint16) (variable).s.StrClmTrq_0 << 0)) & 0x07FF))
#define GetValueTxTOI_Act_Sts(variable)      ((variable).s.TOI_Act_Sts)
#define GetValueTxStrClmTrqVD(variable)      ((variable).s.StrClmTrqVD)
#define GetValueTxAssistanceTorque(variable) ((vuint16) ((((vuint16) (variable).s.AssistanceTorque_1 << 8) | ((vuint16) (variable).s.AssistanceTorque_0 << 0)) & 0x0FFF))
#define GetValueTxPTSDriveStyleSts(variable) ((variable).s.PTSDriveStyleSts)
#define GetValueTxDSTTorqueOverlayFault(variable) ((variable).s.DSTTorqueOverlayFault)
#define GetValueTxHALFTorqueOverlayFault(variable) ((variable).s.HALFTorqueOverlayFault)
#define GetValueTxHALFTorqueOverlayIntActivated(variable) ((variable).s.HALFTorqueOverlayIntActivated)
#define GetValueTxEPSMotorTorque(variable)   ((vuint16) ((((vuint16) (variable).s.EPSMotorTorque_1 << 8) | ((vuint16) (variable).s.EPSMotorTorque_0 << 0)) & 0x07FF))
#define GetValueTxDSTTorqueOverlayIntActivated(variable) ((variable).s.DSTTorqueOverlayIntActivated)
#define GetValueTxEPSTemporaryDeactivationLDW(variable) ((variable).s.EPSTemporaryDeactivationLDW)
#define GetValueTxEPSMotorTorqueValidData(variable) ((variable).s.EPSMotorTorqueValidData)
#define GetValueTxEPSHandsOnRecognition(variable) ((variable).s.EPSHandsOnRecognition)
#define GetValueTxEPSTemporaryDeactivationPPPA(variable) ((variable).s.EPSTemporaryDeactivationPPPA)
#define GetValueTxPTSTorqueOverlayFault(variable) ((variable).s.PTSTorqueOverlayFault)
#define GetValueTxPTSTorqueOverlayIntActivated(variable) ((variable).s.PTSTorqueOverlayIntActivated)
#define GetValueTxMC_EPS_1(variable)         ((variable).s.MC_EPS_1)
#define GetValueTxCRC_EPS_1(variable)        ((variable).s.CRC_EPS_1)
#define SetBitTxStrClmTrqVD(variable)        ((variable).s.StrClmTrqVD = 1)
#define SetBitTxPTSDriveStyleSts(variable)   ((variable).s.PTSDriveStyleSts = 1)
#define SetBitTxDSTTorqueOverlayFault(variable) ((variable).s.DSTTorqueOverlayFault = 1)
#define SetBitTxHALFTorqueOverlayFault(variable) ((variable).s.HALFTorqueOverlayFault = 1)
#define SetBitTxHALFTorqueOverlayIntActivated(variable) ((variable).s.HALFTorqueOverlayIntActivated = 1)
#define SetBitTxDSTTorqueOverlayIntActivated(variable) ((variable).s.DSTTorqueOverlayIntActivated = 1)
#define SetBitTxEPSTemporaryDeactivationLDW(variable) ((variable).s.EPSTemporaryDeactivationLDW = 1)
#define SetBitTxEPSMotorTorqueValidData(variable) ((variable).s.EPSMotorTorqueValidData = 1)
#define SetBitTxEPSHandsOnRecognition(variable) ((variable).s.EPSHandsOnRecognition = 1)
#define SetBitTxEPSTemporaryDeactivationPPPA(variable) ((variable).s.EPSTemporaryDeactivationPPPA = 1)
#define SetBitTxPTSTorqueOverlayFault(variable) ((variable).s.PTSTorqueOverlayFault = 1)
#define SetBitTxPTSTorqueOverlayIntActivated(variable) ((variable).s.PTSTorqueOverlayIntActivated = 1)
#define ClearBitTxStrClmTrqVD(variable)      ((variable).s.StrClmTrqVD = 0)
#define ClearBitTxPTSDriveStyleSts(variable) ((variable).s.PTSDriveStyleSts = 0)
#define ClearBitTxDSTTorqueOverlayFault(variable) ((variable).s.DSTTorqueOverlayFault = 0)
#define ClearBitTxHALFTorqueOverlayFault(variable) ((variable).s.HALFTorqueOverlayFault = 0)
#define ClearBitTxHALFTorqueOverlayIntActivated(variable) ((variable).s.HALFTorqueOverlayIntActivated = 0)
#define ClearBitTxDSTTorqueOverlayIntActivated(variable) ((variable).s.DSTTorqueOverlayIntActivated = 0)
#define ClearBitTxEPSTemporaryDeactivationLDW(variable) ((variable).s.EPSTemporaryDeactivationLDW = 0)
#define ClearBitTxEPSMotorTorqueValidData(variable) ((variable).s.EPSMotorTorqueValidData = 0)
#define ClearBitTxEPSHandsOnRecognition(variable) ((variable).s.EPSHandsOnRecognition = 0)
#define ClearBitTxEPSTemporaryDeactivationPPPA(variable) ((variable).s.EPSTemporaryDeactivationPPPA = 0)
#define ClearBitTxPTSTorqueOverlayFault(variable) ((variable).s.PTSTorqueOverlayFault = 0)
#define ClearBitTxPTSTorqueOverlayIntActivated(variable) ((variable).s.PTSTorqueOverlayIntActivated = 0)
#define VarBitIsSetTxStrClmTrqVD(variable)   ((variable).s.StrClmTrqVD != 0)
#define VarBitIsSetTxPTSDriveStyleSts(variable) ((variable).s.PTSDriveStyleSts != 0)
#define VarBitIsSetTxDSTTorqueOverlayFault(variable) ((variable).s.DSTTorqueOverlayFault != 0)
#define VarBitIsSetTxHALFTorqueOverlayFault(variable) ((variable).s.HALFTorqueOverlayFault != 0)
#define VarBitIsSetTxHALFTorqueOverlayIntActivated(variable) ((variable).s.HALFTorqueOverlayIntActivated != 0)
#define VarBitIsSetTxDSTTorqueOverlayIntActivated(variable) ((variable).s.DSTTorqueOverlayIntActivated != 0)
#define VarBitIsSetTxEPSTemporaryDeactivationLDW(variable) ((variable).s.EPSTemporaryDeactivationLDW != 0)
#define VarBitIsSetTxEPSMotorTorqueValidData(variable) ((variable).s.EPSMotorTorqueValidData != 0)
#define VarBitIsSetTxEPSHandsOnRecognition(variable) ((variable).s.EPSHandsOnRecognition != 0)
#define VarBitIsSetTxEPSTemporaryDeactivationPPPA(variable) ((variable).s.EPSTemporaryDeactivationPPPA != 0)
#define VarBitIsSetTxPTSTorqueOverlayFault(variable) ((variable).s.PTSTorqueOverlayFault != 0)
#define VarBitIsSetTxPTSTorqueOverlayIntActivated(variable) ((variable).s.PTSTorqueOverlayIntActivated != 0)

/* Handle:    2,Name:                     EPS_A1_PKT,Size: 64,Type:  nByte,is Container */
#define SetValueTxEPS_AsstStat(variable, value) ((variable).s.EPS_AsstStat = (value))
#define SetValueTxEPS_Warn_Disp_Rq(variable, value) ((variable).s.EPS_Warn_Disp_Rq = (value))
#define SetValueTxPS_SysType(variable, value) ((variable).s.PS_SysType = (value))
#define SetValueTxEPS_MODE_CFG_STAT(variable, value) ((variable).s.EPS_MODE_CFG_STAT = (value))
#define SetValueTxEPS_MODE_STAT(variable, value) ((variable).s.EPS_MODE_STAT = (value))
#define SetValueTxEPS_Curr(variable, value)  ((variable).s.EPS_Curr = (value))
#define GetValueTxEPS_AsstStat(variable)     ((variable).s.EPS_AsstStat)
#define GetValueTxEPS_Warn_Disp_Rq(variable) ((variable).s.EPS_Warn_Disp_Rq)
#define GetValueTxPS_SysType(variable)       ((variable).s.PS_SysType)
#define GetValueTxEPS_MODE_CFG_STAT(variable) ((variable).s.EPS_MODE_CFG_STAT)
#define GetValueTxEPS_MODE_STAT(variable)    ((variable).s.EPS_MODE_STAT)
#define GetValueTxEPS_Curr(variable)         ((variable).s.EPS_Curr)
#define SetBitTxPS_SysType(variable)         ((variable).s.PS_SysType = 1)
#define ClearBitTxPS_SysType(variable)       ((variable).s.PS_SysType = 0)
#define VarBitIsSetTxPS_SysType(variable)    ((variable).s.PS_SysType != 0)

/* Handle:   -1,Name:                             NM,Size: 32,Type:  nByte,is Container */
#define SetValueTxNM_Mode(variable, value)   ((variable).s.NM_Mode = (value))
#define SetValueTxNM_Successor(variable, value) ((variable).s.NM_Successor = (value))
#define SetValueTxNM_Ud_Launch(variable, value) ((variable).s.NM_Ud_Launch = (value))
#define SetValueTxNM_Sleep_Ack(variable, value) ((variable).s.NM_Sleep_Ack = (value))
#define SetValueTxNM_Sleep_Ind(variable, value) ((variable).s.NM_Sleep_Ind = (value))
#define SetValueTxNM_Ud_Srv(variable, value) ((variable).s.NM_Ud_Srv = (value))
#define GetValueTxNM_Mode(variable)          ((variable).s.NM_Mode)
#define GetValueTxNM_Successor(variable)     ((variable).s.NM_Successor)
#define GetValueTxNM_Ud_Launch(variable)     ((variable).s.NM_Ud_Launch)
#define GetValueTxNM_Sleep_Ack(variable)     ((variable).s.NM_Sleep_Ack)
#define GetValueTxNM_Sleep_Ind(variable)     ((variable).s.NM_Sleep_Ind)
#define GetValueTxNM_Ud_Srv(variable)        ((variable).s.NM_Ud_Srv)
#define SetBitTxNM_Sleep_Ack(variable)       ((variable).s.NM_Sleep_Ack = 1)
#define SetBitTxNM_Sleep_Ind(variable)       ((variable).s.NM_Sleep_Ind = 1)
#define ClearBitTxNM_Sleep_Ack(variable)     ((variable).s.NM_Sleep_Ack = 0)
#define ClearBitTxNM_Sleep_Ind(variable)     ((variable).s.NM_Sleep_Ind = 0)
#define VarBitIsSetTxNM_Sleep_Ack(variable)  ((variable).s.NM_Sleep_Ack != 0)
#define VarBitIsSetTxNM_Sleep_Ind(variable)  ((variable).s.NM_Sleep_Ind != 0)

/* Handle:   -1,Name:                      Awake_EPS,Size: 24,Type:  nByte,is Container */
#define SetValueTxAwake_NwSt(variable, value) ((variable).s.Awake_NwSt = (value))
#define SetValueTxAwake_Diag_Actv(variable, value) ((variable).s.Awake_Diag_Actv = (value))
#define SetValueTxAwake_Rampout(variable, value) ((variable).s.Awake_Rampout = (value))
#define SetValueTxAwake_VSS_high(variable, value) ((variable).s.Awake_VSS_high = (value))
#define SetValueTxAwake_EngRPM_high(variable, value) ((variable).s.Awake_EngRPM_high = (value))
#define SetValueTxAwake_IgnHigh(variable, value) ((variable).s.Awake_IgnHigh = (value))
#define GetValueTxAwake_NwSt(variable)       ((variable).s.Awake_NwSt)
#define GetValueTxAwake_Diag_Actv(variable)  ((variable).s.Awake_Diag_Actv)
#define GetValueTxAwake_Rampout(variable)    ((variable).s.Awake_Rampout)
#define GetValueTxAwake_VSS_high(variable)   ((variable).s.Awake_VSS_high)
#define GetValueTxAwake_EngRPM_high(variable) ((variable).s.Awake_EngRPM_high)
#define GetValueTxAwake_IgnHigh(variable)    ((variable).s.Awake_IgnHigh)
#define SetBitTxAwake_NwSt(variable)         ((variable).s.Awake_NwSt = 1)
#define SetBitTxAwake_Diag_Actv(variable)    ((variable).s.Awake_Diag_Actv = 1)
#define SetBitTxAwake_Rampout(variable)      ((variable).s.Awake_Rampout = 1)
#define SetBitTxAwake_VSS_high(variable)     ((variable).s.Awake_VSS_high = 1)
#define SetBitTxAwake_EngRPM_high(variable)  ((variable).s.Awake_EngRPM_high = 1)
#define SetBitTxAwake_IgnHigh(variable)      ((variable).s.Awake_IgnHigh = 1)
#define ClearBitTxAwake_NwSt(variable)       ((variable).s.Awake_NwSt = 0)
#define ClearBitTxAwake_Diag_Actv(variable)  ((variable).s.Awake_Diag_Actv = 0)
#define ClearBitTxAwake_Rampout(variable)    ((variable).s.Awake_Rampout = 0)
#define ClearBitTxAwake_VSS_high(variable)   ((variable).s.Awake_VSS_high = 0)
#define ClearBitTxAwake_EngRPM_high(variable) ((variable).s.Awake_EngRPM_high = 0)
#define ClearBitTxAwake_IgnHigh(variable)    ((variable).s.Awake_IgnHigh = 0)
#define VarBitIsSetTxAwake_NwSt(variable)    ((variable).s.Awake_NwSt != 0)
#define VarBitIsSetTxAwake_Diag_Actv(variable) ((variable).s.Awake_Diag_Actv != 0)
#define VarBitIsSetTxAwake_Rampout(variable) ((variable).s.Awake_Rampout != 0)
#define VarBitIsSetTxAwake_VSS_high(variable) ((variable).s.Awake_VSS_high != 0)
#define VarBitIsSetTxAwake_EngRPM_high(variable) ((variable).s.Awake_EngRPM_high != 0)
#define VarBitIsSetTxAwake_IgnHigh(variable) ((variable).s.Awake_IgnHigh != 0)

/* Handle:   -1,Name:                     Wakeup_EPS,Size: 24,Type:  nByte,is Container */
#define SetValueTxWakeupRsn_EPS(variable, value) ((variable).s.WakeupRsn_EPS = (value))
#define SetValueTxWakeupCnt(variable, value) ((variable).s.WakeupCnt = (value))
#define GetValueTxWakeupRsn_EPS(variable)    ((variable).s.WakeupRsn_EPS)
#define GetValueTxWakeupCnt(variable)        ((variable).s.WakeupCnt)

/* Handle:   -1,Name:                          Nw_Id,Size:  8,Type:   Byte,no Container */
#define SetValueTxNw_Id(variable, value)     ((variable).s.Nw_Id = (value))
#define GetValueTxNw_Id(variable)            ((variable).s.Nw_Id)



/* -----------------------------------------------------------------------------
    &&&~ relevant bit masks for nBit and n16Bit signals    
 ----------------------------------------------------------------------------- */

#define RelevantBitMaskStrClmTrq             0x07FF
#define RelevantBitMaskTOI_Act_Sts           0x0F
#define RelevantBitMaskStrClmTrqVD           0x01
#define RelevantBitMaskAssistanceTorque      0x0FFF
#define RelevantBitMaskPTSDriveStyleSts      0x01
#define RelevantBitMaskDSTTorqueOverlayFault 0x01
#define RelevantBitMaskHALFTorqueOverlayFault 0x01
#define RelevantBitMaskHALFTorqueOverlayIntActivated 0x01
#define RelevantBitMaskEPSMotorTorque        0x07FF
#define RelevantBitMaskDSTTorqueOverlayIntActivated 0x01
#define RelevantBitMaskEPSTemporaryDeactivationLDW 0x01
#define RelevantBitMaskEPSMotorTorqueValidData 0x01
#define RelevantBitMaskEPSHandsOnRecognition 0x01
#define RelevantBitMaskEPSTemporaryDeactivationPPPA 0x01
#define RelevantBitMaskPTSTorqueOverlayFault 0x01
#define RelevantBitMaskPTSTorqueOverlayIntActivated 0x01
#define RelevantBitMaskMC_EPS_1              0x0F
#define RelevantBitMaskCRC_EPS_1             0xFF
#define RelevantBitMaskEPS_AsstStat          0x07
#define RelevantBitMaskEPS_Warn_Disp_Rq      0x07
#define RelevantBitMaskPS_SysType            0x01
#define RelevantBitMaskEPS_MODE_CFG_STAT     0x07
#define RelevantBitMaskEPS_MODE_STAT         0x07
#define RelevantBitMaskEPS_Curr              0xFF
#define RelevantBitMaskNM_Mode               0xFF
#define RelevantBitMaskNM_Successor          0xFF
#define RelevantBitMaskNM_Ud_Launch          0x3F
#define RelevantBitMaskNM_Sleep_Ack          0x01
#define RelevantBitMaskNM_Sleep_Ind          0x01
#define RelevantBitMaskNM_Ud_Srv             0xFF
#define RelevantBitMaskAwake_NwSt            0x01
#define RelevantBitMaskAwake_Diag_Actv       0x01
#define RelevantBitMaskAwake_Rampout         0x01
#define RelevantBitMaskAwake_VSS_high        0x01
#define RelevantBitMaskAwake_EngRPM_high     0x01
#define RelevantBitMaskAwake_IgnHigh         0x01
#define RelevantBitMaskWakeupRsn_EPS         0xFF
#define RelevantBitMaskWakeupCnt             0xFF


/* -----------------------------------------------------------------------------
    &&&~ TxDefault macros 
 ----------------------------------------------------------------------------- */

#define dbkGetTxDftSD_RS_EPS()               ( & DbkMsgDefault[0])
#define dbkGetTxDftEPS_1_PKT()               ( & DbkMsgDefault[8])
#define dbkGetTxDftEPS_A1_PKT()              ( & DbkMsgDefault[16])


/* -----------------------------------------------------------------------------
    &&&~ RxDefault macros 
 ----------------------------------------------------------------------------- */

#define dbkGetRxDftVehCfg5_Pkt()             ( & DbkMsgDefault[24])
#define dbkGetRxDftEC_ECUCfg6_Stat()         ((DbkMsgDefault[32] & 0x03) >> 0)
#define dbkGetRxDftEC_Steering()             ((((DbkMsgDefault[34] & 0xFF) << 8) | (DbkMsgDefault[35] & 0xFF) >> 0))
#define dbkGetRxDftVehCfg4_Pkt()             ( & DbkMsgDefault[40])
#define dbkGetRxDftVehCfg3_Pkt()             ( & DbkMsgDefault[48])
#define dbkGetRxDftVehCfg2_Pkt()             ( & DbkMsgDefault[56])
#define dbkGetRxDftVehCfg1_Pkt()             ( & DbkMsgDefault[64])
#define dbkGetRxDftNET_CFG_DATA_PT()         ( & DbkMsgDefault[72])
#define dbkGetRxDftENG_CFG()                 ( & DbkMsgDefault[80])
#define dbkGetRxDftVIN_INFO()                ( & DbkMsgDefault[87])
#define dbkGetRxDftVehCfg7_Pkt()             ( & DbkMsgDefault[95])
#define dbkGetRxDftREV_GEAR()                ((DbkMsgDefault[103] & 0x10) >> 4)
#define dbkGetRxDftEPS_MODE_REQ()            ((DbkMsgDefault[117] & 0x07) >> 0)
#define dbkGetRxDftCFG_RQ_C()                ( & DbkMsgDefault[119])
#define dbkGetRxDftCFG_RQ()                  ( & DbkMsgDefault[122])
#define dbkGetRxDftODO()                     ( & DbkMsgDefault[129])
#define dbkGetRxDftEPB_1()                   ( & DbkMsgDefault[133])
#define dbkGetRxDftECM_A3_PKT()              ( & DbkMsgDefault[141])
#define dbkGetRxDftEngOilTemp()              ((DbkMsgDefault[152] & 0xFF) >> 0)
#define dbkGetRxDftPTS_StrCtrl()             ( & DbkMsgDefault[157])
#define dbkGetRxDftDST_TOC()                 ( & DbkMsgDefault[165])
#define dbkGetRxDftHaLF_StrCtrl()            ( & DbkMsgDefault[173])
#define dbkGetRxDftWHEEL_SPEED2()            ( & DbkMsgDefault[179])
#define dbkGetRxDftAirTemp_Outsd()           ((DbkMsgDefault[187] & 0xFF) >> 0)
#define dbkGetRxDftAMB_TEMP_AVG()            ((((DbkMsgDefault[188] & 0xFF) << 8) | (DbkMsgDefault[189] & 0xFF) >> 0))
#define dbkGetRxDftBATT_VOLT()               ((DbkMsgDefault[193] & 0xFF) >> 0)
#define dbkGetRxDftTRNS_STAT_PKT()           ( & DbkMsgDefault[195])
#define dbkGetRxDftWHEEL_SPEED()             ( & DbkMsgDefault[203])
#define dbkGetRxDftVehAccel_X()              ((DbkMsgDefault[215] & 0xFF) >> 0)
#define dbkGetRxDftVehAccel_Y()              ((DbkMsgDefault[216] & 0xFF) >> 0)
#define dbkGetRxDftGear_Pkt()                ((((DbkMsgDefault[220] & 0x0F) << 8) | (DbkMsgDefault[221] & 0x00) >> 0))
#define dbkGetRxDftORC_YRS_PKT()             ( & DbkMsgDefault[227])
#define dbkGetRxDftESP_WHL_PULS()            ( & DbkMsgDefault[235])
#define dbkGetRxDftVEH_SPEED_PKT()           ( & DbkMsgDefault[243])
#define dbkGetRxDftVehStart_PKT()            ((((DbkMsgDefault[251] & 0x07) << 8) | (DbkMsgDefault[252] & 0x00) >> 0))
#define dbkGetRxDftECM_A1_PKT()              ( & DbkMsgDefault[253])
#define dbkGetRxDftLRW_ST()                  ( & DbkMsgDefault[261])


/* -----------------------------------------------------------------------------
    &&&~ TxSNA macros 
 ----------------------------------------------------------------------------- */

#define dbkGetTxSnaSD_RS_EPS                 0x0u
#define dbkGetTxSnaStrClmTrq                 0x7FFu
#define dbkGetTxSnaTOI_Act_Sts               0xFu
#define dbkGetTxSnaStrClmTrqVD               0x0u
#define dbkGetTxSnaAssistanceTorque          0xFFFu
#define dbkGetTxSnaPTSDriveStyleSts          0x0u
#define dbkGetTxSnaDSTTorqueOverlayFault     0x0u
#define dbkGetTxSnaHALFTorqueOverlayFault    0x0u
#define dbkGetTxSnaHALFTorqueOverlayIntActivated 0x0u
#define dbkGetTxSnaEPSMotorTorque            0x400u
#define dbkGetTxSnaDSTTorqueOverlayIntActivated 0x0u
#define dbkGetTxSnaEPSTemporaryDeactivationLDW 0x0u
#define dbkGetTxSnaEPSMotorTorqueValidData   0x0u
#define dbkGetTxSnaEPSHandsOnRecognition     0x0u
#define dbkGetTxSnaEPSTemporaryDeactivationPPPA 0x0u
#define dbkGetTxSnaPTSTorqueOverlayFault     0x0u
#define dbkGetTxSnaPTSTorqueOverlayIntActivated 0x0u
#define dbkGetTxSnaMC_EPS_1                  0x0u
#define dbkGetTxSnaCRC_EPS_1                 0xFFu
#define dbkGetTxSnaEPS_1_PKT                 0x00
#define dbkGetTxSnaEPS_AsstStat              0x7u
#define dbkGetTxSnaEPS_Warn_Disp_Rq          0x7u
#define dbkGetTxSnaPS_SysType                0x0u
#define dbkGetTxSnaEPS_MODE_CFG_STAT         0x7u
#define dbkGetTxSnaEPS_MODE_STAT             0x7u
#define dbkGetTxSnaEPS_Curr                  0xFFu
#define dbkGetTxSnaEPS_A1_PKT                0x00


/* -----------------------------------------------------------------------------
    &&&~ RxSNA macros 
 ----------------------------------------------------------------------------- */

#define dbkGetRxSnaVC_VehCfg5_Stat           0x3u
#define dbkGetRxSnaVC_PPPA_Prsnt             0x0u
#define dbkGetRxSnaVehCfg5_Pkt               0x00
#define dbkGetRxSnaEC_ECUCfg6_Stat           0x3u
#define dbkGetRxSnaEC_Steering               0x0u
#define dbkGetRxSnaVC_VehCfg4_Stat           0x3u
#define dbkGetRxSnaVC_TIRE_CIRCUMF           0xFFFFu
#define dbkGetRxSnaVehCfg4_Pkt               0x00
#define dbkGetRxSnaVC_VehCfg3_Stat           0x3u
#define dbkGetRxSnaVC_ChassisType            0x7Fu
#define dbkGetRxSnaVehCfg3_Pkt               0x00
#define dbkGetRxSnaVC_VehCfg2_Stat           0x3u
#define dbkGetRxSnaVC_DRVMD_Prsnt            0x0u
#define dbkGetRxSnaVC_MemoryDRVMD_Prsnt      0x0u
#define dbkGetRxSnaVehCfg2_Pkt               0x00
#define dbkGetRxSnaVC_VehCfg1_Stat           0x3u
#define dbkGetRxSnaVC_MODEL_YEAR             0x3Fu
#define dbkGetRxSnaVC_VEH_LINE               0xFFu
#define dbkGetRxSnaVC_COUNTRY                0x1Fu
#define dbkGetRxSnaVC_XWD                    0x0u
#define dbkGetRxSnaVC_BODY_STYLE             0xFu
#define dbkGetRxSnaVehCfg1_Pkt               0x00
#define dbkGetRxSnaNET_CFG_STAT_PT           0x3u
#define dbkGetRxSnaNetCfg_CBC_PT             0x0u
#define dbkGetRxSnaNetCfg_ECM                0x0u
#define dbkGetRxSnaNetCfg_ESC                0x0u
#define dbkGetRxSnaNetCfg_IC                 0x0u
#define dbkGetRxSnaNetCfg_PTS                0x0u
#define dbkGetRxSnaNetCfg_SCCM               0x0u
#define dbkGetRxSnaNetCfg_TCM                0x0u
#define dbkGetRxSnaNetCfg_HaLF               0x0u
#define dbkGetRxSnaNET_CFG_DATA_PT           0x00
#define dbkGetRxSnaDISPLACEMENT              0xFFu
#define dbkGetRxSnaSpStPrsnt                 0x0u
#define dbkGetRxSnaTRANS_TYPE                0x0u
#define dbkGetRxSnaENG_CFG                   0x00
#define dbkGetRxSnaVIN_MSG                   0x3u
#define dbkGetRxSnaVIN_DATA                  0x0u
#define dbkGetRxSnaVIN_INFO                  0x00
#define dbkGetRxSnaVC_LDW                    0x0u
#define dbkGetRxSnaVC_DST_Present            0x0u
#define dbkGetRxSnaVehCfg7_Pkt               0x00
#define dbkGetRxSnaREV_GEAR                  0x0u
#define dbkGetRxSnaEPS_MODE_REQ              0x7u
#define dbkGetRxSnaCFG_FEATURE_C             0x0u
#define dbkGetRxSnaCFG_STAT_RQ_C             0x0u
#define dbkGetRxSnaCFG_SET_C                 0x0u
#define dbkGetRxSnaCFG_RQ_C                  0x00
#define dbkGetRxSnaCFG_FEATURE               0x0u
#define dbkGetRxSnaCFG_STAT_RQ               0x0u
#define dbkGetRxSnaCFG_SET                   0x0u
#define dbkGetRxSnaCFG_RQ                    0x00
#define dbkGetRxSnaODO                       0xFFFFFFu
#define dbkGetRxSnaClampForce                0x0u
#define dbkGetRxSnaStopLampActive            0x3u
#define dbkGetRxSnaFaultStoreInfo            0x0u
#define dbkGetRxSnaEPBSwitchPosition         0x3u
#define dbkGetRxSnaEPBSts                    0x0u
#define dbkGetRxSnaAutoParkSts               0x3u
#define dbkGetRxSnaEPBChimeReq               0x7u
#define dbkGetRxSnaServiceModeSts            0x0u
#define dbkGetRxSnaTextDisplay               0x1Fu
#define dbkGetRxSnaValidEPBSWPos             0x0u
#define dbkGetRxSnaEnableDecelerationReq     0x0u
#define dbkGetRxSnaFunctionLamp              0x3u
#define dbkGetRxSnaEPBWarningLampReq         0x3u
#define dbkGetRxSnaMC_EPB_1                  0x0u
#define dbkGetRxSnaCRC_EPB_1                 0xFFu
#define dbkGetRxSnaEPB_1                     0x00
#define dbkGetRxSnaESS_ENG_ST                0xFu
#define dbkGetRxSnaECM_A3_PKT                0x00
#define dbkGetRxSnaEngOilTemp                0xFFu
#define dbkGetRxSnaTorqueOverlaySteeringReq  0x0u
#define dbkGetRxSnaManeuverPhase             0x0u
#define dbkGetRxSnaPTSDriveStyleReqSts       0x0u
#define dbkGetRxSnaPTSSystemFault            0x0u
#define dbkGetRxSnaTorqueOverlayIntActivation 0x0u
#define dbkGetRxSnaPTS_ManoeuvreMode         0x7u
#define dbkGetRxSnaMC_29Fh                   0x0u
#define dbkGetRxSnaCRC_29Fh                  0xFFu
#define dbkGetRxSnaPTS_StrCtrl               0x00
#define dbkGetRxSnaTO_Req                    0x0u
#define dbkGetRxSnaTOC_Fault                 0x3u
#define dbkGetRxSnaTOC_Act_Req               0x3u
#define dbkGetRxSnaBrkPrss_One               0x0u
#define dbkGetRxSnaBrkPrss_Two               0x0u
#define dbkGetRxSnaSyncPos                   0x7u
#define dbkGetRxSnaTOC_Sts                   0xFu
#define dbkGetRxSnaMC_294h                   0x0u
#define dbkGetRxSnaCRC_294h                  0xFFu
#define dbkGetRxSnaDST_TOC                   0x00
#define dbkGetRxSnaMotorTorqueOverlaySteeringReq 0x0u
#define dbkGetRxSnaMTO_HALFSystemSts         0x0u
#define dbkGetRxSnaMotorTorqueOverlayIntActivation 0x0u
#define dbkGetRxSnaMTO_HALFDriveStyleSts     0x7u
#define dbkGetRxSnaMC_292h                   0x0u
#define dbkGetRxSnaCRC_292h                  0xFFu
#define dbkGetRxSnaHaLF_StrCtrl              0x00
#define dbkGetRxSnaWheelRPM_FL               0xFFFFu
#define dbkGetRxSnaWheelRPM_FR               0xFFFFu
#define dbkGetRxSnaWHEEL_SPEED2              0x00
#define dbkGetRxSnaAirTemp_Outsd             0xFFu
#define dbkGetRxSnaAMB_TEMP_AVG              0xFFFFu
#define dbkGetRxSnaBATT_VOLT                 0xFFu
#define dbkGetRxSnaPRND_STAT                 0x7u
#define dbkGetRxSnaTRNS_STAT_PKT             0x00
#define dbkGetRxSnaWhlRPM_FL                 0x3FFFu
#define dbkGetRxSnaWhlRPM_FR                 0x3FFFu
#define dbkGetRxSnaWhlRPM_RL                 0x3FFFu
#define dbkGetRxSnaWhlDir_RL_Stat            0x3u
#define dbkGetRxSnaWhlRPM_RR                 0x3FFFu
#define dbkGetRxSnaWhlDir_RR_Stat            0x3u
#define dbkGetRxSnaWHEEL_SPEED               0x00
#define dbkGetRxSnaVehAccel_X                0xFFu
#define dbkGetRxSnaVehAccel_Y                0xFFu
#define dbkGetRxSnaGr                        0xFu
#define dbkGetRxSnaGear_Pkt                  0x00
#define dbkGetRxSnaLongAcceleration          0xFFFu
#define dbkGetRxSnaORC_YRS_PKT               0x00
#define dbkGetRxSnaWhlPlsCnt_FL              0xFFu
#define dbkGetRxSnaWhlPlsCnt_FR              0xFFu
#define dbkGetRxSnaWhlPlsCnt_RL              0xFFu
#define dbkGetRxSnaWhlPlsCnt_RR              0xFFu
#define dbkGetRxSnaESP_WHL_PULS              0x00
#define dbkGetRxSnaVEH_SPEED                 0xFFFFu
#define dbkGetRxSnaMC_VEH_SPEED              0x0u
#define dbkGetRxSnaCRC_VEH_SPEED             0xFFu
#define dbkGetRxSnaVEH_SPEED_PKT             0x00
#define dbkGetRxSnaCmdIgnStat                0x7u
#define dbkGetRxSnaVehStart_PKT              0x00
#define dbkGetRxSnaEngRPM                    0xFFFFu
#define dbkGetRxSnaECM_A1_PKT                0x00
#define dbkGetRxSnaLRW                       0x3FFFu
#define dbkGetRxSnaVLRW                      0x3FFFu
#define dbkGetRxSnaLRW_RHP                   0x0u
#define dbkGetRxSnaLRW_ST                    0x00


/* -----------------------------------------------------------------------------
    &&&~ Tx State Macros
 ----------------------------------------------------------------------------- */

#define dbkGetStateSD_RS_EPS()               (dbkGetSignalState(0))
#define dbkGetStateEPS_1_PKT()               (dbkGetSignalState(1))
#define dbkGetStateEPS_A1_PKT()              (dbkGetSignalState(2))


/* -----------------------------------------------------------------------------
    &&&~ Confirmation flags
 ----------------------------------------------------------------------------- */

#define Conf_SD_RS_EPS                       (DbkTxConfirmationFlags.w[0].b0)
#define Conf_EPS_1_PKT                       (DbkTxConfirmationFlags.w[0].b1)




/* -----------------------------------------------------------------------------
    &&&~ Rx signals
 ----------------------------------------------------------------------------- */

/* -----------------------------------------------------------------------------
    &&&~ Signal structures
 ----------------------------------------------------------------------------- */

/* Handle:    0,Name:                    VehCfg5_Pkt,Size: 64,Type:  nByte,is Container */
typedef struct sVehCfg5_PktTag
{
  vbittype unused0 : 6;
  vbittype VC_VehCfg5_Stat : 2;
  vbittype unused1 : 8;
  vbittype unused2 : 8;
  vbittype unused3 : 8;
  vbittype unused4 : 8;
  vbittype unused5 : 8;
  vbittype unused6 : 8;
  vbittype unused7 : 1;
  vbittype VC_PPPA_Prsnt : 1;
  vbittype unused8 : 6;
} sVehCfg5_Pkt;

/* Handle:    1,Name:                EC_ECUCfg6_Stat,Size:  2,Type:   nBit,no Container */
typedef struct sEC_ECUCfg6_StatTag
{
  vbittype unused0 : 6;
  vbittype EC_ECUCfg6_Stat : 2;
} sEC_ECUCfg6_Stat;

/* Handle:    2,Name:                    EC_Steering,Size: 16,Type:   Word,no Container */
typedef struct sEC_SteeringTag
{
  vbittype EC_Steering_1 : 8;
  vbittype EC_Steering_0 : 8;
} sEC_Steering;

/* Handle:    3,Name:                    VehCfg4_Pkt,Size: 64,Type:  nByte,is Container */
typedef struct sVehCfg4_PktTag
{
  vbittype VC_VehCfg4_Stat : 2;
  vbittype unused0 : 6;
  vbittype unused1 : 8;
  vbittype unused2 : 8;
  vbittype unused3 : 8;
  vbittype unused4 : 8;
  vbittype unused5 : 8;
  vbittype VC_TIRE_CIRCUMF_1 : 8;
  vbittype VC_TIRE_CIRCUMF_0 : 8;
} sVehCfg4_Pkt;

/* Handle:    4,Name:                    VehCfg3_Pkt,Size: 64,Type:  nByte,is Container */
typedef struct sVehCfg3_PktTag
{
  vbittype unused0 : 6;
  vbittype VC_VehCfg3_Stat : 2;
  vbittype unused1 : 8;
  vbittype unused2 : 8;
  vbittype unused3 : 8;
  vbittype unused4 : 1;
  vbittype VC_ChassisType : 7;
  vbittype unused5 : 8;
  vbittype unused6 : 8;
  vbittype unused7 : 8;
} sVehCfg3_Pkt;

/* Handle:    5,Name:                    VehCfg2_Pkt,Size: 64,Type:  nByte,is Container */
typedef struct sVehCfg2_PktTag
{
  vbittype unused0 : 6;
  vbittype VC_VehCfg2_Stat : 2;
  vbittype unused1 : 8;
  vbittype unused2 : 8;
  vbittype unused3 : 5;
  vbittype VC_MemoryDRVMD_Prsnt : 1;
  vbittype VC_DRVMD_Prsnt : 1;
  vbittype unused4 : 1;
  vbittype unused5 : 8;
  vbittype unused6 : 8;
  vbittype unused7 : 8;
  vbittype unused8 : 8;
} sVehCfg2_Pkt;

/* Handle:    6,Name:                    VehCfg1_Pkt,Size: 64,Type:  nByte,is Container */
typedef struct sVehCfg1_PktTag
{
  vbittype VC_MODEL_YEAR : 6;
  vbittype VC_VehCfg1_Stat : 2;
  vbittype VC_VEH_LINE : 8;
  vbittype unused0 : 3;
  vbittype VC_COUNTRY : 5;
  vbittype VC_BODY_STYLE : 4;
  vbittype unused1 : 2;
  vbittype VC_XWD : 2;
  vbittype unused2 : 8;
  vbittype unused3 : 8;
  vbittype unused4 : 8;
  vbittype unused5 : 8;
} sVehCfg1_Pkt;

/* Handle:    7,Name:                NET_CFG_DATA_PT,Size: 64,Type:  nByte,is Container */
typedef struct sNET_CFG_DATA_PTTag
{
  vbittype NetCfg_CBC_PT : 1;
  vbittype unused0 : 5;
  vbittype NET_CFG_STAT_PT : 2;
  vbittype NetCfg_IC : 1;
  vbittype unused1 : 2;
  vbittype NetCfg_ESC : 1;
  vbittype unused2 : 2;
  vbittype NetCfg_ECM : 1;
  vbittype unused3 : 1;
  vbittype NetCfg_SCCM : 1;
  vbittype unused4 : 2;
  vbittype NetCfg_PTS : 1;
  vbittype unused5 : 4;
  vbittype NetCfg_HaLF : 1;
  vbittype unused6 : 5;
  vbittype NetCfg_TCM : 1;
  vbittype unused7 : 1;
  vbittype unused8 : 8;
  vbittype unused9 : 8;
  vbittype unused10 : 8;
  vbittype unused11 : 8;
} sNET_CFG_DATA_PT;

/* Handle:    8,Name:                        ENG_CFG,Size: 32,Type:  nByte,is Container */
typedef struct sENG_CFGTag
{
  vbittype DISPLACEMENT : 8;
  vbittype unused0 : 3;
  vbittype SpStPrsnt : 1;
  vbittype unused1 : 4;
  vbittype unused2 : 8;
  vbittype unused3 : 3;
  vbittype TRANS_TYPE : 1;
  vbittype unused4 : 4;
} sENG_CFG;

/* Handle:    9,Name:                       VIN_INFO,Size: 64,Type:  nByte,is Container */
typedef struct sVIN_INFOTag
{
  vbittype unused0 : 6;
  vbittype VIN_MSG : 2;
  vbittype VIN_DATA_6 : 8;
  vbittype VIN_DATA_5 : 8;
  vbittype VIN_DATA_4 : 8;
  vbittype VIN_DATA_3 : 8;
  vbittype VIN_DATA_2 : 8;
  vbittype VIN_DATA_1 : 8;
  vbittype VIN_DATA_0 : 8;
} sVIN_INFO;

/* Handle:   10,Name:                    VehCfg7_Pkt,Size: 64,Type:  nByte,is Container */
typedef struct sVehCfg7_PktTag
{
  vbittype unused0 : 2;
  vbittype VC_DST_Present : 1;
  vbittype unused1 : 2;
  vbittype VC_LDW : 1;
  vbittype unused2 : 2;
  vbittype unused3 : 8;
  vbittype unused4 : 8;
  vbittype unused5 : 8;
  vbittype unused6 : 8;
  vbittype unused7 : 8;
  vbittype unused8 : 8;
  vbittype unused9 : 8;
} sVehCfg7_Pkt;

/* Handle:   11,Name:                       REV_GEAR,Size:  1,Type:   nBit,no Container */
typedef struct sREV_GEARTag
{
  vbittype unused0 : 7;
  vbittype REV_GEAR : 1;
} sREV_GEAR;

/* Handle:   12,Name:                   EPS_MODE_REQ,Size:  3,Type:   nBit,no Container */
typedef struct sEPS_MODE_REQTag
{
  vbittype unused0 : 5;
  vbittype EPS_MODE_REQ : 3;
} sEPS_MODE_REQ;

/* Handle:   13,Name:                       CFG_RQ_C,Size: 24,Type:  nByte,is Container */
typedef struct sCFG_RQ_CTag
{
  vbittype CFG_FEATURE_C : 8;
  vbittype unused0 : 6;
  vbittype CFG_STAT_RQ_C : 2;
  vbittype CFG_SET_C : 8;
} sCFG_RQ_C;

/* Handle:   14,Name:                         CFG_RQ,Size: 24,Type:  nByte,is Container */
typedef struct sCFG_RQTag
{
  vbittype CFG_FEATURE : 8;
  vbittype unused0 : 6;
  vbittype CFG_STAT_RQ : 2;
  vbittype CFG_SET : 8;
} sCFG_RQ;

/* Handle:   15,Name:                            ODO,Size: 24,Type:  nByte,no Container */
typedef struct sODOTag
{
  vbittype ODO_2 : 8;
  vbittype ODO_1 : 8;
  vbittype ODO_0 : 8;
} sODO;

/* Handle:   16,Name:                          EPB_1,Size: 64,Type:  nByte,is Container */
typedef struct sEPB_1Tag
{
  vbittype unused0 : 7;
  vbittype ClampForce_1 : 1;
  vbittype ClampForce_0 : 8;
  vbittype EPBSwitchPosition : 2;
  vbittype unused1 : 2;
  vbittype FaultStoreInfo : 1;
  vbittype unused2 : 1;
  vbittype StopLampActive : 2;
  vbittype unused3 : 1;
  vbittype ServiceModeSts : 1;
  vbittype EPBChimeReq : 3;
  vbittype AutoParkSts : 2;
  vbittype EPBSts : 1;
  vbittype EnableDecelerationReq : 2;
  vbittype ValidEPBSWPos : 1;
  vbittype TextDisplay : 5;
  vbittype EPBWarningLampReq : 2;
  vbittype FunctionLamp : 2;
  vbittype unused4 : 4;
  vbittype MC_EPB_1 : 4;
  vbittype unused5 : 4;
  vbittype CRC_EPB_1 : 8;
} sEPB_1;

/* Handle:   17,Name:                     ECM_A3_PKT,Size: 64,Type:  nByte,is Container */
typedef struct sECM_A3_PKTTag
{
  vbittype unused0 : 8;
  vbittype unused1 : 8;
  vbittype unused2 : 8;
  vbittype unused3 : 8;
  vbittype unused4 : 8;
  vbittype unused5 : 8;
  vbittype unused6 : 4;
  vbittype ESS_ENG_ST : 4;
  vbittype unused7 : 8;
} sECM_A3_PKT;

/* Handle:   18,Name:                     EngOilTemp,Size:  8,Type:   Byte,no Container */
typedef struct sEngOilTempTag
{
  vbittype EngOilTemp : 8;
} sEngOilTemp;

/* Handle:   19,Name:                    PTS_StrCtrl,Size: 64,Type:  nByte,is Container */
typedef struct sPTS_StrCtrlTag
{
  vbittype unused0 : 1;
  vbittype TorqueOverlayIntActivation : 1;
  vbittype PTSSystemFault : 1;
  vbittype PTSDriveStyleReqSts : 1;
  vbittype ManeuverPhase : 1;
  vbittype TorqueOverlaySteeringReq_1 : 3;
  vbittype TorqueOverlaySteeringReq_0 : 8;
  vbittype PTS_ManoeuvreMode : 3;
  vbittype unused1 : 5;
  vbittype unused2 : 8;
  vbittype unused3 : 8;
  vbittype unused4 : 8;
  vbittype MC_29Fh : 4;
  vbittype unused5 : 4;
  vbittype CRC_29Fh : 8;
} sPTS_StrCtrl;

/* Handle:   20,Name:                        DST_TOC,Size: 64,Type:  nByte,is Container */
typedef struct sDST_TOCTag
{
  vbittype TOC_Act_Req : 2;
  vbittype TOC_Fault : 2;
  vbittype unused0 : 1;
  vbittype TO_Req_1 : 3;
  vbittype TO_Req_0 : 8;
  vbittype unused1 : 6;
  vbittype BrkPrss_One_1 : 2;
  vbittype BrkPrss_One_0 : 8;
  vbittype SyncPos : 3;
  vbittype unused2 : 3;
  vbittype BrkPrss_Two_1 : 2;
  vbittype BrkPrss_Two_0 : 8;
  vbittype MC_294h : 4;
  vbittype TOC_Sts : 4;
  vbittype CRC_294h : 8;
} sDST_TOC;

/* Handle:   21,Name:                   HaLF_StrCtrl,Size: 48,Type:  nByte,is Container */
typedef struct sHaLF_StrCtrlTag
{
  vbittype MTO_HALFDriveStyleSts : 3;
  vbittype MotorTorqueOverlayIntActivation : 1;
  vbittype MTO_HALFSystemSts : 1;
  vbittype MotorTorqueOverlaySteeringReq_1 : 3;
  vbittype MotorTorqueOverlaySteeringReq_0 : 8;
  vbittype unused0 : 8;
  vbittype unused1 : 8;
  vbittype MC_292h : 4;
  vbittype unused2 : 4;
  vbittype CRC_292h : 8;
} sHaLF_StrCtrl;

/* Handle:   22,Name:                   WHEEL_SPEED2,Size: 32,Type:  nByte,is Container */
typedef struct sWHEEL_SPEED2Tag
{
  vbittype WheelRPM_FL_1 : 8;
  vbittype WheelRPM_FL_0 : 8;
  vbittype WheelRPM_FR_1 : 8;
  vbittype WheelRPM_FR_0 : 8;
} sWHEEL_SPEED2;

/* Handle:   23,Name:                  AirTemp_Outsd,Size:  8,Type:   Byte,no Container */
typedef struct sAirTemp_OutsdTag
{
  vbittype AirTemp_Outsd : 8;
} sAirTemp_Outsd;

/* Handle:   24,Name:                   AMB_TEMP_AVG,Size: 16,Type:   Word,no Container */
typedef struct sAMB_TEMP_AVGTag
{
  vbittype AMB_TEMP_AVG_1 : 8;
  vbittype AMB_TEMP_AVG_0 : 8;
} sAMB_TEMP_AVG;

/* Handle:   25,Name:                      BATT_VOLT,Size:  8,Type:   Byte,no Container */
typedef struct sBATT_VOLTTag
{
  vbittype BATT_VOLT : 8;
} sBATT_VOLT;

/* Handle:   26,Name:                  TRNS_STAT_PKT,Size: 64,Type:  nByte,is Container */
typedef struct sTRNS_STAT_PKTTag
{
  vbittype unused0 : 3;
  vbittype PRND_STAT : 3;
  vbittype unused1 : 2;
  vbittype unused2 : 8;
  vbittype unused3 : 8;
  vbittype unused4 : 8;
  vbittype unused5 : 8;
  vbittype unused6 : 8;
  vbittype unused7 : 8;
  vbittype unused8 : 8;
} sTRNS_STAT_PKT;

/* Handle:   27,Name:                    WHEEL_SPEED,Size: 64,Type:  nByte,is Container */
typedef struct sWHEEL_SPEEDTag
{
  vbittype unused0 : 2;
  vbittype WhlRPM_FL_1 : 6;
  vbittype WhlRPM_FL_0 : 8;
  vbittype unused1 : 2;
  vbittype WhlRPM_FR_1 : 6;
  vbittype WhlRPM_FR_0 : 8;
  vbittype WhlDir_RL_Stat : 2;
  vbittype WhlRPM_RL_1 : 6;
  vbittype WhlRPM_RL_0 : 8;
  vbittype WhlDir_RR_Stat : 2;
  vbittype WhlRPM_RR_1 : 6;
  vbittype WhlRPM_RR_0 : 8;
} sWHEEL_SPEED;

/* Handle:   28,Name:                     VehAccel_X,Size:  8,Type:   Byte,no Container */
typedef struct sVehAccel_XTag
{
  vbittype VehAccel_X : 8;
} sVehAccel_X;

/* Handle:   29,Name:                     VehAccel_Y,Size:  8,Type:   Byte,no Container */
typedef struct sVehAccel_YTag
{
  vbittype VehAccel_Y : 8;
} sVehAccel_Y;

/* Handle:   30,Name:                       Gear_Pkt,Size: 16,Type:   Word,is Container */
typedef struct sGear_PktTag
{
  vbittype unused0 : 4;
  vbittype Gr : 4;
  vbittype unused1 : 8;
} sGear_Pkt;

/* Handle:   31,Name:                    ORC_YRS_PKT,Size: 64,Type:  nByte,is Container */
typedef struct sORC_YRS_PKTTag
{
  vbittype unused0 : 8;
  vbittype unused1 : 8;
  vbittype unused2 : 4;
  vbittype LongAcceleration_1 : 4;
  vbittype LongAcceleration_0 : 8;
  vbittype unused3 : 8;
  vbittype unused4 : 8;
  vbittype unused5 : 8;
  vbittype unused6 : 8;
} sORC_YRS_PKT;

/* Handle:   32,Name:                   ESP_WHL_PULS,Size: 32,Type:  nByte,is Container */
typedef struct sESP_WHL_PULSTag
{
  vbittype WhlPlsCnt_FL : 8;
  vbittype WhlPlsCnt_FR : 8;
  vbittype WhlPlsCnt_RL : 8;
  vbittype WhlPlsCnt_RR : 8;
} sESP_WHL_PULS;

/* Handle:   33,Name:                  VEH_SPEED_PKT,Size: 64,Type:  nByte,is Container */
typedef struct sVEH_SPEED_PKTTag
{
  vbittype unused0 : 8;
  vbittype unused1 : 8;
  vbittype unused2 : 8;
  vbittype unused3 : 8;
  vbittype VEH_SPEED_1 : 8;
  vbittype VEH_SPEED_0 : 8;
  vbittype MC_VEH_SPEED : 4;
  vbittype unused4 : 4;
  vbittype CRC_VEH_SPEED : 8;
} sVEH_SPEED_PKT;

/* Handle:   34,Name:                   VehStart_PKT,Size: 16,Type:   Word,is Container */
typedef struct sVehStart_PKTTag
{
  vbittype unused0 : 5;
  vbittype CmdIgnStat : 3;
  vbittype unused1 : 8;
} sVehStart_PKT;

/* Handle:   35,Name:                     ECM_A1_PKT,Size: 64,Type:  nByte,is Container */
typedef struct sECM_A1_PKTTag
{
  vbittype EngRPM_1 : 8;
  vbittype EngRPM_0 : 8;
  vbittype unused0 : 8;
  vbittype unused1 : 8;
  vbittype unused2 : 8;
  vbittype unused3 : 8;
  vbittype unused4 : 8;
  vbittype unused5 : 8;
} sECM_A1_PKT;

/* Handle:   36,Name:                         LRW_ST,Size: 64,Type:  nByte,is Container */
typedef struct sLRW_STTag
{
  vbittype unused0 : 2;
  vbittype LRW_1 : 6;
  vbittype LRW_0 : 8;
  vbittype unused1 : 2;
  vbittype VLRW_1 : 6;
  vbittype VLRW_0 : 8;
  vbittype unused2 : 8;
  vbittype unused3 : 8;
  vbittype unused4 : 4;
  vbittype LRW_RHP : 4;
  vbittype unused5 : 8;
} sLRW_ST;

/* Handle:    0,Name:                    VehCfg5_Pkt,Size: 64,Type:  nByte,is Container */
typedef union tVehCfg5_PktTag
{
  vuint8 cVehCfg5_Pkt[8];
  vuint8 c[8];
  sVehCfg5_Pkt s;
} tVehCfg5_Pkt;

/* Handle:    1,Name:                EC_ECUCfg6_Stat,Size:  2,Type:   nBit,no Container */
typedef union tEC_ECUCfg6_StatTag
{
  vuint8 cEC_ECUCfg6_Stat;
  vuint8 c;
  sEC_ECUCfg6_Stat s;
} tEC_ECUCfg6_Stat;

/* Handle:    2,Name:                    EC_Steering,Size: 16,Type:   Word,no Container */
typedef union tEC_SteeringTag
{
  vuint16 cEC_Steering;
  vuint16 c;
  sEC_Steering s;
} tEC_Steering;

/* Handle:    3,Name:                    VehCfg4_Pkt,Size: 64,Type:  nByte,is Container */
typedef union tVehCfg4_PktTag
{
  vuint8 cVehCfg4_Pkt[8];
  vuint8 c[8];
  sVehCfg4_Pkt s;
} tVehCfg4_Pkt;

/* Handle:    4,Name:                    VehCfg3_Pkt,Size: 64,Type:  nByte,is Container */
typedef union tVehCfg3_PktTag
{
  vuint8 cVehCfg3_Pkt[8];
  vuint8 c[8];
  sVehCfg3_Pkt s;
} tVehCfg3_Pkt;

/* Handle:    5,Name:                    VehCfg2_Pkt,Size: 64,Type:  nByte,is Container */
typedef union tVehCfg2_PktTag
{
  vuint8 cVehCfg2_Pkt[8];
  vuint8 c[8];
  sVehCfg2_Pkt s;
} tVehCfg2_Pkt;

/* Handle:    6,Name:                    VehCfg1_Pkt,Size: 64,Type:  nByte,is Container */
typedef union tVehCfg1_PktTag
{
  vuint8 cVehCfg1_Pkt[8];
  vuint8 c[8];
  sVehCfg1_Pkt s;
} tVehCfg1_Pkt;

/* Handle:    7,Name:                NET_CFG_DATA_PT,Size: 64,Type:  nByte,is Container */
typedef union tNET_CFG_DATA_PTTag
{
  vuint8 cNET_CFG_DATA_PT[8];
  vuint8 c[8];
  sNET_CFG_DATA_PT s;
} tNET_CFG_DATA_PT;

/* Handle:    8,Name:                        ENG_CFG,Size: 32,Type:  nByte,is Container */
typedef union tENG_CFGTag
{
  vuint8 cENG_CFG[4];
  vuint8 c[4];
  sENG_CFG s;
} tENG_CFG;

/* Handle:    9,Name:                       VIN_INFO,Size: 64,Type:  nByte,is Container */
typedef union tVIN_INFOTag
{
  vuint8 cVIN_INFO[8];
  vuint8 c[8];
  sVIN_INFO s;
} tVIN_INFO;

/* Handle:   10,Name:                    VehCfg7_Pkt,Size: 64,Type:  nByte,is Container */
typedef union tVehCfg7_PktTag
{
  vuint8 cVehCfg7_Pkt[8];
  vuint8 c[8];
  sVehCfg7_Pkt s;
} tVehCfg7_Pkt;

/* Handle:   11,Name:                       REV_GEAR,Size:  1,Type:   nBit,no Container */
typedef union tREV_GEARTag
{
  vuint8 cREV_GEAR;
  vuint8 c;
  sREV_GEAR s;
} tREV_GEAR;

/* Handle:   12,Name:                   EPS_MODE_REQ,Size:  3,Type:   nBit,no Container */
typedef union tEPS_MODE_REQTag
{
  vuint8 cEPS_MODE_REQ;
  vuint8 c;
  sEPS_MODE_REQ s;
} tEPS_MODE_REQ;

/* Handle:   13,Name:                       CFG_RQ_C,Size: 24,Type:  nByte,is Container */
typedef union tCFG_RQ_CTag
{
  vuint8 cCFG_RQ_C[3];
  vuint8 c[3];
  sCFG_RQ_C s;
} tCFG_RQ_C;

/* Handle:   14,Name:                         CFG_RQ,Size: 24,Type:  nByte,is Container */
typedef union tCFG_RQTag
{
  vuint8 cCFG_RQ[3];
  vuint8 c[3];
  sCFG_RQ s;
} tCFG_RQ;

/* Handle:   15,Name:                            ODO,Size: 24,Type:  nByte,no Container */
typedef union tODOTag
{
  vuint8 cODO[3];
  vuint8 c[3];
  sODO s;
} tODO;

/* Handle:   16,Name:                          EPB_1,Size: 64,Type:  nByte,is Container */
typedef union tEPB_1Tag
{
  vuint8 cEPB_1[8];
  vuint8 c[8];
  sEPB_1 s;
} tEPB_1;

/* Handle:   17,Name:                     ECM_A3_PKT,Size: 64,Type:  nByte,is Container */
typedef union tECM_A3_PKTTag
{
  vuint8 cECM_A3_PKT[8];
  vuint8 c[8];
  sECM_A3_PKT s;
} tECM_A3_PKT;

/* Handle:   18,Name:                     EngOilTemp,Size:  8,Type:   Byte,no Container */
typedef union tEngOilTempTag
{
  vuint8 cEngOilTemp;
  vuint8 c;
  sEngOilTemp s;
} tEngOilTemp;

/* Handle:   19,Name:                    PTS_StrCtrl,Size: 64,Type:  nByte,is Container */
typedef union tPTS_StrCtrlTag
{
  vuint8 cPTS_StrCtrl[8];
  vuint8 c[8];
  sPTS_StrCtrl s;
} tPTS_StrCtrl;

/* Handle:   20,Name:                        DST_TOC,Size: 64,Type:  nByte,is Container */
typedef union tDST_TOCTag
{
  vuint8 cDST_TOC[8];
  vuint8 c[8];
  sDST_TOC s;
} tDST_TOC;

/* Handle:   21,Name:                   HaLF_StrCtrl,Size: 48,Type:  nByte,is Container */
typedef union tHaLF_StrCtrlTag
{
  vuint8 cHaLF_StrCtrl[6];
  vuint8 c[6];
  sHaLF_StrCtrl s;
} tHaLF_StrCtrl;

/* Handle:   22,Name:                   WHEEL_SPEED2,Size: 32,Type:  nByte,is Container */
typedef union tWHEEL_SPEED2Tag
{
  vuint8 cWHEEL_SPEED2[4];
  vuint8 c[4];
  sWHEEL_SPEED2 s;
} tWHEEL_SPEED2;

/* Handle:   23,Name:                  AirTemp_Outsd,Size:  8,Type:   Byte,no Container */
typedef union tAirTemp_OutsdTag
{
  vuint8 cAirTemp_Outsd;
  vuint8 c;
  sAirTemp_Outsd s;
} tAirTemp_Outsd;

/* Handle:   24,Name:                   AMB_TEMP_AVG,Size: 16,Type:   Word,no Container */
typedef union tAMB_TEMP_AVGTag
{
  vuint16 cAMB_TEMP_AVG;
  vuint16 c;
  sAMB_TEMP_AVG s;
} tAMB_TEMP_AVG;

/* Handle:   25,Name:                      BATT_VOLT,Size:  8,Type:   Byte,no Container */
typedef union tBATT_VOLTTag
{
  vuint8 cBATT_VOLT;
  vuint8 c;
  sBATT_VOLT s;
} tBATT_VOLT;

/* Handle:   26,Name:                  TRNS_STAT_PKT,Size: 64,Type:  nByte,is Container */
typedef union tTRNS_STAT_PKTTag
{
  vuint8 cTRNS_STAT_PKT[8];
  vuint8 c[8];
  sTRNS_STAT_PKT s;
} tTRNS_STAT_PKT;

/* Handle:   27,Name:                    WHEEL_SPEED,Size: 64,Type:  nByte,is Container */
typedef union tWHEEL_SPEEDTag
{
  vuint8 cWHEEL_SPEED[8];
  vuint8 c[8];
  sWHEEL_SPEED s;
} tWHEEL_SPEED;

/* Handle:   28,Name:                     VehAccel_X,Size:  8,Type:   Byte,no Container */
typedef union tVehAccel_XTag
{
  vuint8 cVehAccel_X;
  vuint8 c;
  sVehAccel_X s;
} tVehAccel_X;

/* Handle:   29,Name:                     VehAccel_Y,Size:  8,Type:   Byte,no Container */
typedef union tVehAccel_YTag
{
  vuint8 cVehAccel_Y;
  vuint8 c;
  sVehAccel_Y s;
} tVehAccel_Y;

/* Handle:   30,Name:                       Gear_Pkt,Size: 16,Type:   Word,is Container */
typedef union tGear_PktTag
{
  vuint16 cGear_Pkt;
  vuint16 c;
  sGear_Pkt s;
} tGear_Pkt;

/* Handle:   31,Name:                    ORC_YRS_PKT,Size: 64,Type:  nByte,is Container */
typedef union tORC_YRS_PKTTag
{
  vuint8 cORC_YRS_PKT[8];
  vuint8 c[8];
  sORC_YRS_PKT s;
} tORC_YRS_PKT;

/* Handle:   32,Name:                   ESP_WHL_PULS,Size: 32,Type:  nByte,is Container */
typedef union tESP_WHL_PULSTag
{
  vuint8 cESP_WHL_PULS[4];
  vuint8 c[4];
  sESP_WHL_PULS s;
} tESP_WHL_PULS;

/* Handle:   33,Name:                  VEH_SPEED_PKT,Size: 64,Type:  nByte,is Container */
typedef union tVEH_SPEED_PKTTag
{
  vuint8 cVEH_SPEED_PKT[8];
  vuint8 c[8];
  sVEH_SPEED_PKT s;
} tVEH_SPEED_PKT;

/* Handle:   34,Name:                   VehStart_PKT,Size: 16,Type:   Word,is Container */
typedef union tVehStart_PKTTag
{
  vuint16 cVehStart_PKT;
  vuint16 c;
  sVehStart_PKT s;
} tVehStart_PKT;

/* Handle:   35,Name:                     ECM_A1_PKT,Size: 64,Type:  nByte,is Container */
typedef union tECM_A1_PKTTag
{
  vuint8 cECM_A1_PKT[8];
  vuint8 c[8];
  sECM_A1_PKT s;
} tECM_A1_PKT;

/* Handle:   36,Name:                         LRW_ST,Size: 64,Type:  nByte,is Container */
typedef union tLRW_STTag
{
  vuint8 cLRW_ST[8];
  vuint8 c[8];
  sLRW_ST s;
} tLRW_ST;



/* -----------------------------------------------------------------------------
    &&&~ Rx signal get functions
 ----------------------------------------------------------------------------- */

#define dbkGetRxVehCfg5_Pkt()                (dbkGetRxnByte(0))
#ifdef V_ENABLE_USED_GLOBAL_VAR
#define dbkGetRxSyncVehCfg5_Pkt(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyFarRamToRam( & (pValue).cVehCfg5_Pkt[0], dbkGetRxnByte(0), 8); \
  EndRxReadSync(); \
}
#else
#define dbkGetRxSyncVehCfg5_Pkt(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyRamToRam( & (pValue).cVehCfg5_Pkt[0], dbkGetRxnByte(0), 8); \
  EndRxReadSync(); \
}
#endif

#define dbkGetRxEC_ECUCfg6_Stat()            (dbkGetRxnBit(1))
#define dbkGetRxSyncEC_ECUCfg6_Stat(pValue) \
{ \
  pValue.cEC_ECUCfg6_Stat = dbkGetRxnBit(1); \
}
#define dbkGetRxEC_Steering()                (dbkGetRxWord(2))
#define dbkGetRxSyncEC_Steering(pValue) \
{ \
  pValue.cEC_Steering = dbkGetRxWord(2); \
}
#define dbkGetRxVehCfg4_Pkt()                (dbkGetRxnByte(3))
#ifdef V_ENABLE_USED_GLOBAL_VAR
#define dbkGetRxSyncVehCfg4_Pkt(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyFarRamToRam( & (pValue).cVehCfg4_Pkt[0], dbkGetRxnByte(3), 8); \
  EndRxReadSync(); \
}
#else
#define dbkGetRxSyncVehCfg4_Pkt(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyRamToRam( & (pValue).cVehCfg4_Pkt[0], dbkGetRxnByte(3), 8); \
  EndRxReadSync(); \
}
#endif

#define dbkGetRxVehCfg3_Pkt()                (dbkGetRxnByte(4))
#ifdef V_ENABLE_USED_GLOBAL_VAR
#define dbkGetRxSyncVehCfg3_Pkt(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyFarRamToRam( & (pValue).cVehCfg3_Pkt[0], dbkGetRxnByte(4), 8); \
  EndRxReadSync(); \
}
#else
#define dbkGetRxSyncVehCfg3_Pkt(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyRamToRam( & (pValue).cVehCfg3_Pkt[0], dbkGetRxnByte(4), 8); \
  EndRxReadSync(); \
}
#endif

#define dbkGetRxVehCfg2_Pkt()                (dbkGetRxnByte(5))
#ifdef V_ENABLE_USED_GLOBAL_VAR
#define dbkGetRxSyncVehCfg2_Pkt(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyFarRamToRam( & (pValue).cVehCfg2_Pkt[0], dbkGetRxnByte(5), 8); \
  EndRxReadSync(); \
}
#else
#define dbkGetRxSyncVehCfg2_Pkt(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyRamToRam( & (pValue).cVehCfg2_Pkt[0], dbkGetRxnByte(5), 8); \
  EndRxReadSync(); \
}
#endif

#define dbkGetRxVehCfg1_Pkt()                (dbkGetRxnByte(6))
#ifdef V_ENABLE_USED_GLOBAL_VAR
#define dbkGetRxSyncVehCfg1_Pkt(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyFarRamToRam( & (pValue).cVehCfg1_Pkt[0], dbkGetRxnByte(6), 8); \
  EndRxReadSync(); \
}
#else
#define dbkGetRxSyncVehCfg1_Pkt(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyRamToRam( & (pValue).cVehCfg1_Pkt[0], dbkGetRxnByte(6), 8); \
  EndRxReadSync(); \
}
#endif

#define dbkGetRxNET_CFG_DATA_PT()            (dbkGetRxnByte(7))
#ifdef V_ENABLE_USED_GLOBAL_VAR
#define dbkGetRxSyncNET_CFG_DATA_PT(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyFarRamToRam( & (pValue).cNET_CFG_DATA_PT[0], dbkGetRxnByte(7), 8); \
  EndRxReadSync(); \
}
#else
#define dbkGetRxSyncNET_CFG_DATA_PT(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyRamToRam( & (pValue).cNET_CFG_DATA_PT[0], dbkGetRxnByte(7), 8); \
  EndRxReadSync(); \
}
#endif

#define dbkGetRxENG_CFG()                    (dbkGetRxnByte(8))
#ifdef V_ENABLE_USED_GLOBAL_VAR
#define dbkGetRxSyncENG_CFG(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyFarRamToRam( & (pValue).cENG_CFG[0], dbkGetRxnByte(8), 4); \
  EndRxReadSync(); \
}
#else
#define dbkGetRxSyncENG_CFG(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyRamToRam( & (pValue).cENG_CFG[0], dbkGetRxnByte(8), 4); \
  EndRxReadSync(); \
}
#endif

#define dbkGetRxVIN_INFO()                   (dbkGetRxnByte(9))
#ifdef V_ENABLE_USED_GLOBAL_VAR
#define dbkGetRxSyncVIN_INFO(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyFarRamToRam( & (pValue).cVIN_INFO[0], dbkGetRxnByte(9), 8); \
  EndRxReadSync(); \
}
#else
#define dbkGetRxSyncVIN_INFO(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyRamToRam( & (pValue).cVIN_INFO[0], dbkGetRxnByte(9), 8); \
  EndRxReadSync(); \
}
#endif

#define dbkGetRxVehCfg7_Pkt()                (dbkGetRxnByte(10))
#ifdef V_ENABLE_USED_GLOBAL_VAR
#define dbkGetRxSyncVehCfg7_Pkt(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyFarRamToRam( & (pValue).cVehCfg7_Pkt[0], dbkGetRxnByte(10), 8); \
  EndRxReadSync(); \
}
#else
#define dbkGetRxSyncVehCfg7_Pkt(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyRamToRam( & (pValue).cVehCfg7_Pkt[0], dbkGetRxnByte(10), 8); \
  EndRxReadSync(); \
}
#endif

#define dbkGetRxREV_GEAR()                   (dbkGetRxnBit(11))
#define dbkGetRxSyncREV_GEAR(pValue) \
{ \
  pValue.cREV_GEAR = dbkGetRxnBit(11); \
}
#define dbkGetRxEPS_MODE_REQ()               (dbkGetRxnBit(12))
#define dbkGetRxSyncEPS_MODE_REQ(pValue) \
{ \
  pValue.cEPS_MODE_REQ = dbkGetRxnBit(12); \
}
#define dbkGetRxCFG_RQ_C()                   (dbkGetRxnByte(13))
#ifdef V_ENABLE_USED_GLOBAL_VAR
#define dbkGetRxSyncCFG_RQ_C(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyFarRamToRam( & (pValue).cCFG_RQ_C[0], dbkGetRxnByte(13), 3); \
  EndRxReadSync(); \
}
#else
#define dbkGetRxSyncCFG_RQ_C(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyRamToRam( & (pValue).cCFG_RQ_C[0], dbkGetRxnByte(13), 3); \
  EndRxReadSync(); \
}
#endif

#define dbkGetRxCFG_RQ()                     (dbkGetRxnByte(14))
#ifdef V_ENABLE_USED_GLOBAL_VAR
#define dbkGetRxSyncCFG_RQ(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyFarRamToRam( & (pValue).cCFG_RQ[0], dbkGetRxnByte(14), 3); \
  EndRxReadSync(); \
}
#else
#define dbkGetRxSyncCFG_RQ(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyRamToRam( & (pValue).cCFG_RQ[0], dbkGetRxnByte(14), 3); \
  EndRxReadSync(); \
}
#endif

#define dbkGetRxODO()                        (dbkGetRxnByte(15))
#ifdef V_ENABLE_USED_GLOBAL_VAR
#define dbkGetRxSyncODO(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyFarRamToRam( & (pValue).cODO[0], dbkGetRxnByte(15), 3); \
  EndRxReadSync(); \
}
#else
#define dbkGetRxSyncODO(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyRamToRam( & (pValue).cODO[0], dbkGetRxnByte(15), 3); \
  EndRxReadSync(); \
}
#endif

#define dbkGetRxEPB_1()                      (dbkGetRxnByte(16))
#ifdef V_ENABLE_USED_GLOBAL_VAR
#define dbkGetRxSyncEPB_1(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyFarRamToRam( & (pValue).cEPB_1[0], dbkGetRxnByte(16), 8); \
  EndRxReadSync(); \
}
#else
#define dbkGetRxSyncEPB_1(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyRamToRam( & (pValue).cEPB_1[0], dbkGetRxnByte(16), 8); \
  EndRxReadSync(); \
}
#endif

#define dbkGetRxECM_A3_PKT()                 (dbkGetRxnByte(17))
#ifdef V_ENABLE_USED_GLOBAL_VAR
#define dbkGetRxSyncECM_A3_PKT(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyFarRamToRam( & (pValue).cECM_A3_PKT[0], dbkGetRxnByte(17), 8); \
  EndRxReadSync(); \
}
#else
#define dbkGetRxSyncECM_A3_PKT(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyRamToRam( & (pValue).cECM_A3_PKT[0], dbkGetRxnByte(17), 8); \
  EndRxReadSync(); \
}
#endif

#define dbkGetRxEngOilTemp()                 (dbkGetRxByte(18))
#define dbkGetRxSyncEngOilTemp(pValue) \
{ \
  pValue.cEngOilTemp = dbkGetRxByte(18); \
}
#define dbkGetRxPTS_StrCtrl()                (dbkGetRxnByte(19))
#ifdef V_ENABLE_USED_GLOBAL_VAR
#define dbkGetRxSyncPTS_StrCtrl(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyFarRamToRam( & (pValue).cPTS_StrCtrl[0], dbkGetRxnByte(19), 8); \
  EndRxReadSync(); \
}
#else
#define dbkGetRxSyncPTS_StrCtrl(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyRamToRam( & (pValue).cPTS_StrCtrl[0], dbkGetRxnByte(19), 8); \
  EndRxReadSync(); \
}
#endif

#define dbkGetRxDST_TOC()                    (dbkGetRxnByte(20))
#ifdef V_ENABLE_USED_GLOBAL_VAR
#define dbkGetRxSyncDST_TOC(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyFarRamToRam( & (pValue).cDST_TOC[0], dbkGetRxnByte(20), 8); \
  EndRxReadSync(); \
}
#else
#define dbkGetRxSyncDST_TOC(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyRamToRam( & (pValue).cDST_TOC[0], dbkGetRxnByte(20), 8); \
  EndRxReadSync(); \
}
#endif

#define dbkGetRxHaLF_StrCtrl()               (dbkGetRxnByte(21))
#ifdef V_ENABLE_USED_GLOBAL_VAR
#define dbkGetRxSyncHaLF_StrCtrl(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyFarRamToRam( & (pValue).cHaLF_StrCtrl[0], dbkGetRxnByte(21), 6); \
  EndRxReadSync(); \
}
#else
#define dbkGetRxSyncHaLF_StrCtrl(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyRamToRam( & (pValue).cHaLF_StrCtrl[0], dbkGetRxnByte(21), 6); \
  EndRxReadSync(); \
}
#endif

#define dbkGetRxWHEEL_SPEED2()               (dbkGetRxnByte(22))
#ifdef V_ENABLE_USED_GLOBAL_VAR
#define dbkGetRxSyncWHEEL_SPEED2(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyFarRamToRam( & (pValue).cWHEEL_SPEED2[0], dbkGetRxnByte(22), 4); \
  EndRxReadSync(); \
}
#else
#define dbkGetRxSyncWHEEL_SPEED2(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyRamToRam( & (pValue).cWHEEL_SPEED2[0], dbkGetRxnByte(22), 4); \
  EndRxReadSync(); \
}
#endif

#define dbkGetRxAirTemp_Outsd()              (dbkGetRxByte(23))
#define dbkGetRxSyncAirTemp_Outsd(pValue) \
{ \
  pValue.cAirTemp_Outsd = dbkGetRxByte(23); \
}
#define dbkGetRxAMB_TEMP_AVG()               (dbkGetRxWord(24))
#define dbkGetRxSyncAMB_TEMP_AVG(pValue) \
{ \
  pValue.cAMB_TEMP_AVG = dbkGetRxWord(24); \
}
#define dbkGetRxBATT_VOLT()                  (dbkGetRxByte(25))
#define dbkGetRxSyncBATT_VOLT(pValue) \
{ \
  pValue.cBATT_VOLT = dbkGetRxByte(25); \
}
#define dbkGetRxTRNS_STAT_PKT()              (dbkGetRxnByte(26))
#ifdef V_ENABLE_USED_GLOBAL_VAR
#define dbkGetRxSyncTRNS_STAT_PKT(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyFarRamToRam( & (pValue).cTRNS_STAT_PKT[0], dbkGetRxnByte(26), 8); \
  EndRxReadSync(); \
}
#else
#define dbkGetRxSyncTRNS_STAT_PKT(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyRamToRam( & (pValue).cTRNS_STAT_PKT[0], dbkGetRxnByte(26), 8); \
  EndRxReadSync(); \
}
#endif

#define dbkGetRxWHEEL_SPEED()                (dbkGetRxnByte(27))
#ifdef V_ENABLE_USED_GLOBAL_VAR
#define dbkGetRxSyncWHEEL_SPEED(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyFarRamToRam( & (pValue).cWHEEL_SPEED[0], dbkGetRxnByte(27), 8); \
  EndRxReadSync(); \
}
#else
#define dbkGetRxSyncWHEEL_SPEED(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyRamToRam( & (pValue).cWHEEL_SPEED[0], dbkGetRxnByte(27), 8); \
  EndRxReadSync(); \
}
#endif

#define dbkGetRxVehAccel_X()                 (dbkGetRxByte(28))
#define dbkGetRxSyncVehAccel_X(pValue) \
{ \
  pValue.cVehAccel_X = dbkGetRxByte(28); \
}
#define dbkGetRxVehAccel_Y()                 (dbkGetRxByte(29))
#define dbkGetRxSyncVehAccel_Y(pValue) \
{ \
  pValue.cVehAccel_Y = dbkGetRxByte(29); \
}
#define dbkGetRxGear_Pkt()                   (dbkGetRxWord(30))
#define dbkGetRxSyncGear_Pkt(pValue) \
{ \
  pValue.cGear_Pkt = dbkGetRxWord(30); \
}
#define dbkGetRxORC_YRS_PKT()                (dbkGetRxnByte(31))
#ifdef V_ENABLE_USED_GLOBAL_VAR
#define dbkGetRxSyncORC_YRS_PKT(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyFarRamToRam( & (pValue).cORC_YRS_PKT[0], dbkGetRxnByte(31), 8); \
  EndRxReadSync(); \
}
#else
#define dbkGetRxSyncORC_YRS_PKT(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyRamToRam( & (pValue).cORC_YRS_PKT[0], dbkGetRxnByte(31), 8); \
  EndRxReadSync(); \
}
#endif

#define dbkGetRxESP_WHL_PULS()               (dbkGetRxnByte(32))
#ifdef V_ENABLE_USED_GLOBAL_VAR
#define dbkGetRxSyncESP_WHL_PULS(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyFarRamToRam( & (pValue).cESP_WHL_PULS[0], dbkGetRxnByte(32), 4); \
  EndRxReadSync(); \
}
#else
#define dbkGetRxSyncESP_WHL_PULS(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyRamToRam( & (pValue).cESP_WHL_PULS[0], dbkGetRxnByte(32), 4); \
  EndRxReadSync(); \
}
#endif

#define dbkGetRxVEH_SPEED_PKT()              (dbkGetRxnByte(33))
#ifdef V_ENABLE_USED_GLOBAL_VAR
#define dbkGetRxSyncVEH_SPEED_PKT(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyFarRamToRam( & (pValue).cVEH_SPEED_PKT[0], dbkGetRxnByte(33), 8); \
  EndRxReadSync(); \
}
#else
#define dbkGetRxSyncVEH_SPEED_PKT(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyRamToRam( & (pValue).cVEH_SPEED_PKT[0], dbkGetRxnByte(33), 8); \
  EndRxReadSync(); \
}
#endif

#define dbkGetRxVehStart_PKT()               (dbkGetRxWord(34))
#define dbkGetRxSyncVehStart_PKT(pValue) \
{ \
  pValue.cVehStart_PKT = dbkGetRxWord(34); \
}
#define dbkGetRxECM_A1_PKT()                 (dbkGetRxnByte(35))
#ifdef V_ENABLE_USED_GLOBAL_VAR
#define dbkGetRxSyncECM_A1_PKT(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyFarRamToRam( & (pValue).cECM_A1_PKT[0], dbkGetRxnByte(35), 8); \
  EndRxReadSync(); \
}
#else
#define dbkGetRxSyncECM_A1_PKT(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyRamToRam( & (pValue).cECM_A1_PKT[0], dbkGetRxnByte(35), 8); \
  EndRxReadSync(); \
}
#endif

#define dbkGetRxLRW_ST()                     (dbkGetRxnByte(36))
#ifdef V_ENABLE_USED_GLOBAL_VAR
#define dbkGetRxSyncLRW_ST(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyFarRamToRam( & (pValue).cLRW_ST[0], dbkGetRxnByte(36), 8); \
  EndRxReadSync(); \
}
#else
#define dbkGetRxSyncLRW_ST(pValue) \
{ \
  StartRxReadSync(); \
  (void) VStdMemCpyRamToRam( & (pValue).cLRW_ST[0], dbkGetRxnByte(36), 8); \
  EndRxReadSync(); \
}
#endif



/* -----------------------------------------------------------------------------
    &&&~ Rx signal put functions
 ----------------------------------------------------------------------------- */

#define dbkPutRxVehCfg5_Pkt(value)           (dbkPutRxnByte(0, value.cVehCfg5_Pkt))
#define dbkPutRxEC_ECUCfg6_Stat(value)       (dbkPutRxByte(1, value.cEC_ECUCfg6_Stat))
#define dbkPutRxEC_Steering(value)           (dbkPutRxWord(2, value.cEC_Steering))
#define dbkPutRxVehCfg4_Pkt(value)           (dbkPutRxnByte(3, value.cVehCfg4_Pkt))
#define dbkPutRxVehCfg3_Pkt(value)           (dbkPutRxnByte(4, value.cVehCfg3_Pkt))
#define dbkPutRxVehCfg2_Pkt(value)           (dbkPutRxnByte(5, value.cVehCfg2_Pkt))
#define dbkPutRxVehCfg1_Pkt(value)           (dbkPutRxnByte(6, value.cVehCfg1_Pkt))
#define dbkPutRxNET_CFG_DATA_PT(value)       (dbkPutRxnByte(7, value.cNET_CFG_DATA_PT))
#define dbkPutRxENG_CFG(value)               (dbkPutRxnByte(8, value.cENG_CFG))
#define dbkPutRxVIN_INFO(value)              (dbkPutRxnByte(9, value.cVIN_INFO))
#define dbkPutRxVehCfg7_Pkt(value)           (dbkPutRxnByte(10, value.cVehCfg7_Pkt))
#define dbkPutRxREV_GEAR(value)              (dbkPutRxByte(11, value.cREV_GEAR))
#define dbkPutRxEPS_MODE_REQ(value)          (dbkPutRxByte(12, value.cEPS_MODE_REQ))
#define dbkPutRxCFG_RQ_C(value)              (dbkPutRxnByte(13, value.cCFG_RQ_C))
#define dbkPutRxCFG_RQ(value)                (dbkPutRxnByte(14, value.cCFG_RQ))
#define dbkPutRxODO(value)                   (dbkPutRxnByte(15, value.cODO))
#define dbkPutRxEPB_1(value)                 (dbkPutRxnByte(16, value.cEPB_1))
#define dbkPutRxECM_A3_PKT(value)            (dbkPutRxnByte(17, value.cECM_A3_PKT))
#define dbkPutRxEngOilTemp(value)            (dbkPutRxByte(18, value.cEngOilTemp))
#define dbkPutRxPTS_StrCtrl(value)           (dbkPutRxnByte(19, value.cPTS_StrCtrl))
#define dbkPutRxDST_TOC(value)               (dbkPutRxnByte(20, value.cDST_TOC))
#define dbkPutRxHaLF_StrCtrl(value)          (dbkPutRxnByte(21, value.cHaLF_StrCtrl))
#define dbkPutRxWHEEL_SPEED2(value)          (dbkPutRxnByte(22, value.cWHEEL_SPEED2))
#define dbkPutRxAirTemp_Outsd(value)         (dbkPutRxByte(23, value.cAirTemp_Outsd))
#define dbkPutRxAMB_TEMP_AVG(value)          (dbkPutRxWord(24, value.cAMB_TEMP_AVG))
#define dbkPutRxBATT_VOLT(value)             (dbkPutRxByte(25, value.cBATT_VOLT))
#define dbkPutRxTRNS_STAT_PKT(value)         (dbkPutRxnByte(26, value.cTRNS_STAT_PKT))
#define dbkPutRxWHEEL_SPEED(value)           (dbkPutRxnByte(27, value.cWHEEL_SPEED))
#define dbkPutRxVehAccel_X(value)            (dbkPutRxByte(28, value.cVehAccel_X))
#define dbkPutRxVehAccel_Y(value)            (dbkPutRxByte(29, value.cVehAccel_Y))
#define dbkPutRxGear_Pkt(value)              (dbkPutRxWord(30, value.cGear_Pkt))
#define dbkPutRxORC_YRS_PKT(value)           (dbkPutRxnByte(31, value.cORC_YRS_PKT))
#define dbkPutRxESP_WHL_PULS(value)          (dbkPutRxnByte(32, value.cESP_WHL_PULS))
#define dbkPutRxVEH_SPEED_PKT(value)         (dbkPutRxnByte(33, value.cVEH_SPEED_PKT))
#define dbkPutRxVehStart_PKT(value)          (dbkPutRxWord(34, value.cVehStart_PKT))
#define dbkPutRxECM_A1_PKT(value)            (dbkPutRxnByte(35, value.cECM_A1_PKT))
#define dbkPutRxLRW_ST(value)                (dbkPutRxnByte(36, value.cLRW_ST))


/* -----------------------------------------------------------------------------
    &&&~ Rx signal direct put functions
 ----------------------------------------------------------------------------- */

#define dbkPutDirectRxVehCfg5_Pkt(value)     (dbkPutRxnByte(0, (value)))
#define dbkPutDirectRxEC_ECUCfg6_Stat(value) (dbkPutRxByte(1, (value)))
#define dbkPutDirectRxEC_Steering(value)     (dbkPutRxWord(2, (value)))
#define dbkPutDirectRxVehCfg4_Pkt(value)     (dbkPutRxnByte(3, (value)))
#define dbkPutDirectRxVehCfg3_Pkt(value)     (dbkPutRxnByte(4, (value)))
#define dbkPutDirectRxVehCfg2_Pkt(value)     (dbkPutRxnByte(5, (value)))
#define dbkPutDirectRxVehCfg1_Pkt(value)     (dbkPutRxnByte(6, (value)))
#define dbkPutDirectRxNET_CFG_DATA_PT(value) (dbkPutRxnByte(7, (value)))
#define dbkPutDirectRxENG_CFG(value)         (dbkPutRxnByte(8, (value)))
#define dbkPutDirectRxVIN_INFO(value)        (dbkPutRxnByte(9, (value)))
#define dbkPutDirectRxVehCfg7_Pkt(value)     (dbkPutRxnByte(10, (value)))
#define dbkPutDirectRxREV_GEAR(value)        (dbkPutRxByte(11, (value)))
#define dbkPutDirectRxEPS_MODE_REQ(value)    (dbkPutRxByte(12, (value)))
#define dbkPutDirectRxCFG_RQ_C(value)        (dbkPutRxnByte(13, (value)))
#define dbkPutDirectRxCFG_RQ(value)          (dbkPutRxnByte(14, (value)))
#define dbkPutDirectRxODO(value)             (dbkPutRxnByte(15, (value)))
#define dbkPutDirectRxEPB_1(value)           (dbkPutRxnByte(16, (value)))
#define dbkPutDirectRxECM_A3_PKT(value)      (dbkPutRxnByte(17, (value)))
#define dbkPutDirectRxEngOilTemp(value)      (dbkPutRxByte(18, (value)))
#define dbkPutDirectRxPTS_StrCtrl(value)     (dbkPutRxnByte(19, (value)))
#define dbkPutDirectRxDST_TOC(value)         (dbkPutRxnByte(20, (value)))
#define dbkPutDirectRxHaLF_StrCtrl(value)    (dbkPutRxnByte(21, (value)))
#define dbkPutDirectRxWHEEL_SPEED2(value)    (dbkPutRxnByte(22, (value)))
#define dbkPutDirectRxAirTemp_Outsd(value)   (dbkPutRxByte(23, (value)))
#define dbkPutDirectRxAMB_TEMP_AVG(value)    (dbkPutRxWord(24, (value)))
#define dbkPutDirectRxBATT_VOLT(value)       (dbkPutRxByte(25, (value)))
#define dbkPutDirectRxTRNS_STAT_PKT(value)   (dbkPutRxnByte(26, (value)))
#define dbkPutDirectRxWHEEL_SPEED(value)     (dbkPutRxnByte(27, (value)))
#define dbkPutDirectRxVehAccel_X(value)      (dbkPutRxByte(28, (value)))
#define dbkPutDirectRxVehAccel_Y(value)      (dbkPutRxByte(29, (value)))
#define dbkPutDirectRxGear_Pkt(value)        (dbkPutRxWord(30, (value)))
#define dbkPutDirectRxORC_YRS_PKT(value)     (dbkPutRxnByte(31, (value)))
#define dbkPutDirectRxESP_WHL_PULS(value)    (dbkPutRxnByte(32, (value)))
#define dbkPutDirectRxVEH_SPEED_PKT(value)   (dbkPutRxnByte(33, (value)))
#define dbkPutDirectRxVehStart_PKT(value)    (dbkPutRxWord(34, (value)))
#define dbkPutDirectRxECM_A1_PKT(value)      (dbkPutRxnByte(35, (value)))
#define dbkPutDirectRxLRW_ST(value)          (dbkPutRxnByte(36, (value)))


/* -----------------------------------------------------------------------------
    &&&~ Rx signal, set/get strbyte
 ----------------------------------------------------------------------------- */

#define SetByte0RxVehCfg5_Pkt(variable, value) ((variable).c[7] = (vuint8) (value))
#define SetByte1RxVehCfg5_Pkt(variable, value) ((variable).c[6] = (vuint8) (value))
#define SetByte2RxVehCfg5_Pkt(variable, value) ((variable).c[5] = (vuint8) (value))
#define SetByte3RxVehCfg5_Pkt(variable, value) ((variable).c[4] = (vuint8) (value))
#define SetByte4RxVehCfg5_Pkt(variable, value) ((variable).c[3] = (vuint8) (value))
#define SetByte5RxVehCfg5_Pkt(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetByte6RxVehCfg5_Pkt(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetByte7RxVehCfg5_Pkt(variable, value) ((variable).c[0] = (vuint8) (value))

#define SetStrByte0RxVehCfg5_Pkt(variable, value) ((variable).c[0] = (vuint8) (value))
#define SetStrByte1RxVehCfg5_Pkt(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetStrByte2RxVehCfg5_Pkt(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetStrByte3RxVehCfg5_Pkt(variable, value) ((variable).c[3] = (vuint8) (value))
#define SetStrByte4RxVehCfg5_Pkt(variable, value) ((variable).c[4] = (vuint8) (value))
#define SetStrByte5RxVehCfg5_Pkt(variable, value) ((variable).c[5] = (vuint8) (value))
#define SetStrByte6RxVehCfg5_Pkt(variable, value) ((variable).c[6] = (vuint8) (value))
#define SetStrByte7RxVehCfg5_Pkt(variable, value) ((variable).c[7] = (vuint8) (value))

#define SetByte0RxVehCfg4_Pkt(variable, value) ((variable).c[7] = (vuint8) (value))
#define SetByte1RxVehCfg4_Pkt(variable, value) ((variable).c[6] = (vuint8) (value))
#define SetByte2RxVehCfg4_Pkt(variable, value) ((variable).c[5] = (vuint8) (value))
#define SetByte3RxVehCfg4_Pkt(variable, value) ((variable).c[4] = (vuint8) (value))
#define SetByte4RxVehCfg4_Pkt(variable, value) ((variable).c[3] = (vuint8) (value))
#define SetByte5RxVehCfg4_Pkt(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetByte6RxVehCfg4_Pkt(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetByte7RxVehCfg4_Pkt(variable, value) ((variable).c[0] = (vuint8) (value))

#define SetStrByte0RxVehCfg4_Pkt(variable, value) ((variable).c[0] = (vuint8) (value))
#define SetStrByte1RxVehCfg4_Pkt(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetStrByte2RxVehCfg4_Pkt(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetStrByte3RxVehCfg4_Pkt(variable, value) ((variable).c[3] = (vuint8) (value))
#define SetStrByte4RxVehCfg4_Pkt(variable, value) ((variable).c[4] = (vuint8) (value))
#define SetStrByte5RxVehCfg4_Pkt(variable, value) ((variable).c[5] = (vuint8) (value))
#define SetStrByte6RxVehCfg4_Pkt(variable, value) ((variable).c[6] = (vuint8) (value))
#define SetStrByte7RxVehCfg4_Pkt(variable, value) ((variable).c[7] = (vuint8) (value))

#define SetByte0RxVehCfg3_Pkt(variable, value) ((variable).c[7] = (vuint8) (value))
#define SetByte1RxVehCfg3_Pkt(variable, value) ((variable).c[6] = (vuint8) (value))
#define SetByte2RxVehCfg3_Pkt(variable, value) ((variable).c[5] = (vuint8) (value))
#define SetByte3RxVehCfg3_Pkt(variable, value) ((variable).c[4] = (vuint8) (value))
#define SetByte4RxVehCfg3_Pkt(variable, value) ((variable).c[3] = (vuint8) (value))
#define SetByte5RxVehCfg3_Pkt(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetByte6RxVehCfg3_Pkt(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetByte7RxVehCfg3_Pkt(variable, value) ((variable).c[0] = (vuint8) (value))

#define SetStrByte0RxVehCfg3_Pkt(variable, value) ((variable).c[0] = (vuint8) (value))
#define SetStrByte1RxVehCfg3_Pkt(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetStrByte2RxVehCfg3_Pkt(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetStrByte3RxVehCfg3_Pkt(variable, value) ((variable).c[3] = (vuint8) (value))
#define SetStrByte4RxVehCfg3_Pkt(variable, value) ((variable).c[4] = (vuint8) (value))
#define SetStrByte5RxVehCfg3_Pkt(variable, value) ((variable).c[5] = (vuint8) (value))
#define SetStrByte6RxVehCfg3_Pkt(variable, value) ((variable).c[6] = (vuint8) (value))
#define SetStrByte7RxVehCfg3_Pkt(variable, value) ((variable).c[7] = (vuint8) (value))

#define SetByte0RxVehCfg2_Pkt(variable, value) ((variable).c[7] = (vuint8) (value))
#define SetByte1RxVehCfg2_Pkt(variable, value) ((variable).c[6] = (vuint8) (value))
#define SetByte2RxVehCfg2_Pkt(variable, value) ((variable).c[5] = (vuint8) (value))
#define SetByte3RxVehCfg2_Pkt(variable, value) ((variable).c[4] = (vuint8) (value))
#define SetByte4RxVehCfg2_Pkt(variable, value) ((variable).c[3] = (vuint8) (value))
#define SetByte5RxVehCfg2_Pkt(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetByte6RxVehCfg2_Pkt(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetByte7RxVehCfg2_Pkt(variable, value) ((variable).c[0] = (vuint8) (value))

#define SetStrByte0RxVehCfg2_Pkt(variable, value) ((variable).c[0] = (vuint8) (value))
#define SetStrByte1RxVehCfg2_Pkt(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetStrByte2RxVehCfg2_Pkt(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetStrByte3RxVehCfg2_Pkt(variable, value) ((variable).c[3] = (vuint8) (value))
#define SetStrByte4RxVehCfg2_Pkt(variable, value) ((variable).c[4] = (vuint8) (value))
#define SetStrByte5RxVehCfg2_Pkt(variable, value) ((variable).c[5] = (vuint8) (value))
#define SetStrByte6RxVehCfg2_Pkt(variable, value) ((variable).c[6] = (vuint8) (value))
#define SetStrByte7RxVehCfg2_Pkt(variable, value) ((variable).c[7] = (vuint8) (value))

#define SetByte0RxVehCfg1_Pkt(variable, value) ((variable).c[7] = (vuint8) (value))
#define SetByte1RxVehCfg1_Pkt(variable, value) ((variable).c[6] = (vuint8) (value))
#define SetByte2RxVehCfg1_Pkt(variable, value) ((variable).c[5] = (vuint8) (value))
#define SetByte3RxVehCfg1_Pkt(variable, value) ((variable).c[4] = (vuint8) (value))
#define SetByte4RxVehCfg1_Pkt(variable, value) ((variable).c[3] = (vuint8) (value))
#define SetByte5RxVehCfg1_Pkt(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetByte6RxVehCfg1_Pkt(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetByte7RxVehCfg1_Pkt(variable, value) ((variable).c[0] = (vuint8) (value))

#define SetStrByte0RxVehCfg1_Pkt(variable, value) ((variable).c[0] = (vuint8) (value))
#define SetStrByte1RxVehCfg1_Pkt(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetStrByte2RxVehCfg1_Pkt(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetStrByte3RxVehCfg1_Pkt(variable, value) ((variable).c[3] = (vuint8) (value))
#define SetStrByte4RxVehCfg1_Pkt(variable, value) ((variable).c[4] = (vuint8) (value))
#define SetStrByte5RxVehCfg1_Pkt(variable, value) ((variable).c[5] = (vuint8) (value))
#define SetStrByte6RxVehCfg1_Pkt(variable, value) ((variable).c[6] = (vuint8) (value))
#define SetStrByte7RxVehCfg1_Pkt(variable, value) ((variable).c[7] = (vuint8) (value))

#define SetByte0RxNET_CFG_DATA_PT(variable, value) ((variable).c[7] = (vuint8) (value))
#define SetByte1RxNET_CFG_DATA_PT(variable, value) ((variable).c[6] = (vuint8) (value))
#define SetByte2RxNET_CFG_DATA_PT(variable, value) ((variable).c[5] = (vuint8) (value))
#define SetByte3RxNET_CFG_DATA_PT(variable, value) ((variable).c[4] = (vuint8) (value))
#define SetByte4RxNET_CFG_DATA_PT(variable, value) ((variable).c[3] = (vuint8) (value))
#define SetByte5RxNET_CFG_DATA_PT(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetByte6RxNET_CFG_DATA_PT(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetByte7RxNET_CFG_DATA_PT(variable, value) ((variable).c[0] = (vuint8) (value))

#define SetStrByte0RxNET_CFG_DATA_PT(variable, value) ((variable).c[0] = (vuint8) (value))
#define SetStrByte1RxNET_CFG_DATA_PT(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetStrByte2RxNET_CFG_DATA_PT(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetStrByte3RxNET_CFG_DATA_PT(variable, value) ((variable).c[3] = (vuint8) (value))
#define SetStrByte4RxNET_CFG_DATA_PT(variable, value) ((variable).c[4] = (vuint8) (value))
#define SetStrByte5RxNET_CFG_DATA_PT(variable, value) ((variable).c[5] = (vuint8) (value))
#define SetStrByte6RxNET_CFG_DATA_PT(variable, value) ((variable).c[6] = (vuint8) (value))
#define SetStrByte7RxNET_CFG_DATA_PT(variable, value) ((variable).c[7] = (vuint8) (value))

#define SetByte0RxENG_CFG(variable, value)   ((variable).c[3] = (vuint8) (value))
#define SetByte1RxENG_CFG(variable, value)   ((variable).c[2] = (vuint8) (value))
#define SetByte2RxENG_CFG(variable, value)   ((variable).c[1] = (vuint8) (value))
#define SetByte3RxENG_CFG(variable, value)   ((variable).c[0] = (vuint8) (value))

#define SetStrByte0RxENG_CFG(variable, value) ((variable).c[0] = (vuint8) (value))
#define SetStrByte1RxENG_CFG(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetStrByte2RxENG_CFG(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetStrByte3RxENG_CFG(variable, value) ((variable).c[3] = (vuint8) (value))

#define SetByte0RxVIN_INFO(variable, value)  ((variable).c[7] = (vuint8) (value))
#define SetByte1RxVIN_INFO(variable, value)  ((variable).c[6] = (vuint8) (value))
#define SetByte2RxVIN_INFO(variable, value)  ((variable).c[5] = (vuint8) (value))
#define SetByte3RxVIN_INFO(variable, value)  ((variable).c[4] = (vuint8) (value))
#define SetByte4RxVIN_INFO(variable, value)  ((variable).c[3] = (vuint8) (value))
#define SetByte5RxVIN_INFO(variable, value)  ((variable).c[2] = (vuint8) (value))
#define SetByte6RxVIN_INFO(variable, value)  ((variable).c[1] = (vuint8) (value))
#define SetByte7RxVIN_INFO(variable, value)  ((variable).c[0] = (vuint8) (value))

#define SetStrByte0RxVIN_INFO(variable, value) ((variable).c[0] = (vuint8) (value))
#define SetStrByte1RxVIN_INFO(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetStrByte2RxVIN_INFO(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetStrByte3RxVIN_INFO(variable, value) ((variable).c[3] = (vuint8) (value))
#define SetStrByte4RxVIN_INFO(variable, value) ((variable).c[4] = (vuint8) (value))
#define SetStrByte5RxVIN_INFO(variable, value) ((variable).c[5] = (vuint8) (value))
#define SetStrByte6RxVIN_INFO(variable, value) ((variable).c[6] = (vuint8) (value))
#define SetStrByte7RxVIN_INFO(variable, value) ((variable).c[7] = (vuint8) (value))

#define SetByte0RxVehCfg7_Pkt(variable, value) ((variable).c[7] = (vuint8) (value))
#define SetByte1RxVehCfg7_Pkt(variable, value) ((variable).c[6] = (vuint8) (value))
#define SetByte2RxVehCfg7_Pkt(variable, value) ((variable).c[5] = (vuint8) (value))
#define SetByte3RxVehCfg7_Pkt(variable, value) ((variable).c[4] = (vuint8) (value))
#define SetByte4RxVehCfg7_Pkt(variable, value) ((variable).c[3] = (vuint8) (value))
#define SetByte5RxVehCfg7_Pkt(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetByte6RxVehCfg7_Pkt(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetByte7RxVehCfg7_Pkt(variable, value) ((variable).c[0] = (vuint8) (value))

#define SetStrByte0RxVehCfg7_Pkt(variable, value) ((variable).c[0] = (vuint8) (value))
#define SetStrByte1RxVehCfg7_Pkt(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetStrByte2RxVehCfg7_Pkt(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetStrByte3RxVehCfg7_Pkt(variable, value) ((variable).c[3] = (vuint8) (value))
#define SetStrByte4RxVehCfg7_Pkt(variable, value) ((variable).c[4] = (vuint8) (value))
#define SetStrByte5RxVehCfg7_Pkt(variable, value) ((variable).c[5] = (vuint8) (value))
#define SetStrByte6RxVehCfg7_Pkt(variable, value) ((variable).c[6] = (vuint8) (value))
#define SetStrByte7RxVehCfg7_Pkt(variable, value) ((variable).c[7] = (vuint8) (value))

#define SetByte0RxCFG_RQ_C(variable, value)  ((variable).c[2] = (vuint8) (value))
#define SetByte1RxCFG_RQ_C(variable, value)  ((variable).c[1] = (vuint8) (value))
#define SetByte2RxCFG_RQ_C(variable, value)  ((variable).c[0] = (vuint8) (value))

#define SetStrByte0RxCFG_RQ_C(variable, value) ((variable).c[0] = (vuint8) (value))
#define SetStrByte1RxCFG_RQ_C(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetStrByte2RxCFG_RQ_C(variable, value) ((variable).c[2] = (vuint8) (value))

#define SetByte0RxCFG_RQ(variable, value)    ((variable).c[2] = (vuint8) (value))
#define SetByte1RxCFG_RQ(variable, value)    ((variable).c[1] = (vuint8) (value))
#define SetByte2RxCFG_RQ(variable, value)    ((variable).c[0] = (vuint8) (value))

#define SetStrByte0RxCFG_RQ(variable, value) ((variable).c[0] = (vuint8) (value))
#define SetStrByte1RxCFG_RQ(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetStrByte2RxCFG_RQ(variable, value) ((variable).c[2] = (vuint8) (value))

#define SetByte0RxODO(variable, value)       ((variable).c[2] = (vuint8) (value))
#define SetByte1RxODO(variable, value)       ((variable).c[1] = (vuint8) (value))
#define SetByte2RxODO(variable, value)       ((variable).c[0] = (vuint8) (value))

#define SetStrByte0RxODO(variable, value)    ((variable).c[0] = (vuint8) (value))
#define SetStrByte1RxODO(variable, value)    ((variable).c[1] = (vuint8) (value))
#define SetStrByte2RxODO(variable, value)    ((variable).c[2] = (vuint8) (value))

#define SetByte0RxEPB_1(variable, value)     ((variable).c[7] = (vuint8) (value))
#define SetByte1RxEPB_1(variable, value)     ((variable).c[6] = (vuint8) (value))
#define SetByte2RxEPB_1(variable, value)     ((variable).c[5] = (vuint8) (value))
#define SetByte3RxEPB_1(variable, value)     ((variable).c[4] = (vuint8) (value))
#define SetByte4RxEPB_1(variable, value)     ((variable).c[3] = (vuint8) (value))
#define SetByte5RxEPB_1(variable, value)     ((variable).c[2] = (vuint8) (value))
#define SetByte6RxEPB_1(variable, value)     ((variable).c[1] = (vuint8) (value))
#define SetByte7RxEPB_1(variable, value)     ((variable).c[0] = (vuint8) (value))

#define SetStrByte0RxEPB_1(variable, value)  ((variable).c[0] = (vuint8) (value))
#define SetStrByte1RxEPB_1(variable, value)  ((variable).c[1] = (vuint8) (value))
#define SetStrByte2RxEPB_1(variable, value)  ((variable).c[2] = (vuint8) (value))
#define SetStrByte3RxEPB_1(variable, value)  ((variable).c[3] = (vuint8) (value))
#define SetStrByte4RxEPB_1(variable, value)  ((variable).c[4] = (vuint8) (value))
#define SetStrByte5RxEPB_1(variable, value)  ((variable).c[5] = (vuint8) (value))
#define SetStrByte6RxEPB_1(variable, value)  ((variable).c[6] = (vuint8) (value))
#define SetStrByte7RxEPB_1(variable, value)  ((variable).c[7] = (vuint8) (value))

#define SetByte0RxECM_A3_PKT(variable, value) ((variable).c[7] = (vuint8) (value))
#define SetByte1RxECM_A3_PKT(variable, value) ((variable).c[6] = (vuint8) (value))
#define SetByte2RxECM_A3_PKT(variable, value) ((variable).c[5] = (vuint8) (value))
#define SetByte3RxECM_A3_PKT(variable, value) ((variable).c[4] = (vuint8) (value))
#define SetByte4RxECM_A3_PKT(variable, value) ((variable).c[3] = (vuint8) (value))
#define SetByte5RxECM_A3_PKT(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetByte6RxECM_A3_PKT(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetByte7RxECM_A3_PKT(variable, value) ((variable).c[0] = (vuint8) (value))

#define SetStrByte0RxECM_A3_PKT(variable, value) ((variable).c[0] = (vuint8) (value))
#define SetStrByte1RxECM_A3_PKT(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetStrByte2RxECM_A3_PKT(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetStrByte3RxECM_A3_PKT(variable, value) ((variable).c[3] = (vuint8) (value))
#define SetStrByte4RxECM_A3_PKT(variable, value) ((variable).c[4] = (vuint8) (value))
#define SetStrByte5RxECM_A3_PKT(variable, value) ((variable).c[5] = (vuint8) (value))
#define SetStrByte6RxECM_A3_PKT(variable, value) ((variable).c[6] = (vuint8) (value))
#define SetStrByte7RxECM_A3_PKT(variable, value) ((variable).c[7] = (vuint8) (value))

#define SetByte0RxPTS_StrCtrl(variable, value) ((variable).c[7] = (vuint8) (value))
#define SetByte1RxPTS_StrCtrl(variable, value) ((variable).c[6] = (vuint8) (value))
#define SetByte2RxPTS_StrCtrl(variable, value) ((variable).c[5] = (vuint8) (value))
#define SetByte3RxPTS_StrCtrl(variable, value) ((variable).c[4] = (vuint8) (value))
#define SetByte4RxPTS_StrCtrl(variable, value) ((variable).c[3] = (vuint8) (value))
#define SetByte5RxPTS_StrCtrl(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetByte6RxPTS_StrCtrl(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetByte7RxPTS_StrCtrl(variable, value) ((variable).c[0] = (vuint8) (value))

#define SetStrByte0RxPTS_StrCtrl(variable, value) ((variable).c[0] = (vuint8) (value))
#define SetStrByte1RxPTS_StrCtrl(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetStrByte2RxPTS_StrCtrl(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetStrByte3RxPTS_StrCtrl(variable, value) ((variable).c[3] = (vuint8) (value))
#define SetStrByte4RxPTS_StrCtrl(variable, value) ((variable).c[4] = (vuint8) (value))
#define SetStrByte5RxPTS_StrCtrl(variable, value) ((variable).c[5] = (vuint8) (value))
#define SetStrByte6RxPTS_StrCtrl(variable, value) ((variable).c[6] = (vuint8) (value))
#define SetStrByte7RxPTS_StrCtrl(variable, value) ((variable).c[7] = (vuint8) (value))

#define SetByte0RxDST_TOC(variable, value)   ((variable).c[7] = (vuint8) (value))
#define SetByte1RxDST_TOC(variable, value)   ((variable).c[6] = (vuint8) (value))
#define SetByte2RxDST_TOC(variable, value)   ((variable).c[5] = (vuint8) (value))
#define SetByte3RxDST_TOC(variable, value)   ((variable).c[4] = (vuint8) (value))
#define SetByte4RxDST_TOC(variable, value)   ((variable).c[3] = (vuint8) (value))
#define SetByte5RxDST_TOC(variable, value)   ((variable).c[2] = (vuint8) (value))
#define SetByte6RxDST_TOC(variable, value)   ((variable).c[1] = (vuint8) (value))
#define SetByte7RxDST_TOC(variable, value)   ((variable).c[0] = (vuint8) (value))

#define SetStrByte0RxDST_TOC(variable, value) ((variable).c[0] = (vuint8) (value))
#define SetStrByte1RxDST_TOC(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetStrByte2RxDST_TOC(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetStrByte3RxDST_TOC(variable, value) ((variable).c[3] = (vuint8) (value))
#define SetStrByte4RxDST_TOC(variable, value) ((variable).c[4] = (vuint8) (value))
#define SetStrByte5RxDST_TOC(variable, value) ((variable).c[5] = (vuint8) (value))
#define SetStrByte6RxDST_TOC(variable, value) ((variable).c[6] = (vuint8) (value))
#define SetStrByte7RxDST_TOC(variable, value) ((variable).c[7] = (vuint8) (value))

#define SetByte0RxHaLF_StrCtrl(variable, value) ((variable).c[5] = (vuint8) (value))
#define SetByte1RxHaLF_StrCtrl(variable, value) ((variable).c[4] = (vuint8) (value))
#define SetByte2RxHaLF_StrCtrl(variable, value) ((variable).c[3] = (vuint8) (value))
#define SetByte3RxHaLF_StrCtrl(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetByte4RxHaLF_StrCtrl(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetByte5RxHaLF_StrCtrl(variable, value) ((variable).c[0] = (vuint8) (value))

#define SetStrByte0RxHaLF_StrCtrl(variable, value) ((variable).c[0] = (vuint8) (value))
#define SetStrByte1RxHaLF_StrCtrl(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetStrByte2RxHaLF_StrCtrl(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetStrByte3RxHaLF_StrCtrl(variable, value) ((variable).c[3] = (vuint8) (value))
#define SetStrByte4RxHaLF_StrCtrl(variable, value) ((variable).c[4] = (vuint8) (value))
#define SetStrByte5RxHaLF_StrCtrl(variable, value) ((variable).c[5] = (vuint8) (value))

#define SetByte0RxWHEEL_SPEED2(variable, value) ((variable).c[3] = (vuint8) (value))
#define SetByte1RxWHEEL_SPEED2(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetByte2RxWHEEL_SPEED2(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetByte3RxWHEEL_SPEED2(variable, value) ((variable).c[0] = (vuint8) (value))

#define SetStrByte0RxWHEEL_SPEED2(variable, value) ((variable).c[0] = (vuint8) (value))
#define SetStrByte1RxWHEEL_SPEED2(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetStrByte2RxWHEEL_SPEED2(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetStrByte3RxWHEEL_SPEED2(variable, value) ((variable).c[3] = (vuint8) (value))

#define SetByte0RxTRNS_STAT_PKT(variable, value) ((variable).c[7] = (vuint8) (value))
#define SetByte1RxTRNS_STAT_PKT(variable, value) ((variable).c[6] = (vuint8) (value))
#define SetByte2RxTRNS_STAT_PKT(variable, value) ((variable).c[5] = (vuint8) (value))
#define SetByte3RxTRNS_STAT_PKT(variable, value) ((variable).c[4] = (vuint8) (value))
#define SetByte4RxTRNS_STAT_PKT(variable, value) ((variable).c[3] = (vuint8) (value))
#define SetByte5RxTRNS_STAT_PKT(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetByte6RxTRNS_STAT_PKT(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetByte7RxTRNS_STAT_PKT(variable, value) ((variable).c[0] = (vuint8) (value))

#define SetStrByte0RxTRNS_STAT_PKT(variable, value) ((variable).c[0] = (vuint8) (value))
#define SetStrByte1RxTRNS_STAT_PKT(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetStrByte2RxTRNS_STAT_PKT(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetStrByte3RxTRNS_STAT_PKT(variable, value) ((variable).c[3] = (vuint8) (value))
#define SetStrByte4RxTRNS_STAT_PKT(variable, value) ((variable).c[4] = (vuint8) (value))
#define SetStrByte5RxTRNS_STAT_PKT(variable, value) ((variable).c[5] = (vuint8) (value))
#define SetStrByte6RxTRNS_STAT_PKT(variable, value) ((variable).c[6] = (vuint8) (value))
#define SetStrByte7RxTRNS_STAT_PKT(variable, value) ((variable).c[7] = (vuint8) (value))

#define SetByte0RxWHEEL_SPEED(variable, value) ((variable).c[7] = (vuint8) (value))
#define SetByte1RxWHEEL_SPEED(variable, value) ((variable).c[6] = (vuint8) (value))
#define SetByte2RxWHEEL_SPEED(variable, value) ((variable).c[5] = (vuint8) (value))
#define SetByte3RxWHEEL_SPEED(variable, value) ((variable).c[4] = (vuint8) (value))
#define SetByte4RxWHEEL_SPEED(variable, value) ((variable).c[3] = (vuint8) (value))
#define SetByte5RxWHEEL_SPEED(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetByte6RxWHEEL_SPEED(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetByte7RxWHEEL_SPEED(variable, value) ((variable).c[0] = (vuint8) (value))

#define SetStrByte0RxWHEEL_SPEED(variable, value) ((variable).c[0] = (vuint8) (value))
#define SetStrByte1RxWHEEL_SPEED(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetStrByte2RxWHEEL_SPEED(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetStrByte3RxWHEEL_SPEED(variable, value) ((variable).c[3] = (vuint8) (value))
#define SetStrByte4RxWHEEL_SPEED(variable, value) ((variable).c[4] = (vuint8) (value))
#define SetStrByte5RxWHEEL_SPEED(variable, value) ((variable).c[5] = (vuint8) (value))
#define SetStrByte6RxWHEEL_SPEED(variable, value) ((variable).c[6] = (vuint8) (value))
#define SetStrByte7RxWHEEL_SPEED(variable, value) ((variable).c[7] = (vuint8) (value))

#define SetByte0RxORC_YRS_PKT(variable, value) ((variable).c[7] = (vuint8) (value))
#define SetByte1RxORC_YRS_PKT(variable, value) ((variable).c[6] = (vuint8) (value))
#define SetByte2RxORC_YRS_PKT(variable, value) ((variable).c[5] = (vuint8) (value))
#define SetByte3RxORC_YRS_PKT(variable, value) ((variable).c[4] = (vuint8) (value))
#define SetByte4RxORC_YRS_PKT(variable, value) ((variable).c[3] = (vuint8) (value))
#define SetByte5RxORC_YRS_PKT(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetByte6RxORC_YRS_PKT(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetByte7RxORC_YRS_PKT(variable, value) ((variable).c[0] = (vuint8) (value))

#define SetStrByte0RxORC_YRS_PKT(variable, value) ((variable).c[0] = (vuint8) (value))
#define SetStrByte1RxORC_YRS_PKT(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetStrByte2RxORC_YRS_PKT(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetStrByte3RxORC_YRS_PKT(variable, value) ((variable).c[3] = (vuint8) (value))
#define SetStrByte4RxORC_YRS_PKT(variable, value) ((variable).c[4] = (vuint8) (value))
#define SetStrByte5RxORC_YRS_PKT(variable, value) ((variable).c[5] = (vuint8) (value))
#define SetStrByte6RxORC_YRS_PKT(variable, value) ((variable).c[6] = (vuint8) (value))
#define SetStrByte7RxORC_YRS_PKT(variable, value) ((variable).c[7] = (vuint8) (value))

#define SetByte0RxESP_WHL_PULS(variable, value) ((variable).c[3] = (vuint8) (value))
#define SetByte1RxESP_WHL_PULS(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetByte2RxESP_WHL_PULS(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetByte3RxESP_WHL_PULS(variable, value) ((variable).c[0] = (vuint8) (value))

#define SetStrByte0RxESP_WHL_PULS(variable, value) ((variable).c[0] = (vuint8) (value))
#define SetStrByte1RxESP_WHL_PULS(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetStrByte2RxESP_WHL_PULS(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetStrByte3RxESP_WHL_PULS(variable, value) ((variable).c[3] = (vuint8) (value))

#define SetByte0RxVEH_SPEED_PKT(variable, value) ((variable).c[7] = (vuint8) (value))
#define SetByte1RxVEH_SPEED_PKT(variable, value) ((variable).c[6] = (vuint8) (value))
#define SetByte2RxVEH_SPEED_PKT(variable, value) ((variable).c[5] = (vuint8) (value))
#define SetByte3RxVEH_SPEED_PKT(variable, value) ((variable).c[4] = (vuint8) (value))
#define SetByte4RxVEH_SPEED_PKT(variable, value) ((variable).c[3] = (vuint8) (value))
#define SetByte5RxVEH_SPEED_PKT(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetByte6RxVEH_SPEED_PKT(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetByte7RxVEH_SPEED_PKT(variable, value) ((variable).c[0] = (vuint8) (value))

#define SetStrByte0RxVEH_SPEED_PKT(variable, value) ((variable).c[0] = (vuint8) (value))
#define SetStrByte1RxVEH_SPEED_PKT(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetStrByte2RxVEH_SPEED_PKT(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetStrByte3RxVEH_SPEED_PKT(variable, value) ((variable).c[3] = (vuint8) (value))
#define SetStrByte4RxVEH_SPEED_PKT(variable, value) ((variable).c[4] = (vuint8) (value))
#define SetStrByte5RxVEH_SPEED_PKT(variable, value) ((variable).c[5] = (vuint8) (value))
#define SetStrByte6RxVEH_SPEED_PKT(variable, value) ((variable).c[6] = (vuint8) (value))
#define SetStrByte7RxVEH_SPEED_PKT(variable, value) ((variable).c[7] = (vuint8) (value))

#define SetByte0RxECM_A1_PKT(variable, value) ((variable).c[7] = (vuint8) (value))
#define SetByte1RxECM_A1_PKT(variable, value) ((variable).c[6] = (vuint8) (value))
#define SetByte2RxECM_A1_PKT(variable, value) ((variable).c[5] = (vuint8) (value))
#define SetByte3RxECM_A1_PKT(variable, value) ((variable).c[4] = (vuint8) (value))
#define SetByte4RxECM_A1_PKT(variable, value) ((variable).c[3] = (vuint8) (value))
#define SetByte5RxECM_A1_PKT(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetByte6RxECM_A1_PKT(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetByte7RxECM_A1_PKT(variable, value) ((variable).c[0] = (vuint8) (value))

#define SetStrByte0RxECM_A1_PKT(variable, value) ((variable).c[0] = (vuint8) (value))
#define SetStrByte1RxECM_A1_PKT(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetStrByte2RxECM_A1_PKT(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetStrByte3RxECM_A1_PKT(variable, value) ((variable).c[3] = (vuint8) (value))
#define SetStrByte4RxECM_A1_PKT(variable, value) ((variable).c[4] = (vuint8) (value))
#define SetStrByte5RxECM_A1_PKT(variable, value) ((variable).c[5] = (vuint8) (value))
#define SetStrByte6RxECM_A1_PKT(variable, value) ((variable).c[6] = (vuint8) (value))
#define SetStrByte7RxECM_A1_PKT(variable, value) ((variable).c[7] = (vuint8) (value))

#define SetByte0RxLRW_ST(variable, value)    ((variable).c[7] = (vuint8) (value))
#define SetByte1RxLRW_ST(variable, value)    ((variable).c[6] = (vuint8) (value))
#define SetByte2RxLRW_ST(variable, value)    ((variable).c[5] = (vuint8) (value))
#define SetByte3RxLRW_ST(variable, value)    ((variable).c[4] = (vuint8) (value))
#define SetByte4RxLRW_ST(variable, value)    ((variable).c[3] = (vuint8) (value))
#define SetByte5RxLRW_ST(variable, value)    ((variable).c[2] = (vuint8) (value))
#define SetByte6RxLRW_ST(variable, value)    ((variable).c[1] = (vuint8) (value))
#define SetByte7RxLRW_ST(variable, value)    ((variable).c[0] = (vuint8) (value))

#define SetStrByte0RxLRW_ST(variable, value) ((variable).c[0] = (vuint8) (value))
#define SetStrByte1RxLRW_ST(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetStrByte2RxLRW_ST(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetStrByte3RxLRW_ST(variable, value) ((variable).c[3] = (vuint8) (value))
#define SetStrByte4RxLRW_ST(variable, value) ((variable).c[4] = (vuint8) (value))
#define SetStrByte5RxLRW_ST(variable, value) ((variable).c[5] = (vuint8) (value))
#define SetStrByte6RxLRW_ST(variable, value) ((variable).c[6] = (vuint8) (value))
#define SetStrByte7RxLRW_ST(variable, value) ((variable).c[7] = (vuint8) (value))

#define SetByte0RxNM(variable, value)        ((variable).c[3] = (vuint8) (value))
#define SetByte1RxNM(variable, value)        ((variable).c[2] = (vuint8) (value))
#define SetByte2RxNM(variable, value)        ((variable).c[1] = (vuint8) (value))
#define SetByte3RxNM(variable, value)        ((variable).c[0] = (vuint8) (value))

#define SetStrByte0RxNM(variable, value)     ((variable).c[0] = (vuint8) (value))
#define SetStrByte1RxNM(variable, value)     ((variable).c[1] = (vuint8) (value))
#define SetStrByte2RxNM(variable, value)     ((variable).c[2] = (vuint8) (value))
#define SetStrByte3RxNM(variable, value)     ((variable).c[3] = (vuint8) (value))

#define SetByte0RxAwake_EPS(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetByte1RxAwake_EPS(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetByte2RxAwake_EPS(variable, value) ((variable).c[0] = (vuint8) (value))

#define SetStrByte0RxAwake_EPS(variable, value) ((variable).c[0] = (vuint8) (value))
#define SetStrByte1RxAwake_EPS(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetStrByte2RxAwake_EPS(variable, value) ((variable).c[2] = (vuint8) (value))

#define SetByte0RxWakeup_EPS(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetByte1RxWakeup_EPS(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetByte2RxWakeup_EPS(variable, value) ((variable).c[0] = (vuint8) (value))

#define SetStrByte0RxWakeup_EPS(variable, value) ((variable).c[0] = (vuint8) (value))
#define SetStrByte1RxWakeup_EPS(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetStrByte2RxWakeup_EPS(variable, value) ((variable).c[2] = (vuint8) (value))

#define GetByte0RxVehCfg5_Pkt(variable)      ((variable).c[7])
#define GetByte1RxVehCfg5_Pkt(variable)      ((variable).c[6])
#define GetByte2RxVehCfg5_Pkt(variable)      ((variable).c[5])
#define GetByte3RxVehCfg5_Pkt(variable)      ((variable).c[4])
#define GetByte4RxVehCfg5_Pkt(variable)      ((variable).c[3])
#define GetByte5RxVehCfg5_Pkt(variable)      ((variable).c[2])
#define GetByte6RxVehCfg5_Pkt(variable)      ((variable).c[1])
#define GetByte7RxVehCfg5_Pkt(variable)      ((variable).c[0])

#define GetStrByte0RxVehCfg5_Pkt(variable)   ((variable).c[0])
#define GetStrByte1RxVehCfg5_Pkt(variable)   ((variable).c[1])
#define GetStrByte2RxVehCfg5_Pkt(variable)   ((variable).c[2])
#define GetStrByte3RxVehCfg5_Pkt(variable)   ((variable).c[3])
#define GetStrByte4RxVehCfg5_Pkt(variable)   ((variable).c[4])
#define GetStrByte5RxVehCfg5_Pkt(variable)   ((variable).c[5])
#define GetStrByte6RxVehCfg5_Pkt(variable)   ((variable).c[6])
#define GetStrByte7RxVehCfg5_Pkt(variable)   ((variable).c[7])

#define GetByte0RxVehCfg4_Pkt(variable)      ((variable).c[7])
#define GetByte1RxVehCfg4_Pkt(variable)      ((variable).c[6])
#define GetByte2RxVehCfg4_Pkt(variable)      ((variable).c[5])
#define GetByte3RxVehCfg4_Pkt(variable)      ((variable).c[4])
#define GetByte4RxVehCfg4_Pkt(variable)      ((variable).c[3])
#define GetByte5RxVehCfg4_Pkt(variable)      ((variable).c[2])
#define GetByte6RxVehCfg4_Pkt(variable)      ((variable).c[1])
#define GetByte7RxVehCfg4_Pkt(variable)      ((variable).c[0])

#define GetStrByte0RxVehCfg4_Pkt(variable)   ((variable).c[0])
#define GetStrByte1RxVehCfg4_Pkt(variable)   ((variable).c[1])
#define GetStrByte2RxVehCfg4_Pkt(variable)   ((variable).c[2])
#define GetStrByte3RxVehCfg4_Pkt(variable)   ((variable).c[3])
#define GetStrByte4RxVehCfg4_Pkt(variable)   ((variable).c[4])
#define GetStrByte5RxVehCfg4_Pkt(variable)   ((variable).c[5])
#define GetStrByte6RxVehCfg4_Pkt(variable)   ((variable).c[6])
#define GetStrByte7RxVehCfg4_Pkt(variable)   ((variable).c[7])

#define GetByte0RxVehCfg3_Pkt(variable)      ((variable).c[7])
#define GetByte1RxVehCfg3_Pkt(variable)      ((variable).c[6])
#define GetByte2RxVehCfg3_Pkt(variable)      ((variable).c[5])
#define GetByte3RxVehCfg3_Pkt(variable)      ((variable).c[4])
#define GetByte4RxVehCfg3_Pkt(variable)      ((variable).c[3])
#define GetByte5RxVehCfg3_Pkt(variable)      ((variable).c[2])
#define GetByte6RxVehCfg3_Pkt(variable)      ((variable).c[1])
#define GetByte7RxVehCfg3_Pkt(variable)      ((variable).c[0])

#define GetStrByte0RxVehCfg3_Pkt(variable)   ((variable).c[0])
#define GetStrByte1RxVehCfg3_Pkt(variable)   ((variable).c[1])
#define GetStrByte2RxVehCfg3_Pkt(variable)   ((variable).c[2])
#define GetStrByte3RxVehCfg3_Pkt(variable)   ((variable).c[3])
#define GetStrByte4RxVehCfg3_Pkt(variable)   ((variable).c[4])
#define GetStrByte5RxVehCfg3_Pkt(variable)   ((variable).c[5])
#define GetStrByte6RxVehCfg3_Pkt(variable)   ((variable).c[6])
#define GetStrByte7RxVehCfg3_Pkt(variable)   ((variable).c[7])

#define GetByte0RxVehCfg2_Pkt(variable)      ((variable).c[7])
#define GetByte1RxVehCfg2_Pkt(variable)      ((variable).c[6])
#define GetByte2RxVehCfg2_Pkt(variable)      ((variable).c[5])
#define GetByte3RxVehCfg2_Pkt(variable)      ((variable).c[4])
#define GetByte4RxVehCfg2_Pkt(variable)      ((variable).c[3])
#define GetByte5RxVehCfg2_Pkt(variable)      ((variable).c[2])
#define GetByte6RxVehCfg2_Pkt(variable)      ((variable).c[1])
#define GetByte7RxVehCfg2_Pkt(variable)      ((variable).c[0])

#define GetStrByte0RxVehCfg2_Pkt(variable)   ((variable).c[0])
#define GetStrByte1RxVehCfg2_Pkt(variable)   ((variable).c[1])
#define GetStrByte2RxVehCfg2_Pkt(variable)   ((variable).c[2])
#define GetStrByte3RxVehCfg2_Pkt(variable)   ((variable).c[3])
#define GetStrByte4RxVehCfg2_Pkt(variable)   ((variable).c[4])
#define GetStrByte5RxVehCfg2_Pkt(variable)   ((variable).c[5])
#define GetStrByte6RxVehCfg2_Pkt(variable)   ((variable).c[6])
#define GetStrByte7RxVehCfg2_Pkt(variable)   ((variable).c[7])

#define GetByte0RxVehCfg1_Pkt(variable)      ((variable).c[7])
#define GetByte1RxVehCfg1_Pkt(variable)      ((variable).c[6])
#define GetByte2RxVehCfg1_Pkt(variable)      ((variable).c[5])
#define GetByte3RxVehCfg1_Pkt(variable)      ((variable).c[4])
#define GetByte4RxVehCfg1_Pkt(variable)      ((variable).c[3])
#define GetByte5RxVehCfg1_Pkt(variable)      ((variable).c[2])
#define GetByte6RxVehCfg1_Pkt(variable)      ((variable).c[1])
#define GetByte7RxVehCfg1_Pkt(variable)      ((variable).c[0])

#define GetStrByte0RxVehCfg1_Pkt(variable)   ((variable).c[0])
#define GetStrByte1RxVehCfg1_Pkt(variable)   ((variable).c[1])
#define GetStrByte2RxVehCfg1_Pkt(variable)   ((variable).c[2])
#define GetStrByte3RxVehCfg1_Pkt(variable)   ((variable).c[3])
#define GetStrByte4RxVehCfg1_Pkt(variable)   ((variable).c[4])
#define GetStrByte5RxVehCfg1_Pkt(variable)   ((variable).c[5])
#define GetStrByte6RxVehCfg1_Pkt(variable)   ((variable).c[6])
#define GetStrByte7RxVehCfg1_Pkt(variable)   ((variable).c[7])

#define GetByte0RxNET_CFG_DATA_PT(variable)  ((variable).c[7])
#define GetByte1RxNET_CFG_DATA_PT(variable)  ((variable).c[6])
#define GetByte2RxNET_CFG_DATA_PT(variable)  ((variable).c[5])
#define GetByte3RxNET_CFG_DATA_PT(variable)  ((variable).c[4])
#define GetByte4RxNET_CFG_DATA_PT(variable)  ((variable).c[3])
#define GetByte5RxNET_CFG_DATA_PT(variable)  ((variable).c[2])
#define GetByte6RxNET_CFG_DATA_PT(variable)  ((variable).c[1])
#define GetByte7RxNET_CFG_DATA_PT(variable)  ((variable).c[0])

#define GetStrByte0RxNET_CFG_DATA_PT(variable) ((variable).c[0])
#define GetStrByte1RxNET_CFG_DATA_PT(variable) ((variable).c[1])
#define GetStrByte2RxNET_CFG_DATA_PT(variable) ((variable).c[2])
#define GetStrByte3RxNET_CFG_DATA_PT(variable) ((variable).c[3])
#define GetStrByte4RxNET_CFG_DATA_PT(variable) ((variable).c[4])
#define GetStrByte5RxNET_CFG_DATA_PT(variable) ((variable).c[5])
#define GetStrByte6RxNET_CFG_DATA_PT(variable) ((variable).c[6])
#define GetStrByte7RxNET_CFG_DATA_PT(variable) ((variable).c[7])

#define GetByte0RxENG_CFG(variable)          ((variable).c[3])
#define GetByte1RxENG_CFG(variable)          ((variable).c[2])
#define GetByte2RxENG_CFG(variable)          ((variable).c[1])
#define GetByte3RxENG_CFG(variable)          ((variable).c[0])

#define GetStrByte0RxENG_CFG(variable)       ((variable).c[0])
#define GetStrByte1RxENG_CFG(variable)       ((variable).c[1])
#define GetStrByte2RxENG_CFG(variable)       ((variable).c[2])
#define GetStrByte3RxENG_CFG(variable)       ((variable).c[3])

#define GetByte0RxVIN_INFO(variable)         ((variable).c[7])
#define GetByte1RxVIN_INFO(variable)         ((variable).c[6])
#define GetByte2RxVIN_INFO(variable)         ((variable).c[5])
#define GetByte3RxVIN_INFO(variable)         ((variable).c[4])
#define GetByte4RxVIN_INFO(variable)         ((variable).c[3])
#define GetByte5RxVIN_INFO(variable)         ((variable).c[2])
#define GetByte6RxVIN_INFO(variable)         ((variable).c[1])
#define GetByte7RxVIN_INFO(variable)         ((variable).c[0])

#define GetStrByte0RxVIN_INFO(variable)      ((variable).c[0])
#define GetStrByte1RxVIN_INFO(variable)      ((variable).c[1])
#define GetStrByte2RxVIN_INFO(variable)      ((variable).c[2])
#define GetStrByte3RxVIN_INFO(variable)      ((variable).c[3])
#define GetStrByte4RxVIN_INFO(variable)      ((variable).c[4])
#define GetStrByte5RxVIN_INFO(variable)      ((variable).c[5])
#define GetStrByte6RxVIN_INFO(variable)      ((variable).c[6])
#define GetStrByte7RxVIN_INFO(variable)      ((variable).c[7])

#define GetByte0RxVehCfg7_Pkt(variable)      ((variable).c[7])
#define GetByte1RxVehCfg7_Pkt(variable)      ((variable).c[6])
#define GetByte2RxVehCfg7_Pkt(variable)      ((variable).c[5])
#define GetByte3RxVehCfg7_Pkt(variable)      ((variable).c[4])
#define GetByte4RxVehCfg7_Pkt(variable)      ((variable).c[3])
#define GetByte5RxVehCfg7_Pkt(variable)      ((variable).c[2])
#define GetByte6RxVehCfg7_Pkt(variable)      ((variable).c[1])
#define GetByte7RxVehCfg7_Pkt(variable)      ((variable).c[0])

#define GetStrByte0RxVehCfg7_Pkt(variable)   ((variable).c[0])
#define GetStrByte1RxVehCfg7_Pkt(variable)   ((variable).c[1])
#define GetStrByte2RxVehCfg7_Pkt(variable)   ((variable).c[2])
#define GetStrByte3RxVehCfg7_Pkt(variable)   ((variable).c[3])
#define GetStrByte4RxVehCfg7_Pkt(variable)   ((variable).c[4])
#define GetStrByte5RxVehCfg7_Pkt(variable)   ((variable).c[5])
#define GetStrByte6RxVehCfg7_Pkt(variable)   ((variable).c[6])
#define GetStrByte7RxVehCfg7_Pkt(variable)   ((variable).c[7])

#define GetByte0RxCFG_RQ_C(variable)         ((variable).c[2])
#define GetByte1RxCFG_RQ_C(variable)         ((variable).c[1])
#define GetByte2RxCFG_RQ_C(variable)         ((variable).c[0])

#define GetStrByte0RxCFG_RQ_C(variable)      ((variable).c[0])
#define GetStrByte1RxCFG_RQ_C(variable)      ((variable).c[1])
#define GetStrByte2RxCFG_RQ_C(variable)      ((variable).c[2])

#define GetByte0RxCFG_RQ(variable)           ((variable).c[2])
#define GetByte1RxCFG_RQ(variable)           ((variable).c[1])
#define GetByte2RxCFG_RQ(variable)           ((variable).c[0])

#define GetStrByte0RxCFG_RQ(variable)        ((variable).c[0])
#define GetStrByte1RxCFG_RQ(variable)        ((variable).c[1])
#define GetStrByte2RxCFG_RQ(variable)        ((variable).c[2])

#define GetByte0RxODO(variable)              ((variable).c[2])
#define GetByte1RxODO(variable)              ((variable).c[1])
#define GetByte2RxODO(variable)              ((variable).c[0])

#define GetStrByte0RxODO(variable)           ((variable).c[0])
#define GetStrByte1RxODO(variable)           ((variable).c[1])
#define GetStrByte2RxODO(variable)           ((variable).c[2])

#define GetByte0RxEPB_1(variable)            ((variable).c[7])
#define GetByte1RxEPB_1(variable)            ((variable).c[6])
#define GetByte2RxEPB_1(variable)            ((variable).c[5])
#define GetByte3RxEPB_1(variable)            ((variable).c[4])
#define GetByte4RxEPB_1(variable)            ((variable).c[3])
#define GetByte5RxEPB_1(variable)            ((variable).c[2])
#define GetByte6RxEPB_1(variable)            ((variable).c[1])
#define GetByte7RxEPB_1(variable)            ((variable).c[0])

#define GetStrByte0RxEPB_1(variable)         ((variable).c[0])
#define GetStrByte1RxEPB_1(variable)         ((variable).c[1])
#define GetStrByte2RxEPB_1(variable)         ((variable).c[2])
#define GetStrByte3RxEPB_1(variable)         ((variable).c[3])
#define GetStrByte4RxEPB_1(variable)         ((variable).c[4])
#define GetStrByte5RxEPB_1(variable)         ((variable).c[5])
#define GetStrByte6RxEPB_1(variable)         ((variable).c[6])
#define GetStrByte7RxEPB_1(variable)         ((variable).c[7])

#define GetByte0RxECM_A3_PKT(variable)       ((variable).c[7])
#define GetByte1RxECM_A3_PKT(variable)       ((variable).c[6])
#define GetByte2RxECM_A3_PKT(variable)       ((variable).c[5])
#define GetByte3RxECM_A3_PKT(variable)       ((variable).c[4])
#define GetByte4RxECM_A3_PKT(variable)       ((variable).c[3])
#define GetByte5RxECM_A3_PKT(variable)       ((variable).c[2])
#define GetByte6RxECM_A3_PKT(variable)       ((variable).c[1])
#define GetByte7RxECM_A3_PKT(variable)       ((variable).c[0])

#define GetStrByte0RxECM_A3_PKT(variable)    ((variable).c[0])
#define GetStrByte1RxECM_A3_PKT(variable)    ((variable).c[1])
#define GetStrByte2RxECM_A3_PKT(variable)    ((variable).c[2])
#define GetStrByte3RxECM_A3_PKT(variable)    ((variable).c[3])
#define GetStrByte4RxECM_A3_PKT(variable)    ((variable).c[4])
#define GetStrByte5RxECM_A3_PKT(variable)    ((variable).c[5])
#define GetStrByte6RxECM_A3_PKT(variable)    ((variable).c[6])
#define GetStrByte7RxECM_A3_PKT(variable)    ((variable).c[7])

#define GetByte0RxPTS_StrCtrl(variable)      ((variable).c[7])
#define GetByte1RxPTS_StrCtrl(variable)      ((variable).c[6])
#define GetByte2RxPTS_StrCtrl(variable)      ((variable).c[5])
#define GetByte3RxPTS_StrCtrl(variable)      ((variable).c[4])
#define GetByte4RxPTS_StrCtrl(variable)      ((variable).c[3])
#define GetByte5RxPTS_StrCtrl(variable)      ((variable).c[2])
#define GetByte6RxPTS_StrCtrl(variable)      ((variable).c[1])
#define GetByte7RxPTS_StrCtrl(variable)      ((variable).c[0])

#define GetStrByte0RxPTS_StrCtrl(variable)   ((variable).c[0])
#define GetStrByte1RxPTS_StrCtrl(variable)   ((variable).c[1])
#define GetStrByte2RxPTS_StrCtrl(variable)   ((variable).c[2])
#define GetStrByte3RxPTS_StrCtrl(variable)   ((variable).c[3])
#define GetStrByte4RxPTS_StrCtrl(variable)   ((variable).c[4])
#define GetStrByte5RxPTS_StrCtrl(variable)   ((variable).c[5])
#define GetStrByte6RxPTS_StrCtrl(variable)   ((variable).c[6])
#define GetStrByte7RxPTS_StrCtrl(variable)   ((variable).c[7])

#define GetByte0RxDST_TOC(variable)          ((variable).c[7])
#define GetByte1RxDST_TOC(variable)          ((variable).c[6])
#define GetByte2RxDST_TOC(variable)          ((variable).c[5])
#define GetByte3RxDST_TOC(variable)          ((variable).c[4])
#define GetByte4RxDST_TOC(variable)          ((variable).c[3])
#define GetByte5RxDST_TOC(variable)          ((variable).c[2])
#define GetByte6RxDST_TOC(variable)          ((variable).c[1])
#define GetByte7RxDST_TOC(variable)          ((variable).c[0])

#define GetStrByte0RxDST_TOC(variable)       ((variable).c[0])
#define GetStrByte1RxDST_TOC(variable)       ((variable).c[1])
#define GetStrByte2RxDST_TOC(variable)       ((variable).c[2])
#define GetStrByte3RxDST_TOC(variable)       ((variable).c[3])
#define GetStrByte4RxDST_TOC(variable)       ((variable).c[4])
#define GetStrByte5RxDST_TOC(variable)       ((variable).c[5])
#define GetStrByte6RxDST_TOC(variable)       ((variable).c[6])
#define GetStrByte7RxDST_TOC(variable)       ((variable).c[7])

#define GetByte0RxHaLF_StrCtrl(variable)     ((variable).c[5])
#define GetByte1RxHaLF_StrCtrl(variable)     ((variable).c[4])
#define GetByte2RxHaLF_StrCtrl(variable)     ((variable).c[3])
#define GetByte3RxHaLF_StrCtrl(variable)     ((variable).c[2])
#define GetByte4RxHaLF_StrCtrl(variable)     ((variable).c[1])
#define GetByte5RxHaLF_StrCtrl(variable)     ((variable).c[0])

#define GetStrByte0RxHaLF_StrCtrl(variable)  ((variable).c[0])
#define GetStrByte1RxHaLF_StrCtrl(variable)  ((variable).c[1])
#define GetStrByte2RxHaLF_StrCtrl(variable)  ((variable).c[2])
#define GetStrByte3RxHaLF_StrCtrl(variable)  ((variable).c[3])
#define GetStrByte4RxHaLF_StrCtrl(variable)  ((variable).c[4])
#define GetStrByte5RxHaLF_StrCtrl(variable)  ((variable).c[5])

#define GetByte0RxWHEEL_SPEED2(variable)     ((variable).c[3])
#define GetByte1RxWHEEL_SPEED2(variable)     ((variable).c[2])
#define GetByte2RxWHEEL_SPEED2(variable)     ((variable).c[1])
#define GetByte3RxWHEEL_SPEED2(variable)     ((variable).c[0])

#define GetStrByte0RxWHEEL_SPEED2(variable)  ((variable).c[0])
#define GetStrByte1RxWHEEL_SPEED2(variable)  ((variable).c[1])
#define GetStrByte2RxWHEEL_SPEED2(variable)  ((variable).c[2])
#define GetStrByte3RxWHEEL_SPEED2(variable)  ((variable).c[3])

#define GetByte0RxTRNS_STAT_PKT(variable)    ((variable).c[7])
#define GetByte1RxTRNS_STAT_PKT(variable)    ((variable).c[6])
#define GetByte2RxTRNS_STAT_PKT(variable)    ((variable).c[5])
#define GetByte3RxTRNS_STAT_PKT(variable)    ((variable).c[4])
#define GetByte4RxTRNS_STAT_PKT(variable)    ((variable).c[3])
#define GetByte5RxTRNS_STAT_PKT(variable)    ((variable).c[2])
#define GetByte6RxTRNS_STAT_PKT(variable)    ((variable).c[1])
#define GetByte7RxTRNS_STAT_PKT(variable)    ((variable).c[0])

#define GetStrByte0RxTRNS_STAT_PKT(variable) ((variable).c[0])
#define GetStrByte1RxTRNS_STAT_PKT(variable) ((variable).c[1])
#define GetStrByte2RxTRNS_STAT_PKT(variable) ((variable).c[2])
#define GetStrByte3RxTRNS_STAT_PKT(variable) ((variable).c[3])
#define GetStrByte4RxTRNS_STAT_PKT(variable) ((variable).c[4])
#define GetStrByte5RxTRNS_STAT_PKT(variable) ((variable).c[5])
#define GetStrByte6RxTRNS_STAT_PKT(variable) ((variable).c[6])
#define GetStrByte7RxTRNS_STAT_PKT(variable) ((variable).c[7])

#define GetByte0RxWHEEL_SPEED(variable)      ((variable).c[7])
#define GetByte1RxWHEEL_SPEED(variable)      ((variable).c[6])
#define GetByte2RxWHEEL_SPEED(variable)      ((variable).c[5])
#define GetByte3RxWHEEL_SPEED(variable)      ((variable).c[4])
#define GetByte4RxWHEEL_SPEED(variable)      ((variable).c[3])
#define GetByte5RxWHEEL_SPEED(variable)      ((variable).c[2])
#define GetByte6RxWHEEL_SPEED(variable)      ((variable).c[1])
#define GetByte7RxWHEEL_SPEED(variable)      ((variable).c[0])

#define GetStrByte0RxWHEEL_SPEED(variable)   ((variable).c[0])
#define GetStrByte1RxWHEEL_SPEED(variable)   ((variable).c[1])
#define GetStrByte2RxWHEEL_SPEED(variable)   ((variable).c[2])
#define GetStrByte3RxWHEEL_SPEED(variable)   ((variable).c[3])
#define GetStrByte4RxWHEEL_SPEED(variable)   ((variable).c[4])
#define GetStrByte5RxWHEEL_SPEED(variable)   ((variable).c[5])
#define GetStrByte6RxWHEEL_SPEED(variable)   ((variable).c[6])
#define GetStrByte7RxWHEEL_SPEED(variable)   ((variable).c[7])

#define GetByte0RxORC_YRS_PKT(variable)      ((variable).c[7])
#define GetByte1RxORC_YRS_PKT(variable)      ((variable).c[6])
#define GetByte2RxORC_YRS_PKT(variable)      ((variable).c[5])
#define GetByte3RxORC_YRS_PKT(variable)      ((variable).c[4])
#define GetByte4RxORC_YRS_PKT(variable)      ((variable).c[3])
#define GetByte5RxORC_YRS_PKT(variable)      ((variable).c[2])
#define GetByte6RxORC_YRS_PKT(variable)      ((variable).c[1])
#define GetByte7RxORC_YRS_PKT(variable)      ((variable).c[0])

#define GetStrByte0RxORC_YRS_PKT(variable)   ((variable).c[0])
#define GetStrByte1RxORC_YRS_PKT(variable)   ((variable).c[1])
#define GetStrByte2RxORC_YRS_PKT(variable)   ((variable).c[2])
#define GetStrByte3RxORC_YRS_PKT(variable)   ((variable).c[3])
#define GetStrByte4RxORC_YRS_PKT(variable)   ((variable).c[4])
#define GetStrByte5RxORC_YRS_PKT(variable)   ((variable).c[5])
#define GetStrByte6RxORC_YRS_PKT(variable)   ((variable).c[6])
#define GetStrByte7RxORC_YRS_PKT(variable)   ((variable).c[7])

#define GetByte0RxESP_WHL_PULS(variable)     ((variable).c[3])
#define GetByte1RxESP_WHL_PULS(variable)     ((variable).c[2])
#define GetByte2RxESP_WHL_PULS(variable)     ((variable).c[1])
#define GetByte3RxESP_WHL_PULS(variable)     ((variable).c[0])

#define GetStrByte0RxESP_WHL_PULS(variable)  ((variable).c[0])
#define GetStrByte1RxESP_WHL_PULS(variable)  ((variable).c[1])
#define GetStrByte2RxESP_WHL_PULS(variable)  ((variable).c[2])
#define GetStrByte3RxESP_WHL_PULS(variable)  ((variable).c[3])

#define GetByte0RxVEH_SPEED_PKT(variable)    ((variable).c[7])
#define GetByte1RxVEH_SPEED_PKT(variable)    ((variable).c[6])
#define GetByte2RxVEH_SPEED_PKT(variable)    ((variable).c[5])
#define GetByte3RxVEH_SPEED_PKT(variable)    ((variable).c[4])
#define GetByte4RxVEH_SPEED_PKT(variable)    ((variable).c[3])
#define GetByte5RxVEH_SPEED_PKT(variable)    ((variable).c[2])
#define GetByte6RxVEH_SPEED_PKT(variable)    ((variable).c[1])
#define GetByte7RxVEH_SPEED_PKT(variable)    ((variable).c[0])

#define GetStrByte0RxVEH_SPEED_PKT(variable) ((variable).c[0])
#define GetStrByte1RxVEH_SPEED_PKT(variable) ((variable).c[1])
#define GetStrByte2RxVEH_SPEED_PKT(variable) ((variable).c[2])
#define GetStrByte3RxVEH_SPEED_PKT(variable) ((variable).c[3])
#define GetStrByte4RxVEH_SPEED_PKT(variable) ((variable).c[4])
#define GetStrByte5RxVEH_SPEED_PKT(variable) ((variable).c[5])
#define GetStrByte6RxVEH_SPEED_PKT(variable) ((variable).c[6])
#define GetStrByte7RxVEH_SPEED_PKT(variable) ((variable).c[7])

#define GetByte0RxECM_A1_PKT(variable)       ((variable).c[7])
#define GetByte1RxECM_A1_PKT(variable)       ((variable).c[6])
#define GetByte2RxECM_A1_PKT(variable)       ((variable).c[5])
#define GetByte3RxECM_A1_PKT(variable)       ((variable).c[4])
#define GetByte4RxECM_A1_PKT(variable)       ((variable).c[3])
#define GetByte5RxECM_A1_PKT(variable)       ((variable).c[2])
#define GetByte6RxECM_A1_PKT(variable)       ((variable).c[1])
#define GetByte7RxECM_A1_PKT(variable)       ((variable).c[0])

#define GetStrByte0RxECM_A1_PKT(variable)    ((variable).c[0])
#define GetStrByte1RxECM_A1_PKT(variable)    ((variable).c[1])
#define GetStrByte2RxECM_A1_PKT(variable)    ((variable).c[2])
#define GetStrByte3RxECM_A1_PKT(variable)    ((variable).c[3])
#define GetStrByte4RxECM_A1_PKT(variable)    ((variable).c[4])
#define GetStrByte5RxECM_A1_PKT(variable)    ((variable).c[5])
#define GetStrByte6RxECM_A1_PKT(variable)    ((variable).c[6])
#define GetStrByte7RxECM_A1_PKT(variable)    ((variable).c[7])

#define GetByte0RxLRW_ST(variable)           ((variable).c[7])
#define GetByte1RxLRW_ST(variable)           ((variable).c[6])
#define GetByte2RxLRW_ST(variable)           ((variable).c[5])
#define GetByte3RxLRW_ST(variable)           ((variable).c[4])
#define GetByte4RxLRW_ST(variable)           ((variable).c[3])
#define GetByte5RxLRW_ST(variable)           ((variable).c[2])
#define GetByte6RxLRW_ST(variable)           ((variable).c[1])
#define GetByte7RxLRW_ST(variable)           ((variable).c[0])

#define GetStrByte0RxLRW_ST(variable)        ((variable).c[0])
#define GetStrByte1RxLRW_ST(variable)        ((variable).c[1])
#define GetStrByte2RxLRW_ST(variable)        ((variable).c[2])
#define GetStrByte3RxLRW_ST(variable)        ((variable).c[3])
#define GetStrByte4RxLRW_ST(variable)        ((variable).c[4])
#define GetStrByte5RxLRW_ST(variable)        ((variable).c[5])
#define GetStrByte6RxLRW_ST(variable)        ((variable).c[6])
#define GetStrByte7RxLRW_ST(variable)        ((variable).c[7])

#define GetByte0RxNM(variable)               ((variable).c[3])
#define GetByte1RxNM(variable)               ((variable).c[2])
#define GetByte2RxNM(variable)               ((variable).c[1])
#define GetByte3RxNM(variable)               ((variable).c[0])

#define GetStrByte0RxNM(variable)            ((variable).c[0])
#define GetStrByte1RxNM(variable)            ((variable).c[1])
#define GetStrByte2RxNM(variable)            ((variable).c[2])
#define GetStrByte3RxNM(variable)            ((variable).c[3])

#define GetByte0RxAwake_EPS(variable)        ((variable).c[2])
#define GetByte1RxAwake_EPS(variable)        ((variable).c[1])
#define GetByte2RxAwake_EPS(variable)        ((variable).c[0])

#define GetStrByte0RxAwake_EPS(variable)     ((variable).c[0])
#define GetStrByte1RxAwake_EPS(variable)     ((variable).c[1])
#define GetStrByte2RxAwake_EPS(variable)     ((variable).c[2])

#define GetByte0RxWakeup_EPS(variable)       ((variable).c[2])
#define GetByte1RxWakeup_EPS(variable)       ((variable).c[1])
#define GetByte2RxWakeup_EPS(variable)       ((variable).c[0])

#define GetStrByte0RxWakeup_EPS(variable)    ((variable).c[0])
#define GetStrByte1RxWakeup_EPS(variable)    ((variable).c[1])
#define GetStrByte2RxWakeup_EPS(variable)    ((variable).c[2])

#define SetByte0RxVIN_DATA(variable, value)  ((variable).c[7] = (vuint8) (value))
#define SetByte1RxVIN_DATA(variable, value)  ((variable).c[6] = (vuint8) (value))
#define SetByte2RxVIN_DATA(variable, value)  ((variable).c[5] = (vuint8) (value))
#define SetByte3RxVIN_DATA(variable, value)  ((variable).c[4] = (vuint8) (value))
#define SetByte4RxVIN_DATA(variable, value)  ((variable).c[3] = (vuint8) (value))
#define SetByte5RxVIN_DATA(variable, value)  ((variable).c[2] = (vuint8) (value))
#define SetByte6RxVIN_DATA(variable, value)  ((variable).c[1] = (vuint8) (value))

#define SetStrByte0RxVIN_DATA(variable, value) ((variable).c[1] = (vuint8) (value))
#define SetStrByte1RxVIN_DATA(variable, value) ((variable).c[2] = (vuint8) (value))
#define SetStrByte2RxVIN_DATA(variable, value) ((variable).c[3] = (vuint8) (value))
#define SetStrByte3RxVIN_DATA(variable, value) ((variable).c[4] = (vuint8) (value))
#define SetStrByte4RxVIN_DATA(variable, value) ((variable).c[5] = (vuint8) (value))
#define SetStrByte5RxVIN_DATA(variable, value) ((variable).c[6] = (vuint8) (value))
#define SetStrByte6RxVIN_DATA(variable, value) ((variable).c[7] = (vuint8) (value))

#define GetByte0RxVIN_DATA(variable)         ((variable).c[7])
#define GetByte1RxVIN_DATA(variable)         ((variable).c[6])
#define GetByte2RxVIN_DATA(variable)         ((variable).c[5])
#define GetByte3RxVIN_DATA(variable)         ((variable).c[4])
#define GetByte4RxVIN_DATA(variable)         ((variable).c[3])
#define GetByte5RxVIN_DATA(variable)         ((variable).c[2])
#define GetByte6RxVIN_DATA(variable)         ((variable).c[1])

#define GetStrByte0RxVIN_DATA(variable)      ((variable).c[1])
#define GetStrByte1RxVIN_DATA(variable)      ((variable).c[2])
#define GetStrByte2RxVIN_DATA(variable)      ((variable).c[3])
#define GetStrByte3RxVIN_DATA(variable)      ((variable).c[4])
#define GetStrByte4RxVIN_DATA(variable)      ((variable).c[5])
#define GetStrByte5RxVIN_DATA(variable)      ((variable).c[6])
#define GetStrByte6RxVIN_DATA(variable)      ((variable).c[7])



/* -----------------------------------------------------------------------------
    &&&~ Partial signal access functions  
 ----------------------------------------------------------------------------- */

/* Handle:    0,Name:                    VehCfg5_Pkt,Size: 64,Type:  nByte,is Container */
#define SetValueRxVC_VehCfg5_Stat(variable, value) ((variable).s.VC_VehCfg5_Stat = (value))
#define SetValueRxVC_PPPA_Prsnt(variable, value) ((variable).s.VC_PPPA_Prsnt = (value))
#define GetValueRxVC_VehCfg5_Stat(variable)  ((variable).s.VC_VehCfg5_Stat)
#define GetValueRxVC_PPPA_Prsnt(variable)    ((variable).s.VC_PPPA_Prsnt)
#define SetBitRxVC_PPPA_Prsnt(variable)      ((variable).s.VC_PPPA_Prsnt = 1)
#define ClearBitRxVC_PPPA_Prsnt(variable)    ((variable).s.VC_PPPA_Prsnt = 0)
#define VarBitIsSetRxVC_PPPA_Prsnt(variable) ((variable).s.VC_PPPA_Prsnt != 0)

/* Handle:    1,Name:                EC_ECUCfg6_Stat,Size:  2,Type:   nBit,no Container */
#define SetValueRxEC_ECUCfg6_Stat(variable, value) ((variable).s.EC_ECUCfg6_Stat = (value))
#define GetValueRxEC_ECUCfg6_Stat(variable)  ((variable).s.EC_ECUCfg6_Stat)

/* Handle:    2,Name:                    EC_Steering,Size: 16,Type:   Word,no Container */
#define SetValueRxEC_Steering(variable, value) \
{ \
  (variable).s.EC_Steering_0 = (vuint8) (((value) >> 0) & 0xFF); \
  (variable).s.EC_Steering_1 = (vuint8) (((value) >> 8) & 0xFF); \
}
#define GetValueRxEC_Steering(variable)      ((vuint16) ((((vuint16) (variable).s.EC_Steering_1 << 8) | ((vuint16) (variable).s.EC_Steering_0 << 0)) & 0xFFFF))

/* Handle:    3,Name:                    VehCfg4_Pkt,Size: 64,Type:  nByte,is Container */
#define SetValueRxVC_VehCfg4_Stat(variable, value) ((variable).s.VC_VehCfg4_Stat = (value))
#define SetValueRxVC_TIRE_CIRCUMF(variable, value) \
{ \
  (variable).s.VC_TIRE_CIRCUMF_0 = (vuint8) (((value) >> 0) & 0xFF); \
  (variable).s.VC_TIRE_CIRCUMF_1 = (vuint8) (((value) >> 8) & 0xFF); \
}
#define GetValueRxVC_VehCfg4_Stat(variable)  ((variable).s.VC_VehCfg4_Stat)
#define GetValueRxVC_TIRE_CIRCUMF(variable)  ((vuint16) ((((vuint16) (variable).s.VC_TIRE_CIRCUMF_1 << 8) | ((vuint16) (variable).s.VC_TIRE_CIRCUMF_0 << 0)) & 0xFFFF))

/* Handle:    4,Name:                    VehCfg3_Pkt,Size: 64,Type:  nByte,is Container */
#define SetValueRxVC_VehCfg3_Stat(variable, value) ((variable).s.VC_VehCfg3_Stat = (value))
#define SetValueRxVC_ChassisType(variable, value) ((variable).s.VC_ChassisType = (value))
#define GetValueRxVC_VehCfg3_Stat(variable)  ((variable).s.VC_VehCfg3_Stat)
#define GetValueRxVC_ChassisType(variable)   ((variable).s.VC_ChassisType)

/* Handle:    5,Name:                    VehCfg2_Pkt,Size: 64,Type:  nByte,is Container */
#define SetValueRxVC_VehCfg2_Stat(variable, value) ((variable).s.VC_VehCfg2_Stat = (value))
#define SetValueRxVC_DRVMD_Prsnt(variable, value) ((variable).s.VC_DRVMD_Prsnt = (value))
#define SetValueRxVC_MemoryDRVMD_Prsnt(variable, value) ((variable).s.VC_MemoryDRVMD_Prsnt = (value))
#define GetValueRxVC_VehCfg2_Stat(variable)  ((variable).s.VC_VehCfg2_Stat)
#define GetValueRxVC_DRVMD_Prsnt(variable)   ((variable).s.VC_DRVMD_Prsnt)
#define GetValueRxVC_MemoryDRVMD_Prsnt(variable) ((variable).s.VC_MemoryDRVMD_Prsnt)
#define SetBitRxVC_DRVMD_Prsnt(variable)     ((variable).s.VC_DRVMD_Prsnt = 1)
#define SetBitRxVC_MemoryDRVMD_Prsnt(variable) ((variable).s.VC_MemoryDRVMD_Prsnt = 1)
#define ClearBitRxVC_DRVMD_Prsnt(variable)   ((variable).s.VC_DRVMD_Prsnt = 0)
#define ClearBitRxVC_MemoryDRVMD_Prsnt(variable) ((variable).s.VC_MemoryDRVMD_Prsnt = 0)
#define VarBitIsSetRxVC_DRVMD_Prsnt(variable) ((variable).s.VC_DRVMD_Prsnt != 0)
#define VarBitIsSetRxVC_MemoryDRVMD_Prsnt(variable) ((variable).s.VC_MemoryDRVMD_Prsnt != 0)

/* Handle:    6,Name:                    VehCfg1_Pkt,Size: 64,Type:  nByte,is Container */
#define SetValueRxVC_VehCfg1_Stat(variable, value) ((variable).s.VC_VehCfg1_Stat = (value))
#define SetValueRxVC_MODEL_YEAR(variable, value) ((variable).s.VC_MODEL_YEAR = (value))
#define SetValueRxVC_VEH_LINE(variable, value) ((variable).s.VC_VEH_LINE = (value))
#define SetValueRxVC_COUNTRY(variable, value) ((variable).s.VC_COUNTRY = (value))
#define SetValueRxVC_XWD(variable, value)    ((variable).s.VC_XWD = (value))
#define SetValueRxVC_BODY_STYLE(variable, value) ((variable).s.VC_BODY_STYLE = (value))
#define GetValueRxVC_VehCfg1_Stat(variable)  ((variable).s.VC_VehCfg1_Stat)
#define GetValueRxVC_MODEL_YEAR(variable)    ((variable).s.VC_MODEL_YEAR)
#define GetValueRxVC_VEH_LINE(variable)      ((variable).s.VC_VEH_LINE)
#define GetValueRxVC_COUNTRY(variable)       ((variable).s.VC_COUNTRY)
#define GetValueRxVC_XWD(variable)           ((variable).s.VC_XWD)
#define GetValueRxVC_BODY_STYLE(variable)    ((variable).s.VC_BODY_STYLE)

/* Handle:    7,Name:                NET_CFG_DATA_PT,Size: 64,Type:  nByte,is Container */
#define SetValueRxNET_CFG_STAT_PT(variable, value) ((variable).s.NET_CFG_STAT_PT = (value))
#define SetValueRxNetCfg_CBC_PT(variable, value) ((variable).s.NetCfg_CBC_PT = (value))
#define SetValueRxNetCfg_ECM(variable, value) ((variable).s.NetCfg_ECM = (value))
#define SetValueRxNetCfg_ESC(variable, value) ((variable).s.NetCfg_ESC = (value))
#define SetValueRxNetCfg_IC(variable, value) ((variable).s.NetCfg_IC = (value))
#define SetValueRxNetCfg_PTS(variable, value) ((variable).s.NetCfg_PTS = (value))
#define SetValueRxNetCfg_SCCM(variable, value) ((variable).s.NetCfg_SCCM = (value))
#define SetValueRxNetCfg_TCM(variable, value) ((variable).s.NetCfg_TCM = (value))
#define SetValueRxNetCfg_HaLF(variable, value) ((variable).s.NetCfg_HaLF = (value))
#define GetValueRxNET_CFG_STAT_PT(variable)  ((variable).s.NET_CFG_STAT_PT)
#define GetValueRxNetCfg_CBC_PT(variable)    ((variable).s.NetCfg_CBC_PT)
#define GetValueRxNetCfg_ECM(variable)       ((variable).s.NetCfg_ECM)
#define GetValueRxNetCfg_ESC(variable)       ((variable).s.NetCfg_ESC)
#define GetValueRxNetCfg_IC(variable)        ((variable).s.NetCfg_IC)
#define GetValueRxNetCfg_PTS(variable)       ((variable).s.NetCfg_PTS)
#define GetValueRxNetCfg_SCCM(variable)      ((variable).s.NetCfg_SCCM)
#define GetValueRxNetCfg_TCM(variable)       ((variable).s.NetCfg_TCM)
#define GetValueRxNetCfg_HaLF(variable)      ((variable).s.NetCfg_HaLF)
#define SetBitRxNetCfg_CBC_PT(variable)      ((variable).s.NetCfg_CBC_PT = 1)
#define SetBitRxNetCfg_ECM(variable)         ((variable).s.NetCfg_ECM = 1)
#define SetBitRxNetCfg_ESC(variable)         ((variable).s.NetCfg_ESC = 1)
#define SetBitRxNetCfg_IC(variable)          ((variable).s.NetCfg_IC = 1)
#define SetBitRxNetCfg_PTS(variable)         ((variable).s.NetCfg_PTS = 1)
#define SetBitRxNetCfg_SCCM(variable)        ((variable).s.NetCfg_SCCM = 1)
#define SetBitRxNetCfg_TCM(variable)         ((variable).s.NetCfg_TCM = 1)
#define SetBitRxNetCfg_HaLF(variable)        ((variable).s.NetCfg_HaLF = 1)
#define ClearBitRxNetCfg_CBC_PT(variable)    ((variable).s.NetCfg_CBC_PT = 0)
#define ClearBitRxNetCfg_ECM(variable)       ((variable).s.NetCfg_ECM = 0)
#define ClearBitRxNetCfg_ESC(variable)       ((variable).s.NetCfg_ESC = 0)
#define ClearBitRxNetCfg_IC(variable)        ((variable).s.NetCfg_IC = 0)
#define ClearBitRxNetCfg_PTS(variable)       ((variable).s.NetCfg_PTS = 0)
#define ClearBitRxNetCfg_SCCM(variable)      ((variable).s.NetCfg_SCCM = 0)
#define ClearBitRxNetCfg_TCM(variable)       ((variable).s.NetCfg_TCM = 0)
#define ClearBitRxNetCfg_HaLF(variable)      ((variable).s.NetCfg_HaLF = 0)
#define VarBitIsSetRxNetCfg_CBC_PT(variable) ((variable).s.NetCfg_CBC_PT != 0)
#define VarBitIsSetRxNetCfg_ECM(variable)    ((variable).s.NetCfg_ECM != 0)
#define VarBitIsSetRxNetCfg_ESC(variable)    ((variable).s.NetCfg_ESC != 0)
#define VarBitIsSetRxNetCfg_IC(variable)     ((variable).s.NetCfg_IC != 0)
#define VarBitIsSetRxNetCfg_PTS(variable)    ((variable).s.NetCfg_PTS != 0)
#define VarBitIsSetRxNetCfg_SCCM(variable)   ((variable).s.NetCfg_SCCM != 0)
#define VarBitIsSetRxNetCfg_TCM(variable)    ((variable).s.NetCfg_TCM != 0)
#define VarBitIsSetRxNetCfg_HaLF(variable)   ((variable).s.NetCfg_HaLF != 0)

/* Handle:    8,Name:                        ENG_CFG,Size: 32,Type:  nByte,is Container */
#define SetValueRxDISPLACEMENT(variable, value) ((variable).s.DISPLACEMENT = (value))
#define SetValueRxSpStPrsnt(variable, value) ((variable).s.SpStPrsnt = (value))
#define SetValueRxTRANS_TYPE(variable, value) ((variable).s.TRANS_TYPE = (value))
#define GetValueRxDISPLACEMENT(variable)     ((variable).s.DISPLACEMENT)
#define GetValueRxSpStPrsnt(variable)        ((variable).s.SpStPrsnt)
#define GetValueRxTRANS_TYPE(variable)       ((variable).s.TRANS_TYPE)
#define SetBitRxSpStPrsnt(variable)          ((variable).s.SpStPrsnt = 1)
#define SetBitRxTRANS_TYPE(variable)         ((variable).s.TRANS_TYPE = 1)
#define ClearBitRxSpStPrsnt(variable)        ((variable).s.SpStPrsnt = 0)
#define ClearBitRxTRANS_TYPE(variable)       ((variable).s.TRANS_TYPE = 0)
#define VarBitIsSetRxSpStPrsnt(variable)     ((variable).s.SpStPrsnt != 0)
#define VarBitIsSetRxTRANS_TYPE(variable)    ((variable).s.TRANS_TYPE != 0)

/* Handle:    9,Name:                       VIN_INFO,Size: 64,Type:  nByte,is Container */
#define SetValueRxVIN_MSG(variable, value)   ((variable).s.VIN_MSG = (value))
#define SetValueRxVIN_DATA(variable, value) \
{ \
  (variable).cVIN_INFO[1] = (value)[0]; \
  (variable).cVIN_INFO[2] = (value)[1]; \
  (variable).cVIN_INFO[3] = (value)[2]; \
  (variable).cVIN_INFO[4] = (value)[3]; \
  (variable).cVIN_INFO[5] = (value)[4]; \
  (variable).cVIN_INFO[6] = (value)[5]; \
  (variable).cVIN_INFO[7] = (value)[6]; \
}
#define GetValueRxVIN_MSG(variable)          ((variable).s.VIN_MSG)
/* attention: the following macro do not care for Intel/Motorola. To handle this issue use SetByte... */
#define GetValueRxVIN_DATA(variable)         ( & (variable).cVIN_INFO[1])

/* Handle:   10,Name:                    VehCfg7_Pkt,Size: 64,Type:  nByte,is Container */
#define SetValueRxVC_LDW(variable, value)    ((variable).s.VC_LDW = (value))
#define SetValueRxVC_DST_Present(variable, value) ((variable).s.VC_DST_Present = (value))
#define GetValueRxVC_LDW(variable)           ((variable).s.VC_LDW)
#define GetValueRxVC_DST_Present(variable)   ((variable).s.VC_DST_Present)
#define SetBitRxVC_LDW(variable)             ((variable).s.VC_LDW = 1)
#define SetBitRxVC_DST_Present(variable)     ((variable).s.VC_DST_Present = 1)
#define ClearBitRxVC_LDW(variable)           ((variable).s.VC_LDW = 0)
#define ClearBitRxVC_DST_Present(variable)   ((variable).s.VC_DST_Present = 0)
#define VarBitIsSetRxVC_LDW(variable)        ((variable).s.VC_LDW != 0)
#define VarBitIsSetRxVC_DST_Present(variable) ((variable).s.VC_DST_Present != 0)

/* Handle:   11,Name:                       REV_GEAR,Size:  1,Type:   nBit,no Container */
#define SetValueRxREV_GEAR(variable, value)  ((variable).s.REV_GEAR = (value))
#define GetValueRxREV_GEAR(variable)         ((variable).s.REV_GEAR)
#define SetBitRxREV_GEAR(variable)           ((variable).s.REV_GEAR = 1)
#define ClearBitRxREV_GEAR(variable)         ((variable).s.REV_GEAR = 0)
#define VarBitIsSetRxREV_GEAR(variable)      ((variable).s.REV_GEAR != 0)

/* Handle:   12,Name:                   EPS_MODE_REQ,Size:  3,Type:   nBit,no Container */
#define SetValueRxEPS_MODE_REQ(variable, value) ((variable).s.EPS_MODE_REQ = (value))
#define GetValueRxEPS_MODE_REQ(variable)     ((variable).s.EPS_MODE_REQ)

/* Handle:   13,Name:                       CFG_RQ_C,Size: 24,Type:  nByte,is Container */
#define SetValueRxCFG_FEATURE_C(variable, value) ((variable).s.CFG_FEATURE_C = (value))
#define SetValueRxCFG_STAT_RQ_C(variable, value) ((variable).s.CFG_STAT_RQ_C = (value))
#define SetValueRxCFG_SET_C(variable, value) ((variable).s.CFG_SET_C = (value))
#define GetValueRxCFG_FEATURE_C(variable)    ((variable).s.CFG_FEATURE_C)
#define GetValueRxCFG_STAT_RQ_C(variable)    ((variable).s.CFG_STAT_RQ_C)
#define GetValueRxCFG_SET_C(variable)        ((variable).s.CFG_SET_C)

/* Handle:   14,Name:                         CFG_RQ,Size: 24,Type:  nByte,is Container */
#define SetValueRxCFG_FEATURE(variable, value) ((variable).s.CFG_FEATURE = (value))
#define SetValueRxCFG_STAT_RQ(variable, value) ((variable).s.CFG_STAT_RQ = (value))
#define SetValueRxCFG_SET(variable, value)   ((variable).s.CFG_SET = (value))
#define GetValueRxCFG_FEATURE(variable)      ((variable).s.CFG_FEATURE)
#define GetValueRxCFG_STAT_RQ(variable)      ((variable).s.CFG_STAT_RQ)
#define GetValueRxCFG_SET(variable)          ((variable).s.CFG_SET)

/* Handle:   15,Name:                            ODO,Size: 24,Type:  nByte,no Container */
#define SetValueRxODO(variable, value) \
{ \
  (variable).s.ODO_0 = (value)[0]; \
  (variable).s.ODO_1 = (value)[1]; \
  (variable).s.ODO_2 = (value)[2]; \
}
/* attention: the following macro do not care for Intel/Motorola. To handle this issue use SetByte... */
#define GetValueRxODO(variable)              ( & (variable).cODO[0])

/* Handle:   16,Name:                          EPB_1,Size: 64,Type:  nByte,is Container */
#define SetValueRxClampForce(variable, value) \
{ \
  (variable).s.ClampForce_0 = (vuint8) (((value) >> 0) & 0xFF); \
  (variable).s.ClampForce_1 = (vbittype) (((value) >> 8) & 0x01); \
}
#define SetValueRxStopLampActive(variable, value) ((variable).s.StopLampActive = (value))
#define SetValueRxFaultStoreInfo(variable, value) ((variable).s.FaultStoreInfo = (value))
#define SetValueRxEPBSwitchPosition(variable, value) ((variable).s.EPBSwitchPosition = (value))
#define SetValueRxEPBSts(variable, value)    ((variable).s.EPBSts = (value))
#define SetValueRxAutoParkSts(variable, value) ((variable).s.AutoParkSts = (value))
#define SetValueRxEPBChimeReq(variable, value) ((variable).s.EPBChimeReq = (value))
#define SetValueRxServiceModeSts(variable, value) ((variable).s.ServiceModeSts = (value))
#define SetValueRxTextDisplay(variable, value) ((variable).s.TextDisplay = (value))
#define SetValueRxValidEPBSWPos(variable, value) ((variable).s.ValidEPBSWPos = (value))
#define SetValueRxEnableDecelerationReq(variable, value) ((variable).s.EnableDecelerationReq = (value))
#define SetValueRxFunctionLamp(variable, value) ((variable).s.FunctionLamp = (value))
#define SetValueRxEPBWarningLampReq(variable, value) ((variable).s.EPBWarningLampReq = (value))
#define SetValueRxMC_EPB_1(variable, value)  ((variable).s.MC_EPB_1 = (value))
#define SetValueRxCRC_EPB_1(variable, value) ((variable).s.CRC_EPB_1 = (value))
#define GetValueRxClampForce(variable)       ((vuint16) ((((vuint16) (variable).s.ClampForce_1 << 8) | ((vuint16) (variable).s.ClampForce_0 << 0)) & 0x01FF))
#define GetValueRxStopLampActive(variable)   ((variable).s.StopLampActive)
#define GetValueRxFaultStoreInfo(variable)   ((variable).s.FaultStoreInfo)
#define GetValueRxEPBSwitchPosition(variable) ((variable).s.EPBSwitchPosition)
#define GetValueRxEPBSts(variable)           ((variable).s.EPBSts)
#define GetValueRxAutoParkSts(variable)      ((variable).s.AutoParkSts)
#define GetValueRxEPBChimeReq(variable)      ((variable).s.EPBChimeReq)
#define GetValueRxServiceModeSts(variable)   ((variable).s.ServiceModeSts)
#define GetValueRxTextDisplay(variable)      ((variable).s.TextDisplay)
#define GetValueRxValidEPBSWPos(variable)    ((variable).s.ValidEPBSWPos)
#define GetValueRxEnableDecelerationReq(variable) ((variable).s.EnableDecelerationReq)
#define GetValueRxFunctionLamp(variable)     ((variable).s.FunctionLamp)
#define GetValueRxEPBWarningLampReq(variable) ((variable).s.EPBWarningLampReq)
#define GetValueRxMC_EPB_1(variable)         ((variable).s.MC_EPB_1)
#define GetValueRxCRC_EPB_1(variable)        ((variable).s.CRC_EPB_1)
#define SetBitRxFaultStoreInfo(variable)     ((variable).s.FaultStoreInfo = 1)
#define SetBitRxEPBSts(variable)             ((variable).s.EPBSts = 1)
#define SetBitRxServiceModeSts(variable)     ((variable).s.ServiceModeSts = 1)
#define SetBitRxValidEPBSWPos(variable)      ((variable).s.ValidEPBSWPos = 1)
#define ClearBitRxFaultStoreInfo(variable)   ((variable).s.FaultStoreInfo = 0)
#define ClearBitRxEPBSts(variable)           ((variable).s.EPBSts = 0)
#define ClearBitRxServiceModeSts(variable)   ((variable).s.ServiceModeSts = 0)
#define ClearBitRxValidEPBSWPos(variable)    ((variable).s.ValidEPBSWPos = 0)
#define VarBitIsSetRxFaultStoreInfo(variable) ((variable).s.FaultStoreInfo != 0)
#define VarBitIsSetRxEPBSts(variable)        ((variable).s.EPBSts != 0)
#define VarBitIsSetRxServiceModeSts(variable) ((variable).s.ServiceModeSts != 0)
#define VarBitIsSetRxValidEPBSWPos(variable) ((variable).s.ValidEPBSWPos != 0)

/* Handle:   17,Name:                     ECM_A3_PKT,Size: 64,Type:  nByte,is Container */
#define SetValueRxESS_ENG_ST(variable, value) ((variable).s.ESS_ENG_ST = (value))
#define GetValueRxESS_ENG_ST(variable)       ((variable).s.ESS_ENG_ST)

/* Handle:   18,Name:                     EngOilTemp,Size:  8,Type:   Byte,no Container */
#define SetValueRxEngOilTemp(variable, value) ((variable).s.EngOilTemp = (value))
#define GetValueRxEngOilTemp(variable)       ((variable).s.EngOilTemp)

/* Handle:   19,Name:                    PTS_StrCtrl,Size: 64,Type:  nByte,is Container */
#define SetValueRxTorqueOverlaySteeringReq(variable, value) \
{ \
  (variable).s.TorqueOverlaySteeringReq_0 = (vuint8) (((value) >> 0) & 0xFF); \
  (variable).s.TorqueOverlaySteeringReq_1 = (vbittype) (((value) >> 8) & 0x07); \
}
#define SetValueRxManeuverPhase(variable, value) ((variable).s.ManeuverPhase = (value))
#define SetValueRxPTSDriveStyleReqSts(variable, value) ((variable).s.PTSDriveStyleReqSts = (value))
#define SetValueRxPTSSystemFault(variable, value) ((variable).s.PTSSystemFault = (value))
#define SetValueRxTorqueOverlayIntActivation(variable, value) ((variable).s.TorqueOverlayIntActivation = (value))
#define SetValueRxPTS_ManoeuvreMode(variable, value) ((variable).s.PTS_ManoeuvreMode = (value))
#define SetValueRxMC_29Fh(variable, value)   ((variable).s.MC_29Fh = (value))
#define SetValueRxCRC_29Fh(variable, value)  ((variable).s.CRC_29Fh = (value))
#define GetValueRxTorqueOverlaySteeringReq(variable) ((vuint16) ((((vuint16) (variable).s.TorqueOverlaySteeringReq_1 << 8) | ((vuint16) (variable).s.TorqueOverlaySteeringReq_0 << 0)) & 0x07FF))
#define GetValueRxManeuverPhase(variable)    ((variable).s.ManeuverPhase)
#define GetValueRxPTSDriveStyleReqSts(variable) ((variable).s.PTSDriveStyleReqSts)
#define GetValueRxPTSSystemFault(variable)   ((variable).s.PTSSystemFault)
#define GetValueRxTorqueOverlayIntActivation(variable) ((variable).s.TorqueOverlayIntActivation)
#define GetValueRxPTS_ManoeuvreMode(variable) ((variable).s.PTS_ManoeuvreMode)
#define GetValueRxMC_29Fh(variable)          ((variable).s.MC_29Fh)
#define GetValueRxCRC_29Fh(variable)         ((variable).s.CRC_29Fh)
#define SetBitRxManeuverPhase(variable)      ((variable).s.ManeuverPhase = 1)
#define SetBitRxPTSDriveStyleReqSts(variable) ((variable).s.PTSDriveStyleReqSts = 1)
#define SetBitRxPTSSystemFault(variable)     ((variable).s.PTSSystemFault = 1)
#define SetBitRxTorqueOverlayIntActivation(variable) ((variable).s.TorqueOverlayIntActivation = 1)
#define ClearBitRxManeuverPhase(variable)    ((variable).s.ManeuverPhase = 0)
#define ClearBitRxPTSDriveStyleReqSts(variable) ((variable).s.PTSDriveStyleReqSts = 0)
#define ClearBitRxPTSSystemFault(variable)   ((variable).s.PTSSystemFault = 0)
#define ClearBitRxTorqueOverlayIntActivation(variable) ((variable).s.TorqueOverlayIntActivation = 0)
#define VarBitIsSetRxManeuverPhase(variable) ((variable).s.ManeuverPhase != 0)
#define VarBitIsSetRxPTSDriveStyleReqSts(variable) ((variable).s.PTSDriveStyleReqSts != 0)
#define VarBitIsSetRxPTSSystemFault(variable) ((variable).s.PTSSystemFault != 0)
#define VarBitIsSetRxTorqueOverlayIntActivation(variable) ((variable).s.TorqueOverlayIntActivation != 0)

/* Handle:   20,Name:                        DST_TOC,Size: 64,Type:  nByte,is Container */
#define SetValueRxTO_Req(variable, value) \
{ \
  (variable).s.TO_Req_0 = (vuint8) (((value) >> 0) & 0xFF); \
  (variable).s.TO_Req_1 = (vbittype) (((value) >> 8) & 0x07); \
}
#define SetValueRxTOC_Fault(variable, value) ((variable).s.TOC_Fault = (value))
#define SetValueRxTOC_Act_Req(variable, value) ((variable).s.TOC_Act_Req = (value))
#define SetValueRxBrkPrss_One(variable, value) \
{ \
  (variable).s.BrkPrss_One_0 = (vuint8) (((value) >> 0) & 0xFF); \
  (variable).s.BrkPrss_One_1 = (vbittype) (((value) >> 8) & 0x03); \
}
#define SetValueRxBrkPrss_Two(variable, value) \
{ \
  (variable).s.BrkPrss_Two_0 = (vuint8) (((value) >> 0) & 0xFF); \
  (variable).s.BrkPrss_Two_1 = (vbittype) (((value) >> 8) & 0x03); \
}
#define SetValueRxSyncPos(variable, value)   ((variable).s.SyncPos = (value))
#define SetValueRxTOC_Sts(variable, value)   ((variable).s.TOC_Sts = (value))
#define SetValueRxMC_294h(variable, value)   ((variable).s.MC_294h = (value))
#define SetValueRxCRC_294h(variable, value)  ((variable).s.CRC_294h = (value))
#define GetValueRxTO_Req(variable)           ((vuint16) ((((vuint16) (variable).s.TO_Req_1 << 8) | ((vuint16) (variable).s.TO_Req_0 << 0)) & 0x07FF))
#define GetValueRxTOC_Fault(variable)        ((variable).s.TOC_Fault)
#define GetValueRxTOC_Act_Req(variable)      ((variable).s.TOC_Act_Req)
#define GetValueRxBrkPrss_One(variable)      ((vuint16) ((((vuint16) (variable).s.BrkPrss_One_1 << 8) | ((vuint16) (variable).s.BrkPrss_One_0 << 0)) & 0x03FF))
#define GetValueRxBrkPrss_Two(variable)      ((vuint16) ((((vuint16) (variable).s.BrkPrss_Two_1 << 8) | ((vuint16) (variable).s.BrkPrss_Two_0 << 0)) & 0x03FF))
#define GetValueRxSyncPos(variable)          ((variable).s.SyncPos)
#define GetValueRxTOC_Sts(variable)          ((variable).s.TOC_Sts)
#define GetValueRxMC_294h(variable)          ((variable).s.MC_294h)
#define GetValueRxCRC_294h(variable)         ((variable).s.CRC_294h)

/* Handle:   21,Name:                   HaLF_StrCtrl,Size: 48,Type:  nByte,is Container */
#define SetValueRxMotorTorqueOverlaySteeringReq(variable, value) \
{ \
  (variable).s.MotorTorqueOverlaySteeringReq_0 = (vuint8) (((value) >> 0) & 0xFF); \
  (variable).s.MotorTorqueOverlaySteeringReq_1 = (vbittype) (((value) >> 8) & 0x07); \
}
#define SetValueRxMTO_HALFSystemSts(variable, value) ((variable).s.MTO_HALFSystemSts = (value))
#define SetValueRxMotorTorqueOverlayIntActivation(variable, value) ((variable).s.MotorTorqueOverlayIntActivation = (value))
#define SetValueRxMTO_HALFDriveStyleSts(variable, value) ((variable).s.MTO_HALFDriveStyleSts = (value))
#define SetValueRxMC_292h(variable, value)   ((variable).s.MC_292h = (value))
#define SetValueRxCRC_292h(variable, value)  ((variable).s.CRC_292h = (value))
#define GetValueRxMotorTorqueOverlaySteeringReq(variable) ((vuint16) ((((vuint16) (variable).s.MotorTorqueOverlaySteeringReq_1 << 8) | ((vuint16) (variable).s.MotorTorqueOverlaySteeringReq_0 << 0)) & 0x07FF))
#define GetValueRxMTO_HALFSystemSts(variable) ((variable).s.MTO_HALFSystemSts)
#define GetValueRxMotorTorqueOverlayIntActivation(variable) ((variable).s.MotorTorqueOverlayIntActivation)
#define GetValueRxMTO_HALFDriveStyleSts(variable) ((variable).s.MTO_HALFDriveStyleSts)
#define GetValueRxMC_292h(variable)          ((variable).s.MC_292h)
#define GetValueRxCRC_292h(variable)         ((variable).s.CRC_292h)
#define SetBitRxMTO_HALFSystemSts(variable)  ((variable).s.MTO_HALFSystemSts = 1)
#define SetBitRxMotorTorqueOverlayIntActivation(variable) ((variable).s.MotorTorqueOverlayIntActivation = 1)
#define ClearBitRxMTO_HALFSystemSts(variable) ((variable).s.MTO_HALFSystemSts = 0)
#define ClearBitRxMotorTorqueOverlayIntActivation(variable) ((variable).s.MotorTorqueOverlayIntActivation = 0)
#define VarBitIsSetRxMTO_HALFSystemSts(variable) ((variable).s.MTO_HALFSystemSts != 0)
#define VarBitIsSetRxMotorTorqueOverlayIntActivation(variable) ((variable).s.MotorTorqueOverlayIntActivation != 0)

/* Handle:   22,Name:                   WHEEL_SPEED2,Size: 32,Type:  nByte,is Container */
#define SetValueRxWheelRPM_FL(variable, value) \
{ \
  (variable).s.WheelRPM_FL_0 = (vuint8) (((value) >> 0) & 0xFF); \
  (variable).s.WheelRPM_FL_1 = (vuint8) (((value) >> 8) & 0xFF); \
}
#define SetValueRxWheelRPM_FR(variable, value) \
{ \
  (variable).s.WheelRPM_FR_0 = (vuint8) (((value) >> 0) & 0xFF); \
  (variable).s.WheelRPM_FR_1 = (vuint8) (((value) >> 8) & 0xFF); \
}
#define GetValueRxWheelRPM_FL(variable)      ((vuint16) ((((vuint16) (variable).s.WheelRPM_FL_1 << 8) | ((vuint16) (variable).s.WheelRPM_FL_0 << 0)) & 0xFFFF))
#define GetValueRxWheelRPM_FR(variable)      ((vuint16) ((((vuint16) (variable).s.WheelRPM_FR_1 << 8) | ((vuint16) (variable).s.WheelRPM_FR_0 << 0)) & 0xFFFF))

/* Handle:   23,Name:                  AirTemp_Outsd,Size:  8,Type:   Byte,no Container */
#define SetValueRxAirTemp_Outsd(variable, value) ((variable).s.AirTemp_Outsd = (value))
#define GetValueRxAirTemp_Outsd(variable)    ((variable).s.AirTemp_Outsd)

/* Handle:   24,Name:                   AMB_TEMP_AVG,Size: 16,Type:   Word,no Container */
#define SetValueRxAMB_TEMP_AVG(variable, value) \
{ \
  (variable).s.AMB_TEMP_AVG_0 = (vuint8) (((value) >> 0) & 0xFF); \
  (variable).s.AMB_TEMP_AVG_1 = (vuint8) (((value) >> 8) & 0xFF); \
}
#define GetValueRxAMB_TEMP_AVG(variable)     ((vuint16) ((((vuint16) (variable).s.AMB_TEMP_AVG_1 << 8) | ((vuint16) (variable).s.AMB_TEMP_AVG_0 << 0)) & 0xFFFF))

/* Handle:   25,Name:                      BATT_VOLT,Size:  8,Type:   Byte,no Container */
#define SetValueRxBATT_VOLT(variable, value) ((variable).s.BATT_VOLT = (value))
#define GetValueRxBATT_VOLT(variable)        ((variable).s.BATT_VOLT)

/* Handle:   26,Name:                  TRNS_STAT_PKT,Size: 64,Type:  nByte,is Container */
#define SetValueRxPRND_STAT(variable, value) ((variable).s.PRND_STAT = (value))
#define GetValueRxPRND_STAT(variable)        ((variable).s.PRND_STAT)

/* Handle:   27,Name:                    WHEEL_SPEED,Size: 64,Type:  nByte,is Container */
#define SetValueRxWhlRPM_FL(variable, value) \
{ \
  (variable).s.WhlRPM_FL_0 = (vuint8) (((value) >> 0) & 0xFF); \
  (variable).s.WhlRPM_FL_1 = (vbittype) (((value) >> 8) & 0x3F); \
}
#define SetValueRxWhlRPM_FR(variable, value) \
{ \
  (variable).s.WhlRPM_FR_0 = (vuint8) (((value) >> 0) & 0xFF); \
  (variable).s.WhlRPM_FR_1 = (vbittype) (((value) >> 8) & 0x3F); \
}
#define SetValueRxWhlRPM_RL(variable, value) \
{ \
  (variable).s.WhlRPM_RL_0 = (vuint8) (((value) >> 0) & 0xFF); \
  (variable).s.WhlRPM_RL_1 = (vbittype) (((value) >> 8) & 0x3F); \
}
#define SetValueRxWhlDir_RL_Stat(variable, value) ((variable).s.WhlDir_RL_Stat = (value))
#define SetValueRxWhlRPM_RR(variable, value) \
{ \
  (variable).s.WhlRPM_RR_0 = (vuint8) (((value) >> 0) & 0xFF); \
  (variable).s.WhlRPM_RR_1 = (vbittype) (((value) >> 8) & 0x3F); \
}
#define SetValueRxWhlDir_RR_Stat(variable, value) ((variable).s.WhlDir_RR_Stat = (value))
#define GetValueRxWhlRPM_FL(variable)        ((vuint16) ((((vuint16) (variable).s.WhlRPM_FL_1 << 8) | ((vuint16) (variable).s.WhlRPM_FL_0 << 0)) & 0x3FFF))
#define GetValueRxWhlRPM_FR(variable)        ((vuint16) ((((vuint16) (variable).s.WhlRPM_FR_1 << 8) | ((vuint16) (variable).s.WhlRPM_FR_0 << 0)) & 0x3FFF))
#define GetValueRxWhlRPM_RL(variable)        ((vuint16) ((((vuint16) (variable).s.WhlRPM_RL_1 << 8) | ((vuint16) (variable).s.WhlRPM_RL_0 << 0)) & 0x3FFF))
#define GetValueRxWhlDir_RL_Stat(variable)   ((variable).s.WhlDir_RL_Stat)
#define GetValueRxWhlRPM_RR(variable)        ((vuint16) ((((vuint16) (variable).s.WhlRPM_RR_1 << 8) | ((vuint16) (variable).s.WhlRPM_RR_0 << 0)) & 0x3FFF))
#define GetValueRxWhlDir_RR_Stat(variable)   ((variable).s.WhlDir_RR_Stat)

/* Handle:   28,Name:                     VehAccel_X,Size:  8,Type:   Byte,no Container */
#define SetValueRxVehAccel_X(variable, value) ((variable).s.VehAccel_X = (value))
#define GetValueRxVehAccel_X(variable)       ((variable).s.VehAccel_X)

/* Handle:   29,Name:                     VehAccel_Y,Size:  8,Type:   Byte,no Container */
#define SetValueRxVehAccel_Y(variable, value) ((variable).s.VehAccel_Y = (value))
#define GetValueRxVehAccel_Y(variable)       ((variable).s.VehAccel_Y)

/* Handle:   30,Name:                       Gear_Pkt,Size: 16,Type:   Word,is Container */
#define SetValueRxGr(variable, value)        ((variable).s.Gr = (value))
#define GetValueRxGr(variable)               ((variable).s.Gr)

/* Handle:   31,Name:                    ORC_YRS_PKT,Size: 64,Type:  nByte,is Container */
#define SetValueRxLongAcceleration(variable, value) \
{ \
  (variable).s.LongAcceleration_0 = (vuint8) (((value) >> 0) & 0xFF); \
  (variable).s.LongAcceleration_1 = (vbittype) (((value) >> 8) & 0x0F); \
}
#define GetValueRxLongAcceleration(variable) ((vuint16) ((((vuint16) (variable).s.LongAcceleration_1 << 8) | ((vuint16) (variable).s.LongAcceleration_0 << 0)) & 0x0FFF))

/* Handle:   32,Name:                   ESP_WHL_PULS,Size: 32,Type:  nByte,is Container */
#define SetValueRxWhlPlsCnt_FL(variable, value) ((variable).s.WhlPlsCnt_FL = (value))
#define SetValueRxWhlPlsCnt_FR(variable, value) ((variable).s.WhlPlsCnt_FR = (value))
#define SetValueRxWhlPlsCnt_RL(variable, value) ((variable).s.WhlPlsCnt_RL = (value))
#define SetValueRxWhlPlsCnt_RR(variable, value) ((variable).s.WhlPlsCnt_RR = (value))
#define GetValueRxWhlPlsCnt_FL(variable)     ((variable).s.WhlPlsCnt_FL)
#define GetValueRxWhlPlsCnt_FR(variable)     ((variable).s.WhlPlsCnt_FR)
#define GetValueRxWhlPlsCnt_RL(variable)     ((variable).s.WhlPlsCnt_RL)
#define GetValueRxWhlPlsCnt_RR(variable)     ((variable).s.WhlPlsCnt_RR)

/* Handle:   33,Name:                  VEH_SPEED_PKT,Size: 64,Type:  nByte,is Container */
#define SetValueRxVEH_SPEED(variable, value) \
{ \
  (variable).s.VEH_SPEED_0 = (vuint8) (((value) >> 0) & 0xFF); \
  (variable).s.VEH_SPEED_1 = (vuint8) (((value) >> 8) & 0xFF); \
}
#define SetValueRxMC_VEH_SPEED(variable, value) ((variable).s.MC_VEH_SPEED = (value))
#define SetValueRxCRC_VEH_SPEED(variable, value) ((variable).s.CRC_VEH_SPEED = (value))
#define GetValueRxVEH_SPEED(variable)        ((vuint16) ((((vuint16) (variable).s.VEH_SPEED_1 << 8) | ((vuint16) (variable).s.VEH_SPEED_0 << 0)) & 0xFFFF))
#define GetValueRxMC_VEH_SPEED(variable)     ((variable).s.MC_VEH_SPEED)
#define GetValueRxCRC_VEH_SPEED(variable)    ((variable).s.CRC_VEH_SPEED)

/* Handle:   34,Name:                   VehStart_PKT,Size: 16,Type:   Word,is Container */
#define SetValueRxCmdIgnStat(variable, value) ((variable).s.CmdIgnStat = (value))
#define GetValueRxCmdIgnStat(variable)       ((variable).s.CmdIgnStat)

/* Handle:   35,Name:                     ECM_A1_PKT,Size: 64,Type:  nByte,is Container */
#define SetValueRxEngRPM(variable, value) \
{ \
  (variable).s.EngRPM_0 = (vuint8) (((value) >> 0) & 0xFF); \
  (variable).s.EngRPM_1 = (vuint8) (((value) >> 8) & 0xFF); \
}
#define GetValueRxEngRPM(variable)           ((vuint16) ((((vuint16) (variable).s.EngRPM_1 << 8) | ((vuint16) (variable).s.EngRPM_0 << 0)) & 0xFFFF))

/* Handle:   36,Name:                         LRW_ST,Size: 64,Type:  nByte,is Container */
#define SetValueRxLRW(variable, value) \
{ \
  (variable).s.LRW_0 = (vuint8) (((value) >> 0) & 0xFF); \
  (variable).s.LRW_1 = (vbittype) (((value) >> 8) & 0x3F); \
}
#define SetValueRxVLRW(variable, value) \
{ \
  (variable).s.VLRW_0 = (vuint8) (((value) >> 0) & 0xFF); \
  (variable).s.VLRW_1 = (vbittype) (((value) >> 8) & 0x3F); \
}
#define SetValueRxLRW_RHP(variable, value)   ((variable).s.LRW_RHP = (value))
#define GetValueRxLRW(variable)              ((vuint16) ((((vuint16) (variable).s.LRW_1 << 8) | ((vuint16) (variable).s.LRW_0 << 0)) & 0x3FFF))
#define GetValueRxVLRW(variable)             ((vuint16) ((((vuint16) (variable).s.VLRW_1 << 8) | ((vuint16) (variable).s.VLRW_0 << 0)) & 0x3FFF))
#define GetValueRxLRW_RHP(variable)          ((variable).s.LRW_RHP)

/* Handle:   -1,Name:                             NM,Size: 32,Type:  nByte,is Container */
#define SetValueRxNM_Mode(variable, value)   ((variable).s.NM_Mode = (value))
#define SetValueRxNM_Successor(variable, value) ((variable).s.NM_Successor = (value))
#define SetValueRxNM_Ud_Launch(variable, value) ((variable).s.NM_Ud_Launch = (value))
#define SetValueRxNM_Sleep_Ack(variable, value) ((variable).s.NM_Sleep_Ack = (value))
#define SetValueRxNM_Sleep_Ind(variable, value) ((variable).s.NM_Sleep_Ind = (value))
#define SetValueRxNM_Ud_Srv(variable, value) ((variable).s.NM_Ud_Srv = (value))
#define GetValueRxNM_Mode(variable)          ((variable).s.NM_Mode)
#define GetValueRxNM_Successor(variable)     ((variable).s.NM_Successor)
#define GetValueRxNM_Ud_Launch(variable)     ((variable).s.NM_Ud_Launch)
#define GetValueRxNM_Sleep_Ack(variable)     ((variable).s.NM_Sleep_Ack)
#define GetValueRxNM_Sleep_Ind(variable)     ((variable).s.NM_Sleep_Ind)
#define GetValueRxNM_Ud_Srv(variable)        ((variable).s.NM_Ud_Srv)
#define SetBitRxNM_Sleep_Ack(variable)       ((variable).s.NM_Sleep_Ack = 1)
#define SetBitRxNM_Sleep_Ind(variable)       ((variable).s.NM_Sleep_Ind = 1)
#define ClearBitRxNM_Sleep_Ack(variable)     ((variable).s.NM_Sleep_Ack = 0)
#define ClearBitRxNM_Sleep_Ind(variable)     ((variable).s.NM_Sleep_Ind = 0)
#define VarBitIsSetRxNM_Sleep_Ack(variable)  ((variable).s.NM_Sleep_Ack != 0)
#define VarBitIsSetRxNM_Sleep_Ind(variable)  ((variable).s.NM_Sleep_Ind != 0)

/* Handle:   -1,Name:                      Awake_EPS,Size: 24,Type:  nByte,is Container */
#define SetValueRxAwake_NwSt(variable, value) ((variable).s.Awake_NwSt = (value))
#define SetValueRxAwake_Diag_Actv(variable, value) ((variable).s.Awake_Diag_Actv = (value))
#define SetValueRxAwake_Rampout(variable, value) ((variable).s.Awake_Rampout = (value))
#define SetValueRxAwake_VSS_high(variable, value) ((variable).s.Awake_VSS_high = (value))
#define SetValueRxAwake_EngRPM_high(variable, value) ((variable).s.Awake_EngRPM_high = (value))
#define SetValueRxAwake_IgnHigh(variable, value) ((variable).s.Awake_IgnHigh = (value))
#define GetValueRxAwake_NwSt(variable)       ((variable).s.Awake_NwSt)
#define GetValueRxAwake_Diag_Actv(variable)  ((variable).s.Awake_Diag_Actv)
#define GetValueRxAwake_Rampout(variable)    ((variable).s.Awake_Rampout)
#define GetValueRxAwake_VSS_high(variable)   ((variable).s.Awake_VSS_high)
#define GetValueRxAwake_EngRPM_high(variable) ((variable).s.Awake_EngRPM_high)
#define GetValueRxAwake_IgnHigh(variable)    ((variable).s.Awake_IgnHigh)
#define SetBitRxAwake_NwSt(variable)         ((variable).s.Awake_NwSt = 1)
#define SetBitRxAwake_Diag_Actv(variable)    ((variable).s.Awake_Diag_Actv = 1)
#define SetBitRxAwake_Rampout(variable)      ((variable).s.Awake_Rampout = 1)
#define SetBitRxAwake_VSS_high(variable)     ((variable).s.Awake_VSS_high = 1)
#define SetBitRxAwake_EngRPM_high(variable)  ((variable).s.Awake_EngRPM_high = 1)
#define SetBitRxAwake_IgnHigh(variable)      ((variable).s.Awake_IgnHigh = 1)
#define ClearBitRxAwake_NwSt(variable)       ((variable).s.Awake_NwSt = 0)
#define ClearBitRxAwake_Diag_Actv(variable)  ((variable).s.Awake_Diag_Actv = 0)
#define ClearBitRxAwake_Rampout(variable)    ((variable).s.Awake_Rampout = 0)
#define ClearBitRxAwake_VSS_high(variable)   ((variable).s.Awake_VSS_high = 0)
#define ClearBitRxAwake_EngRPM_high(variable) ((variable).s.Awake_EngRPM_high = 0)
#define ClearBitRxAwake_IgnHigh(variable)    ((variable).s.Awake_IgnHigh = 0)
#define VarBitIsSetRxAwake_NwSt(variable)    ((variable).s.Awake_NwSt != 0)
#define VarBitIsSetRxAwake_Diag_Actv(variable) ((variable).s.Awake_Diag_Actv != 0)
#define VarBitIsSetRxAwake_Rampout(variable) ((variable).s.Awake_Rampout != 0)
#define VarBitIsSetRxAwake_VSS_high(variable) ((variable).s.Awake_VSS_high != 0)
#define VarBitIsSetRxAwake_EngRPM_high(variable) ((variable).s.Awake_EngRPM_high != 0)
#define VarBitIsSetRxAwake_IgnHigh(variable) ((variable).s.Awake_IgnHigh != 0)

/* Handle:   -1,Name:                     Wakeup_EPS,Size: 24,Type:  nByte,is Container */
#define SetValueRxWakeupRsn_EPS(variable, value) ((variable).s.WakeupRsn_EPS = (value))
#define SetValueRxWakeupCnt(variable, value) ((variable).s.WakeupCnt = (value))
#define GetValueRxWakeupRsn_EPS(variable)    ((variable).s.WakeupRsn_EPS)
#define GetValueRxWakeupCnt(variable)        ((variable).s.WakeupCnt)

/* Handle:   -1,Name:                          Nw_Id,Size:  8,Type:   Byte,no Container */
#define SetValueRxNw_Id(variable, value)     ((variable).s.Nw_Id = (value))
#define GetValueRxNw_Id(variable)            ((variable).s.Nw_Id)



/* -----------------------------------------------------------------------------
    &&&~ Indication flags
 ----------------------------------------------------------------------------- */

#define Ind_VehCfg5_Pkt                      (DbkRxIndicationFlags.w[0].b0)
#define Ind_EC_ECUCfg6_Stat                  (DbkRxIndicationFlags.w[0].b1)
#define Ind_EC_Steering                      (DbkRxIndicationFlags.w[0].b2)
#define Ind_VehCfg4_Pkt                      (DbkRxIndicationFlags.w[0].b3)
#define Ind_VehCfg3_Pkt                      (DbkRxIndicationFlags.w[0].b4)
#define Ind_VehCfg2_Pkt                      (DbkRxIndicationFlags.w[0].b5)
#define Ind_VehCfg1_Pkt                      (DbkRxIndicationFlags.w[0].b6)
#define Ind_NET_CFG_DATA_PT                  (DbkRxIndicationFlags.w[0].b7)
#define Ind_ENG_CFG                          (DbkRxIndicationFlags.w[0].b10)
#define Ind_VIN_INFO                         (DbkRxIndicationFlags.w[0].b11)
#define Ind_VehCfg7_Pkt                      (DbkRxIndicationFlags.w[0].b12)
#define Ind_REV_GEAR                         (DbkRxIndicationFlags.w[0].b13)
#define Ind_EPS_MODE_REQ                     (DbkRxIndicationFlags.w[0].b14)
#define Ind_CFG_RQ_C                         (DbkRxIndicationFlags.w[0].b15)
#define Ind_CFG_RQ                           (DbkRxIndicationFlags.w[0].b16)
#define Ind_ODO                              (DbkRxIndicationFlags.w[0].b17)
#define Ind_EPB_1                            (DbkRxIndicationFlags.w[0].b20)
#define Ind_ECM_A3_PKT                       (DbkRxIndicationFlags.w[0].b21)
#define Ind_EngOilTemp                       (DbkRxIndicationFlags.w[0].b22)
#define Ind_PTS_StrCtrl                      (DbkRxIndicationFlags.w[0].b23)
#define Ind_DST_TOC                          (DbkRxIndicationFlags.w[0].b24)
#define Ind_HaLF_StrCtrl                     (DbkRxIndicationFlags.w[0].b25)
#define Ind_WHEEL_SPEED2                     (DbkRxIndicationFlags.w[0].b26)
#define Ind_AirTemp_Outsd                    (DbkRxIndicationFlags.w[0].b27)
#define Ind_AMB_TEMP_AVG                     (DbkRxIndicationFlags.w[0].b30)
#define Ind_BATT_VOLT                        (DbkRxIndicationFlags.w[0].b31)
#define Ind_TRNS_STAT_PKT                    (DbkRxIndicationFlags.w[0].b32)
#define Ind_WHEEL_SPEED                      (DbkRxIndicationFlags.w[0].b33)
#define Ind_VehAccel_X                       (DbkRxIndicationFlags.w[0].b34)
#define Ind_VehAccel_Y                       (DbkRxIndicationFlags.w[0].b35)
#define Ind_Gear_Pkt                         (DbkRxIndicationFlags.w[0].b36)
#define Ind_ORC_YRS_PKT                      (DbkRxIndicationFlags.w[0].b37)
#define Ind_ESP_WHL_PULS                     (DbkRxIndicationFlags.w[1].b0)
#define Ind_VEH_SPEED_PKT                    (DbkRxIndicationFlags.w[1].b1)
#define Ind_VehStart_PKT                     (DbkRxIndicationFlags.w[1].b2)
#define Ind_ECM_A1_PKT                       (DbkRxIndicationFlags.w[1].b3)
#define Ind_LRW_ST                           (DbkRxIndicationFlags.w[1].b4)






/* begin Fileversion check */
#ifndef SKIP_MAGIC_NUMBER
#ifdef MAGIC_NUMBER
  #if MAGIC_NUMBER != 103168731
      #error "The magic number of the generated file <C:\Synergy_WorkArea\ESG_Dev_65\Chrysler_LWR_EPS_TMS570-tzj9qy\Chrysler_LWR_EPS_TMS570\SwProject\Source\_GenData\dbk_par.h> is different. Please check time and date of generated files!"
  #endif
#else
  #define MAGIC_NUMBER 103168731
#endif  /* MAGIC_NUMBER */
#endif  /* SKIP_MAGIC_NUMBER */

/* end Fileversion check */

#endif /* __DBK_PAR_H__ */
